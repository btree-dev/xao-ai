{"id":"45e29f9f8a573d840ebec7c3fb8b2c59","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     * See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string internal constant _TABLE_URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE, true);\n    }\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64Url `string` representation.\n     * Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648].\n     */\n    function encodeURL(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE_URL, false);\n    }\n\n    /**\n     * @dev Internal table-agnostic conversion\n     */\n    function _encode(bytes memory data, string memory table, bool withPadding) private pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // If padding is enabled, the final length should be `bytes` data length divided by 3 rounded up and then\n        // multiplied by 4 so that it leaves room for padding the last chunk\n        // - `data.length + 2`  -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // - `4 *`              -> 4 characters for each chunk\n        // This is equivalent to: 4 * Math.ceil(data.length / 3)\n        //\n        // If padding is disabled, the final length should be `bytes` data length multiplied by 4/3 rounded up as\n        // opposed to when padding is required to fill the last chunk.\n        // - `4 * data.length`  -> 4 characters for each chunk\n        // - ` + 2`             -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // This is equivalent to: Math.ceil((4 * data.length) / 3)\n        uint256 resultLength = withPadding ? 4 * ((data.length + 2) / 3) : (4 * data.length + 2) / 3;\n\n        string memory result = new string(resultLength);\n\n        assembly (\"memory-safe\") {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {} {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            if withPadding {\n                // When data `bytes` is not exactly 3 bytes long\n                // it is padded with `=` characters at the end\n                switch mod(mload(data), 3)\n                case 1 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                    mstore8(sub(resultPtr, 2), 0x3d)\n                }\n                case 2 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                }\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/PerformanceAgreementNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\n\n/// @title PerformanceAgreementNFT\n/// @notice ERC721 token representing a performance agreement between an artist and a venue.\n/// @dev Each token stores agreement metadata on-chain and can produce a JSON tokenURI.\ncontract PerformanceAgreementNFT is ERC721URIStorage, Ownable, EIP712 {\n    using Strings for uint256;\n\n    struct Agreement {\n        string venueName;\n        string venueAddress; // Physical address\n        uint64 startTime; // unix timestamp of event start\n        uint32 durationMinutes; // duration in minutes\n        string artistSocialHandle; // e.g. twitter @artist\n        string venueSocialHandle; // e.g. twitter @venue\n        address artistWallet;\n        address venueWallet;\n        uint256 paymentAmountUsdCents; // Agreed payment in USD cents\n        Status status; // Lifecycle status\n        bool paymentRecorded; // true once payment acknowledged\n    }\n\n    enum Status { Scheduled, Completed, Disputed, Resolved }\n\n    struct AgreementInput {\n        string venueName;\n        string venueAddress;\n        uint64 startTime;\n        uint32 durationMinutes;\n        string artistSocialHandle;\n        string venueSocialHandle;\n        address artistWallet;\n        address venueWallet;\n        uint256 paymentAmountUsdCents;\n    }\n\n    bytes32 private constant AGREEMENT_TYPEHASH = keccak256(\n        \"AgreementInput(string venueName,string venueAddress,uint64 startTime,uint32 durationMinutes,string artistSocialHandle,string venueSocialHandle,address artistWallet,address venueWallet,uint256 paymentAmountUsdCents)\"\n    );\n\n    // tokenId => Agreement\n    mapping(uint256 => Agreement) private _agreements;\n    uint256 private _nextId = 1;\n\n    event AgreementCreated(\n        uint256 indexed tokenId,\n        address indexed artistWallet,\n        address indexed venueWallet,\n        string venueName,\n        uint64 startTime,\n        uint256 paymentAmountUsdCents\n    );\n    event AgreementSignedAndMinted(uint256 indexed tokenId, address indexed venueWallet, address indexed artistWallet);\n    event StatusChanged(uint256 indexed tokenId, Status previous, Status current, address actor);\n    event PaymentRecorded(uint256 indexed tokenId, uint256 amountUsdCents, address recorder);\n\n    constructor() ERC721(\"PerformanceAgreement\", \"PERFAGRM\") Ownable(msg.sender) EIP712(\"PerformanceAgreementNFT\", \"1\") {}\n\n    /// @notice Create a new performance agreement NFT.\n    function createAgreement(\n        string calldata venueName,\n        string calldata venueAddress,\n        uint64 startTime,\n        uint32 durationMinutes,\n        string calldata artistSocialHandle,\n        string calldata venueSocialHandle,\n        address artistWallet,\n        address venueWallet,\n        uint256 paymentAmountUsdCents\n    ) external returns (uint256 tokenId) {\n        require(artistWallet != address(0), \"Artist wallet zero\");\n        require(venueWallet != address(0), \"Venue wallet zero\");\n        require(startTime > block.timestamp - 1 days, \"Start time too old\");\n        require(durationMinutes > 0 && durationMinutes <= 24 * 60, \"Invalid duration\");\n        require(paymentAmountUsdCents > 0, \"Payment must be > 0\");\n\n        tokenId = _nextId++;\n        _agreements[tokenId] = Agreement({\n            venueName: venueName,\n            venueAddress: venueAddress,\n            startTime: startTime,\n            durationMinutes: durationMinutes,\n            artistSocialHandle: artistSocialHandle,\n            venueSocialHandle: venueSocialHandle,\n            artistWallet: artistWallet,\n            venueWallet: venueWallet,\n            paymentAmountUsdCents: paymentAmountUsdCents,\n            status: Status.Scheduled,\n            paymentRecorded: false\n        });\n\n        _safeMint(msg.sender, tokenId);\n        emit AgreementCreated(tokenId, artistWallet, venueWallet, venueName, startTime, paymentAmountUsdCents);\n    }\n\n    modifier onlyParticipant(uint256 tokenId) {\n        require(_ownerOf(tokenId) != address(0), \"Nonexistent token\");\n        Agreement memory a = _agreements[tokenId];\n        require(msg.sender == a.artistWallet || msg.sender == a.venueWallet, \"Not participant\");\n        _;\n    }\n\n    function markCompleted(uint256 tokenId) external onlyParticipant(tokenId) {\n        Agreement storage a = _agreements[tokenId];\n        require(a.status == Status.Scheduled, \"Bad status\");\n        Status previous = a.status;\n        a.status = Status.Completed;\n        emit StatusChanged(tokenId, previous, a.status, msg.sender);\n    }\n\n    function raiseDispute(uint256 tokenId) external onlyParticipant(tokenId) {\n        Agreement storage a = _agreements[tokenId];\n        require(a.status == Status.Completed, \"Must be completed\");\n        Status previous = a.status;\n        a.status = Status.Disputed;\n        emit StatusChanged(tokenId, previous, a.status, msg.sender);\n    }\n\n    function resolveDispute(uint256 tokenId) external onlyOwner {\n        Agreement storage a = _agreements[tokenId];\n        require(a.status == Status.Disputed, \"Not disputed\");\n        Status previous = a.status;\n        a.status = Status.Resolved;\n        emit StatusChanged(tokenId, previous, a.status, msg.sender);\n    }\n\n    function recordPayment(uint256 tokenId) external onlyParticipant(tokenId) {\n        Agreement storage a = _agreements[tokenId];\n        require(a.status == Status.Completed || a.status == Status.Resolved, \"Invalid status for payment\");\n        require(!a.paymentRecorded, \"Already recorded\");\n        a.paymentRecorded = true;\n        emit PaymentRecorded(tokenId, a.paymentAmountUsdCents, msg.sender);\n    }\n\n    /// @notice Creates agreement NFT after artist has signed off-chain.\n    function createAgreementWithArtistSig(AgreementInput calldata input, bytes calldata artistSignature) external returns (uint256 tokenId) {\n        require(msg.sender == input.venueWallet, \"Caller not venue wallet\");\n        require(input.artistWallet != address(0) && input.venueWallet != address(0), \"Zero address\");\n        require(input.startTime > block.timestamp - 1 days, \"Start time too old\");\n        require(input.durationMinutes > 0 && input.durationMinutes <= 24 * 60, \"Invalid duration\");\n        require(input.paymentAmountUsdCents > 0, \"Payment must be > 0\");\n\n        bytes32 structHash = keccak256(abi.encode(\n            AGREEMENT_TYPEHASH,\n            keccak256(bytes(input.venueName)),\n            keccak256(bytes(input.venueAddress)),\n            input.startTime,\n            input.durationMinutes,\n            keccak256(bytes(input.artistSocialHandle)),\n            keccak256(bytes(input.venueSocialHandle)),\n            input.artistWallet,\n            input.venueWallet,\n            input.paymentAmountUsdCents\n        ));\n        bytes32 digest = _hashTypedDataV4(structHash);\n        address signer = ECDSA.recover(digest, artistSignature);\n        require(signer == input.artistWallet, \"Bad artist signature\");\n\n        tokenId = _nextId++;\n        _agreements[tokenId] = Agreement({\n            venueName: input.venueName,\n            venueAddress: input.venueAddress,\n            startTime: input.startTime,\n            durationMinutes: input.durationMinutes,\n            artistSocialHandle: input.artistSocialHandle,\n            venueSocialHandle: input.venueSocialHandle,\n            artistWallet: input.artistWallet,\n            venueWallet: input.venueWallet,\n            paymentAmountUsdCents: input.paymentAmountUsdCents,\n            status: Status.Scheduled,\n            paymentRecorded: false\n        });\n\n        _safeMint(input.artistWallet, tokenId);\n        emit AgreementCreated(tokenId, input.artistWallet, input.venueWallet, input.venueName, input.startTime, input.paymentAmountUsdCents);\n        emit AgreementSignedAndMinted(tokenId, input.venueWallet, input.artistWallet);\n    }\n\n    function getAgreement(uint256 tokenId) external view returns (Agreement memory) {\n        require(_ownerOf(tokenId) != address(0), \"Nonexistent token\");\n        return _agreements[tokenId];\n    }\n\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_ownerOf(tokenId) != address(0), \"Nonexistent token\");\n        Agreement memory a = _agreements[tokenId];\n\n        string memory json = string(abi.encodePacked(\n            '{',\n                '\"name\":\"Performance Agreement #', tokenId.toString(), '\",',\n                '\"description\":\"Agreement between artist and venue for a performance event.\",',\n                '\"venueName\":\"', a.venueName, '\",',\n                '\"venueAddress\":\"', a.venueAddress, '\",',\n                '\"startTime\":', uint256(a.startTime).toString(), ',',\n                '\"durationMinutes\":', uint256(a.durationMinutes).toString(), ',',\n                '\"artistSocialHandle\":\"', a.artistSocialHandle, '\",',\n                '\"venueSocialHandle\":\"', a.venueSocialHandle, '\",',\n                '\"artistWallet\":\"', _toHexString(a.artistWallet), '\",',\n                '\"venueWallet\":\"', _toHexString(a.venueWallet), '\",',\n                '\"paymentAmountUsdCents\":', a.paymentAmountUsdCents.toString(), ',',\n                '\"status\":\"', _statusToString(a.status), '\",',\n                '\"paymentRecorded\":', a.paymentRecorded ? \"true\" : \"false\",\n            '}'\n        ));\n\n        return string(abi.encodePacked(\"data:application/json;base64,\", Base64.encode(bytes(json))));\n    }\n\n    function _toHexString(address account) internal pure returns (string memory) {\n        return Strings.toHexString(uint256(uint160(account)), 20);\n    }\n\n    function _statusToString(Status s) internal pure returns (string memory) {\n        if (s == Status.Scheduled) return \"Scheduled\";\n        if (s == Status.Completed) return \"Completed\";\n        if (s == Status.Disputed) return \"Disputed\";\n        return \"Resolved\";\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1791],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1792,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1791,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1791],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4283]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":4284,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[4283],"IERC4906":[175],"IERC721":[1415]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":205,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,1415,4283],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1314,1323,1332]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[200]},"id":201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":200,"linearizedBaseContracts":[200],"name":"IERC5267","nameLocation":"144:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"159:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":180,"name":"EIP712DomainChanged","nameLocation":"254:19:3","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"273:2:3"},"src":"248:28:3"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"282:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"448:2:3"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"fields","nameLocation":"518:6:3","nodeType":"VariableDeclaration","scope":199,"src":"511:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":183,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"name","nameLocation":"552:4:3","nodeType":"VariableDeclaration","scope":199,"src":"538:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":185,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"version","nameLocation":"584:7:3","nodeType":"VariableDeclaration","scope":199,"src":"570:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":187,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"chainId","nameLocation":"613:7:3","nodeType":"VariableDeclaration","scope":199,"src":"605:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:3","nodeType":"VariableDeclaration","scope":199,"src":"634:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"salt","nameLocation":"681:4:3","nodeType":"VariableDeclaration","scope":199,"src":"673:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"extensions","nameLocation":"716:10:3","nodeType":"VariableDeclaration","scope":199,"src":"699:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"nodeType":"ArrayTypeName","src":"699:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:3"},"scope":200,"src":"427:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":201,"src":"134:605:3","usedErrors":[],"usedEvents":[180]}],"src":"107:633:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1415]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":202,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":205,"sourceUnit":1416,"src":"132:52:4","symbolAliases":[{"foreign":{"id":203,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"140:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[341],"IERC20Errors":[246],"IERC721Errors":[294]},"id":342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":216,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":216,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":216,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":216,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":221,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":221,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":226,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":226,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":235,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":235,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":235,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":235,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":240,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":240,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":245,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":245,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":342,"src":"280:1764:5","usedErrors":[216,221,226,235,240,245],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":294,"linearizedBaseContracts":[294],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":252,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":252,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":257,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":257,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":266,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":266,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":266,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":266,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":271,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":271,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":276,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":276,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":283,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":283,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":283,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":288,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":288,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":293,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":293,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":342,"src":"2190:2092:5","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":341,"linearizedBaseContracts":[341],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":306,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":306,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":306,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":311,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":311,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":316,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":316,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":323,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":323,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":323,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":328,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":328,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":333,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":333,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":340,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":340,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":340,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":342,"src":"4430:2107:5","usedErrors":[306,311,316,323,328,333,340],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1791],"ERC165":[4271],"ERC721":[1298],"ERC721Utils":[1666],"IERC165":[4283],"IERC721":[1415],"IERC721Errors":[294],"IERC721Metadata":[1589],"Strings":[3586]},"id":1299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1416,"src":"133:38:6","symbolAliases":[{"foreign":{"id":344,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"141:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1590,"src":"172:65:6","symbolAliases":[{"foreign":{"id":346,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"180:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1667,"src":"238:52:6","symbolAliases":[{"foreign":{"id":348,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"246:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":1792,"src":"291:48:6","symbolAliases":[{"foreign":{"id":350,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"299:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":3587,"src":"340:48:6","symbolAliases":[{"foreign":{"id":352,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"348:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":4272,"src":"389:69:6","symbolAliases":[{"foreign":{"id":354,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"397:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":355,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"406:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":342,"src":"459:66:6","symbolAliases":[{"foreign":{"id":357,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"467:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":360,"name":"Context","nameLocations":["803:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1791,"src":"803:7:6"},"id":361,"nodeType":"InheritanceSpecifier","src":"803:7:6"},{"baseName":{"id":362,"name":"ERC165","nameLocations":["812:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":4271,"src":"812:6:6"},"id":363,"nodeType":"InheritanceSpecifier","src":"812:6:6"},{"baseName":{"id":364,"name":"IERC721","nameLocations":["820:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"820:7:6"},"id":365,"nodeType":"InheritanceSpecifier","src":"820:7:6"},{"baseName":{"id":366,"name":"IERC721Metadata","nameLocations":["829:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":1589,"src":"829:15:6"},"id":367,"nodeType":"InheritanceSpecifier","src":"829:15:6"},{"baseName":{"id":368,"name":"IERC721Errors","nameLocations":["846:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":294,"src":"846:13:6"},"id":369,"nodeType":"InheritanceSpecifier","src":"846:13:6"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"527:247:6","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1298,"linearizedBaseContracts":[1298,294,1589,1415,4271,4283,1791],"name":"ERC721","nameLocation":"793:6:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":372,"libraryName":{"id":370,"name":"Strings","nameLocations":["872:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"872:7:6"},"nodeType":"UsingForDirective","src":"866:26:6","typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":374,"mutability":"mutable","name":"_name","nameLocation":"931:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"916:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":376,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"963:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":375,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":380,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"992:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":379,"keyName":"tokenId","keyNameLocation":"1008:7:6","keyType":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":384,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:6","nodeType":"VariableDeclaration","scope":1298,"src":"1050:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":383,"keyName":"owner","keyNameLocation":"1066:5:6","keyType":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":388,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:6","nodeType":"VariableDeclaration","scope":1298,"src":"1108:59:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":387,"keyName":"tokenId","keyNameLocation":"1124:7:6","keyType":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":394,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:6","nodeType":"VariableDeclaration","scope":1298,"src":"1174:86:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":393,"keyName":"owner","keyNameLocation":"1190:5:6","keyType":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":392,"keyName":"operator","keyNameLocation":"1215:8:6","keyType":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":410,"nodeType":"Block","src":"1436:57:6","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":402,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1446:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1454:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":405,"nodeType":"ExpressionStatement","src":"1446:13:6"},{"expression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":406,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1469:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":407,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1479:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":409,"nodeType":"ExpressionStatement","src":"1469:17:6"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"1267:108:6","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":411,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"name_","nameLocation":"1406:5:6","nodeType":"VariableDeclaration","scope":411,"src":"1392:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:6","nodeType":"VariableDeclaration","scope":411,"src":"1413:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":398,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:6"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"1436:0:6"},"scope":1298,"src":"1380:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4270,4282],"body":{"id":441,"nodeType":"Block","src":"1635:192:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1664:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":424,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1415_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1415_$","typeString":"type(contract IERC721)"}],"id":423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1415","typeString":"type(contract IERC721)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":428,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1720:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":430,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1740:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1589_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1589_$","typeString":"type(contract IERC721Metadata)"}],"id":429,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1589","typeString":"type(contract IERC721Metadata)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":437,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1808:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":435,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1298_$","typeString":"type(contract super ERC721)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"1784:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":421,"id":440,"nodeType":"Return","src":"1645:175:6"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"1499:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":442,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:6","nodeType":"FunctionDefinition","overrides":{"id":418,"nodeType":"OverrideSpecifier","overrides":[{"id":416,"name":"ERC165","nameLocations":["1603:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":4271,"src":"1603:6:6"},{"id":417,"name":"IERC165","nameLocations":["1611:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"1611:7:6"}],"src":"1594:25:6"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:6","nodeType":"VariableDeclaration","scope":442,"src":"1554:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":413,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:6"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"1629:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:6"},"scope":1298,"src":"1527:300:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1340],"body":{"id":469,"nodeType":"Block","src":"1933:136:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1947:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{}}},"id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"1943:87:6","trueBody":{"id":463,"nodeType":"Block","src":"1968:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1989:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"RevertStatement","src":"1982:37:6"}]}},{"expression":{"baseExpression":{"id":465,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2046:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":467,"indexExpression":{"id":466,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2056:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":449,"id":468,"nodeType":"Return","src":"2039:23:6"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"1833:23:6","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":470,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:6","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"owner","nameLocation":"1888:5:6","nodeType":"VariableDeclaration","scope":470,"src":"1880:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:6"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"1924:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:6"},"scope":1298,"src":"1861:208:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":482,"nodeType":"Block","src":"2175:46:6","statements":[{"expression":{"arguments":[{"id":479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2192:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":477,"id":481,"nodeType":"Return","src":"2185:29:6"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"2075:23:6","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:6","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:6","nodeType":"VariableDeclaration","scope":483,"src":"2120:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:6"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2166:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:6"},"scope":1298,"src":"2103:118:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1574],"body":{"id":491,"nodeType":"Block","src":"2323:29:6","statements":[{"expression":{"id":489,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":488,"id":490,"nodeType":"Return","src":"2333:12:6"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"2227:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":492,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:6","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2276:2:6"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"2308:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":486,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:6"},"scope":1298,"src":"2263:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1580],"body":{"id":500,"nodeType":"Block","src":"2456:31:6","statements":[{"expression":{"id":498,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2473:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":497,"id":499,"nodeType":"Return","src":"2466:14:6"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"2358:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":501,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:6","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"2409:2:6"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":501,"src":"2441:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":495,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:6"},"scope":1298,"src":"2394:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1588],"body":{"id":536,"nodeType":"Block","src":"2608:176:6","statements":[{"expression":{"arguments":[{"id":510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":509,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2618:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":512,"nodeType":"ExpressionStatement","src":"2618:22:6"},{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:6","nodeType":"VariableDeclaration","scope":536,"src":"2651:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":517,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":515,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2675:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":520,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2708:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":518,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:6","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:6","memberName":"length","nodeType":"MemberAccess","src":"2702:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:6","trueExpression":{"arguments":[{"id":528,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2744:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:6","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"2753:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:6","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:6","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":508,"id":535,"nodeType":"Return","src":"2695:82:6"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"2493:31:6","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:6","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:6","nodeType":"VariableDeclaration","scope":537,"src":"2547:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:6"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"2593:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:6"},"scope":1298,"src":"2529:255:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":545,"nodeType":"Block","src":"3092:26:6","statements":[{"expression":{"hexValue":"","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":542,"id":544,"nodeType":"Return","src":"3102:9:6"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"2790:231:6","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:6","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"3043:2:6"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"3077:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":540,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:6"},"scope":1298,"src":"3026:92:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1388],"body":{"id":561,"nodeType":"Block","src":"3213:52:6","statements":[{"expression":{"arguments":[{"id":555,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3232:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3245:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1165,"src":"3223:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"3223:35:6"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"3124:23:6","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:6","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"to","nameLocation":"3177:2:6","nodeType":"VariableDeclaration","scope":562,"src":"3169:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:6","nodeType":"VariableDeclaration","scope":562,"src":"3181:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:6"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"3213:0:6"},"scope":1298,"src":"3152:113:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1404],"body":{"id":578,"nodeType":"Block","src":"3375:78:6","statements":[{"expression":{"arguments":[{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"3399:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3385:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":573,"nodeType":"ExpressionStatement","src":"3385:22:6"},{"expression":{"arguments":[{"id":575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"3438:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":574,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3425:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":569,"id":577,"nodeType":"Return","src":"3418:28:6"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"3271:23:6","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:6","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:6","nodeType":"VariableDeclaration","scope":579,"src":"3320:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:6"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"3366:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:6"},"scope":1298,"src":"3299:154:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1396],"body":{"id":594,"nodeType":"Block","src":"3562:69:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":588,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3591:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3605:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"3615:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":587,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3572:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"3572:52:6"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"3459:23:6","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:6","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"operator","nameLocation":"3522:8:6","nodeType":"VariableDeclaration","scope":595,"src":"3514:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"approved","nameLocation":"3537:8:6","nodeType":"VariableDeclaration","scope":595,"src":"3532:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":583,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:6"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"3562:0:6"},"scope":1298,"src":"3487:144:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1414],"body":{"id":611,"nodeType":"Block","src":"3759:59:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":605,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"3776:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":607,"indexExpression":{"id":606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3795:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":609,"indexExpression":{"id":608,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3802:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"3769:42:6"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"3637:23:6","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:6","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"owner","nameLocation":"3699:5:6","nodeType":"VariableDeclaration","scope":612,"src":"3691:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"operator","nameLocation":"3714:8:6","nodeType":"VariableDeclaration","scope":612,"src":"3706:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:6"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"3753:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":602,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:6"},"scope":1298,"src":"3665:153:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1380],"body":{"id":657,"nodeType":"Block","src":"3932:498:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3946:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"3942:87:6","trueBody":{"id":635,"nodeType":"Block","src":"3964:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3985:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"3978:40:6"}]}},{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:6","nodeType":"VariableDeclaration","scope":657,"src":"4247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":645,"initialValue":{"arguments":[{"id":640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4279:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":642,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4292:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":639,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4271:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4319:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4336:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"4315:109:6","trueBody":{"id":655,"nodeType":"Block","src":"4342:82:6","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4399:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":649,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4363:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"RevertStatement","src":"4356:57:6"}]}}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"3824:23:6","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:6","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"from","nameLocation":"3882:4:6","nodeType":"VariableDeclaration","scope":658,"src":"3874:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"to","nameLocation":"3896:2:6","nodeType":"VariableDeclaration","scope":658,"src":"3888:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:6","nodeType":"VariableDeclaration","scope":658,"src":"3900:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:6"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"3932:0:6"},"scope":1298,"src":"3852:578:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1370],"body":{"id":675,"nodeType":"Block","src":"4540:56:6","statements":[{"expression":{"arguments":[{"id":669,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4567:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"4573:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":668,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[676,706],"referencedDeclaration":706,"src":"4550:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"ExpressionStatement","src":"4550:39:6"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"4436:23:6","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":676,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:6","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"from","nameLocation":"4498:4:6","nodeType":"VariableDeclaration","scope":676,"src":"4490:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"to","nameLocation":"4512:2:6","nodeType":"VariableDeclaration","scope":676,"src":"4504:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:6","nodeType":"VariableDeclaration","scope":676,"src":"4516:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:6"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"4540:0:6"},"scope":1298,"src":"4464:132:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":705,"nodeType":"Block","src":"4733:130:6","statements":[{"expression":{"arguments":[{"id":689,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4756:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4762:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4743:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"4743:31:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":697,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4818:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4832:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4838:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":702,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4851:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":694,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"4784:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1666_$","typeString":"type(library ERC721Utils)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"4784:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"4784:72:6"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"4602:23:6","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:6","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"4664:4:6","nodeType":"VariableDeclaration","scope":706,"src":"4656:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"4678:2:6","nodeType":"VariableDeclaration","scope":706,"src":"4670:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:6","nodeType":"VariableDeclaration","scope":706,"src":"4682:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"data","nameLocation":"4712:4:6","nodeType":"VariableDeclaration","scope":706,"src":"4699:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"4733:0:6"},"scope":1298,"src":"4630:233:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":718,"nodeType":"Block","src":"5453:40:6","statements":[{"expression":{"baseExpression":{"id":714,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5470:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":716,"indexExpression":{"id":715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":713,"id":717,"nodeType":"Return","src":"5463:23:6"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"4869:504:6","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:6","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:6","nodeType":"VariableDeclaration","scope":719,"src":"5396:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:6"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"5444:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:6"},"scope":1298,"src":"5378:115:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"5688:48:6","statements":[{"expression":{"baseExpression":{"id":727,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5705:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":729,"indexExpression":{"id":728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":726,"id":730,"nodeType":"Return","src":"5698:31:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"5499:105:6","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:6","nodeType":"FunctionDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:6","nodeType":"VariableDeclaration","scope":732,"src":"5631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:6"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":732,"src":"5679:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:6"},"scope":1298,"src":"5609:127:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"6156:163:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6185:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6223:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":751,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6260:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6243:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6292:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":758,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"6279:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6304:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":743,"id":766,"nodeType":"Return","src":"6166:146:6"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"5742:300:6","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:6","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"owner","nameLocation":"6078:5:6","nodeType":"VariableDeclaration","scope":768,"src":"6070:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"spender","nameLocation":"6093:7:6","nodeType":"VariableDeclaration","scope":768,"src":"6085:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:6","nodeType":"VariableDeclaration","scope":768,"src":"6102:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:6"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"6150:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:6"},"scope":1298,"src":"6047:272:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"6848:271:6","statements":[{"condition":{"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:6","subExpression":{"arguments":[{"id":779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6877:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6884:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"6893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6863:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":803,"nodeType":"IfStatement","src":"6858:255:6","trueBody":{"id":802,"nodeType":"Block","src":"6903:210:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6921:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:6","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":800,"nodeType":"Block","src":"7019:84:6","statements":[{"errorCall":{"arguments":[{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7071:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":795,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7044:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"RevertStatement","src":"7037:51:6"}]},"id":801,"nodeType":"IfStatement","src":"6917:186:6","trueBody":{"id":794,"nodeType":"Block","src":"6942:71:6","statements":[{"errorCall":{"arguments":[{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"6990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"6967:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"RevertStatement","src":"6960:38:6"}]}}]}}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"6325:421:6","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:6","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"owner","nameLocation":"6785:5:6","nodeType":"VariableDeclaration","scope":805,"src":"6777:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"spender","nameLocation":"6800:7:6","nodeType":"VariableDeclaration","scope":805,"src":"6792:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:6","nodeType":"VariableDeclaration","scope":805,"src":"6809:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"6848:0:6"},"scope":1298,"src":"6751:368:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7836:78:6","statements":[{"id":819,"nodeType":"UncheckedBlock","src":"7846:62:6","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":813,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7870:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":815,"indexExpression":{"id":814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7880:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"7892:5:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"7870:27:6"}]}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"7125:631:6","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:6","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"account","nameLocation":"7795:7:6","nodeType":"VariableDeclaration","scope":821,"src":"7787:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"value","nameLocation":"7812:5:6","nodeType":"VariableDeclaration","scope":821,"src":"7804:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":809,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:6"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"7836:0:6"},"scope":1298,"src":"7761:153:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"8602:700:6","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"from","nameLocation":"8620:4:6","nodeType":"VariableDeclaration","scope":910,"src":"8612:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"id":836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8636:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8627:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":839,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8704:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:6","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":852,"nodeType":"IfStatement","src":"8700:86:6","trueBody":{"id":851,"nodeType":"Block","src":"8724:62:6","statements":[{"expression":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8755:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8761:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"8738:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"ExpressionStatement","src":"8738:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"8830:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:6","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"8826:256:6","trueBody":{"id":879,"nodeType":"Block","src":"8850:232:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:6","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8967:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:6","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":859,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1231,"src":"8946:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"8946:48:6"},{"id":878,"nodeType":"UncheckedBlock","src":"9009:63:6","statements":[{"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":872,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9037:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":874,"indexExpression":{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9047:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ExpressionStatement","src":"9037:20:6"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9096:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:6","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"IfStatement","src":"9092:107:6","trueBody":{"id":894,"nodeType":"Block","src":"9114:85:6","statements":[{"id":893,"nodeType":"UncheckedBlock","src":"9128:61:6","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":887,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"9156:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":889,"indexExpression":{"id":888,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9166:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"9156:18:6"}]}]}},{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":896,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"9209:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":898,"indexExpression":{"id":897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9217:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9228:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":901,"nodeType":"ExpressionStatement","src":"9209:21:6"},{"eventCall":{"arguments":[{"id":903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9255:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9261:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"9246:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"EmitStatement","src":"9241:32:6"},{"expression":{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9291:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":832,"id":909,"nodeType":"Return","src":"9284:11:6"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"7920:582:6","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:6","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"to","nameLocation":"8532:2:6","nodeType":"VariableDeclaration","scope":911,"src":"8524:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:6","nodeType":"VariableDeclaration","scope":911,"src":"8536:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"auth","nameLocation":"8561:4:6","nodeType":"VariableDeclaration","scope":911,"src":"8553:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:6"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"8593:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:6"},"scope":1298,"src":"8507:795:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":960,"nodeType":"Block","src":"9677:274:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9691:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:6","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"9687:87:6","trueBody":{"id":932,"nodeType":"Block","src":"9709:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:6","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"9730:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"RevertStatement","src":"9723:40:6"}]}},{"assignments":[935],"declarations":[{"constant":false,"id":935,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:6","nodeType":"VariableDeclaration","scope":960,"src":"9783:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":944,"initialValue":{"arguments":[{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"9815:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"9819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:6","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":936,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"9807:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9853:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:6","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":959,"nodeType":"IfStatement","src":"9849:96:6","trueBody":{"id":958,"nodeType":"Block","src":"9882:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:6","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":951,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"9903:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"RevertStatement","src":"9896:38:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"9308:311:6","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"to","nameLocation":"9647:2:6","nodeType":"VariableDeclaration","scope":961,"src":"9639:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:6","nodeType":"VariableDeclaration","scope":961,"src":"9651:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"9677:0:6"},"scope":1298,"src":"9624:327:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"10359:43:6","statements":[{"expression":{"arguments":[{"id":970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10379:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"10383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":969,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[976,1006],"referencedDeclaration":1006,"src":"10369:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"10369:26:6"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"9957:340:6","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:6","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"to","nameLocation":"10329:2:6","nodeType":"VariableDeclaration","scope":976,"src":"10321:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:6","nodeType":"VariableDeclaration","scope":976,"src":"10333:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"10359:0:6"},"scope":1298,"src":"10302:100:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"10707:123:6","statements":[{"expression":{"arguments":[{"id":987,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"10723:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":988,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"10727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10717:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"10717:18:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":994,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"10779:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:6","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"10805:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"10809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"10818:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":991,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"10745:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1666_$","typeString":"type(library ERC721Utils)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"10745:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"10745:78:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"10408:210:6","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:6","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"to","nameLocation":"10650:2:6","nodeType":"VariableDeclaration","scope":1006,"src":"10642:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:6","nodeType":"VariableDeclaration","scope":1006,"src":"10654:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"data","nameLocation":"10684:4:6","nodeType":"VariableDeclaration","scope":1006,"src":"10671:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:6"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"10707:0:6"},"scope":1298,"src":"10623:207:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"11197:186:6","statements":[{"assignments":[1013],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:6","nodeType":"VariableDeclaration","scope":1038,"src":"11207:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:6","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:6","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"11231:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11285:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:6","typeDescriptions":{}}},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1037,"nodeType":"IfStatement","src":"11281:96:6","trueBody":{"id":1036,"nodeType":"Block","src":"11314:63:6","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11358:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"11335:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"RevertStatement","src":"11328:38:6"}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"10836:315:6","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:6","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:6","nodeType":"VariableDeclaration","scope":1039,"src":"11171:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:6"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"11197:0:6"},"scope":1298,"src":"11156:227:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"11778:389:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"11792:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:6","typeDescriptions":{}}},"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"11788:87:6","trueBody":{"id":1062,"nodeType":"Block","src":"11810:65:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:6","typeDescriptions":{}}},"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"11831:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"RevertStatement","src":"11824:40:6"}]}},{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:6","nodeType":"VariableDeclaration","scope":1098,"src":"11884:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[{"id":1067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"11916:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"11920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:6","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"11908:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"11954:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:6","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1086,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12056:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"12073:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1096,"nodeType":"IfStatement","src":"12052:109:6","trueBody":{"id":1095,"nodeType":"Block","src":"12079:82:6","statements":[{"errorCall":{"arguments":[{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"12121:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1092,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"12136:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1089,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"12100:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"RevertStatement","src":"12093:57:6"}]}},"id":1097,"nodeType":"IfStatement","src":"11950:211:6","trueBody":{"id":1085,"nodeType":"Block","src":"11983:63:6","statements":[{"errorCall":{"arguments":[{"id":1082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"12027:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1081,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"12004:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"RevertStatement","src":"11997:38:6"}]}}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"11389:313:6","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:6","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"from","nameLocation":"11734:4:6","nodeType":"VariableDeclaration","scope":1099,"src":"11726:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"to","nameLocation":"11748:2:6","nodeType":"VariableDeclaration","scope":1099,"src":"11740:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:6","nodeType":"VariableDeclaration","scope":1099,"src":"11752:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:6"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"11778:0:6"},"scope":1298,"src":"11707:460:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"13176:53:6","statements":[{"expression":{"arguments":[{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"13200:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"13206:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"13210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1109,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1117,1147],"referencedDeclaration":1147,"src":"13186:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"13186:36:6"}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"12173:923:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:6","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"13132:4:6","nodeType":"VariableDeclaration","scope":1117,"src":"13124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"13146:2:6","nodeType":"VariableDeclaration","scope":1117,"src":"13138:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:6","nodeType":"VariableDeclaration","scope":1117,"src":"13150:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:6"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"13176:0:6"},"scope":1298,"src":"13101:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"13568:127:6","statements":[{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"13588:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"13594:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"ExpressionStatement","src":"13578:28:6"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1138,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13650:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1140,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"13664:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1141,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"13670:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1143,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"13683:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1135,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"13616:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1666_$","typeString":"type(library ERC721Utils)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:6","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"13616:33:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"13616:72:6"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"13235:226:6","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:6","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"from","nameLocation":"13497:4:6","nodeType":"VariableDeclaration","scope":1147,"src":"13489:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"to","nameLocation":"13511:2:6","nodeType":"VariableDeclaration","scope":1147,"src":"13503:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:6","nodeType":"VariableDeclaration","scope":1147,"src":"13515:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"data","nameLocation":"13545:4:6","nodeType":"VariableDeclaration","scope":1147,"src":"13532:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:6"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"13568:0:6"},"scope":1298,"src":"13466:229:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1164,"nodeType":"Block","src":"14208:50:6","statements":[{"expression":{"arguments":[{"id":1158,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"14227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"14231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1160,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"14240:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1157,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1165,1231],"referencedDeclaration":1231,"src":"14218:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"14218:33:6"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"13701:432:6","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:6","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"to","nameLocation":"14164:2:6","nodeType":"VariableDeclaration","scope":1165,"src":"14156:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:6","nodeType":"VariableDeclaration","scope":1165,"src":"14168:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"auth","nameLocation":"14193:4:6","nodeType":"VariableDeclaration","scope":1165,"src":"14185:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:6"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"14208:0:6"},"scope":1298,"src":"14138:120:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"14534:568:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14600:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14613:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:6","typeDescriptions":{}}},"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"IfStatement","src":"14596:460:6","trueBody":{"id":1222,"nodeType":"Block","src":"14633:423:6","statements":[{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"owner","nameLocation":"14655:5:6","nodeType":"VariableDeclaration","scope":1222,"src":"14647:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1190,"initialValue":{"arguments":[{"id":1188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"14677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1187,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"14663:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14813:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:6","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"14835:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1198,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14844:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:6","subExpression":{"arguments":[{"id":1202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"14870:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14877:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"14853:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"14809:142:6","trueBody":{"id":1211,"nodeType":"Block","src":"14884:67:6","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"14931:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1207,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"14909:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"RevertStatement","src":"14902:34:6"}]}},{"condition":{"id":1213,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14969:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"14965:81:6","trueBody":{"id":1220,"nodeType":"Block","src":"14980:66:6","statements":[{"eventCall":{"arguments":[{"id":1215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15012:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"15019:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"15003:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"EmitStatement","src":"14998:33:6"}]}}]}},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1224,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"15066:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1226,"indexExpression":{"id":1225,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"15082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"15093:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1229,"nodeType":"ExpressionStatement","src":"15066:29:6"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"14264:171:6","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:6","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"to","nameLocation":"14466:2:6","nodeType":"VariableDeclaration","scope":1231,"src":"14458:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:6","nodeType":"VariableDeclaration","scope":1231,"src":"14470:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"auth","nameLocation":"14495:4:6","nodeType":"VariableDeclaration","scope":1231,"src":"14487:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:6","nodeType":"VariableDeclaration","scope":1231,"src":"14501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:6"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"14534:0:6"},"scope":1298,"src":"14440:662:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1267,"nodeType":"Block","src":"15404:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15418:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:6","typeDescriptions":{}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"15414:91:6","trueBody":{"id":1251,"nodeType":"Block","src":"15442:63:6","statements":[{"errorCall":{"arguments":[{"id":1248,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15485:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1247,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"15463:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"RevertStatement","src":"15456:38:6"}]}},{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1253,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"15514:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1256,"indexExpression":{"id":1254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"15533:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1257,"indexExpression":{"id":1255,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15540:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1258,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"15552:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"ExpressionStatement","src":"15514:46:6"},{"eventCall":{"arguments":[{"id":1262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"15590:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"15597:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"15607:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1261,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"15575:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"EmitStatement","src":"15570:46:6"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"15108:198:6","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:6","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"owner","nameLocation":"15347:5:6","nodeType":"VariableDeclaration","scope":1268,"src":"15339:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"operator","nameLocation":"15362:8:6","nodeType":"VariableDeclaration","scope":1268,"src":"15354:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"approved","nameLocation":"15377:8:6","nodeType":"VariableDeclaration","scope":1268,"src":"15372:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1237,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:6"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"15404:0:6"},"scope":1298,"src":"15311:312:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"15930:169:6","statements":[{"assignments":[1277],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"owner","nameLocation":"15948:5:6","nodeType":"VariableDeclaration","scope":1296,"src":"15940:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1281,"initialValue":{"arguments":[{"id":1279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"15965:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"15956:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"15987:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:6","typeDescriptions":{}}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1293,"nodeType":"IfStatement","src":"15983:88:6","trueBody":{"id":1292,"nodeType":"Block","src":"16008:63:6","statements":[{"errorCall":{"arguments":[{"id":1289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"16052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"16029:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"RevertStatement","src":"16022:38:6"}]}},{"expression":{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"16087:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1275,"id":1295,"nodeType":"Return","src":"16080:12:6"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"15629:224:6","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:6","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:6","nodeType":"VariableDeclaration","scope":1297,"src":"15881:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:6"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"15921:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:6"},"scope":1298,"src":"15858:241:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1299,"src":"775:15326:6","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[1314,1323,1332]}],"src":"107:15995:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4283],"IERC721":[1415]},"id":1416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1300,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1416,"sourceUnit":4284,"src":"134:62:7","symbolAliases":[{"foreign":{"id":1301,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1304,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"288:7:7"},"id":1305,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1415,"linearizedBaseContracts":[1415,4283],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1314,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":1314,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":1314,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":1314,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1323,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":1323,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":1323,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":1323,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1332,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":1332,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":1332,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":1332,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1329,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1340,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1340,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":1340,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":1415,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":1348,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":1348,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":1415,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":1360,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":1360,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":1360,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":1360,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":1415,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":1370,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":1370,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":1370,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":1415,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1380,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":1380,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":1380,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":1380,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":1415,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1388,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":1388,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":1388,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":1415,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":1396,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":1396,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":1415,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1404,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":1404,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":1404,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":1415,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":1414,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":1414,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":1415,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1416,"src":"267:4661:7","usedErrors":[],"usedEvents":[1314,1323,1332]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1433]},"id":1434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1417,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"142:154:8","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1433,"linearizedBaseContracts":[1433],"name":"IERC721Receiver","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"329:500:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1432,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:8","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"operator","nameLocation":"877:8:8","nodeType":"VariableDeclaration","scope":1432,"src":"869:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"from","nameLocation":"903:4:8","nodeType":"VariableDeclaration","scope":1432,"src":"895:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:8","nodeType":"VariableDeclaration","scope":1432,"src":"917:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"data","nameLocation":"957:4:8","nodeType":"VariableDeclaration","scope":1432,"src":"942:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1426,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:8"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"986:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1429,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:8"},"scope":1433,"src":"834:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1434,"src":"297:699:8","usedErrors":[],"usedEvents":[]}],"src":"116:881:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1298],"ERC721URIStorage":[1561],"IERC165":[4283],"IERC4906":[175],"IERC721Metadata":[1589],"Strings":[3586]},"id":1562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":1299,"src":"154:37:9","symbolAliases":[{"foreign":{"id":1436,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"162:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":1590,"src":"192:54:9","symbolAliases":[{"foreign":{"id":1438,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"200:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":3587,"src":"247:51:9","symbolAliases":[{"foreign":{"id":1440,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"255:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":176,"src":"299:58:9","symbolAliases":[{"foreign":{"id":1442,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"307:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1562,"sourceUnit":152,"src":"358:56:9","symbolAliases":[{"foreign":{"id":1444,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"366:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1447,"name":"IERC4906","nameLocations":["525:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"525:8:9"},"id":1448,"nodeType":"InheritanceSpecifier","src":"525:8:9"},{"baseName":{"id":1449,"name":"ERC721","nameLocations":["535:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"535:6:9"},"id":1450,"nodeType":"InheritanceSpecifier","src":"535:6:9"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"416:70:9","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1561,"linearizedBaseContracts":[1561,1298,294,1589,175,1415,4271,4283,1791],"name":"ERC721URIStorage","nameLocation":"505:16:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1453,"libraryName":{"id":1451,"name":"Strings","nameLocations":["554:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"554:7:9"},"nodeType":"UsingForDirective","src":"548:26:9","typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1459,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:9","nodeType":"VariableDeclaration","scope":1561,"src":"762:65:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1454,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1455,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:9","typeDescriptions":{}}},"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1463,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:9","nodeType":"VariableDeclaration","scope":1561,"src":"873:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1462,"keyName":"tokenId","keyNameLocation":"889:7:9","keyType":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1461,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[442,4282],"body":{"id":1483,"nodeType":"Block","src":"1069:99:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"1086:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1475,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1101:20:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1479,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"1149:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1477,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1561_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":442,"src":"1125:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1473,"id":1482,"nodeType":"Return","src":"1079:82:9"}]},"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"933:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:9","nodeType":"FunctionDefinition","overrides":{"id":1470,"nodeType":"OverrideSpecifier","overrides":[{"id":1468,"name":"ERC721","nameLocations":["1037:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"1037:6:9"},{"id":1469,"name":"IERC165","nameLocations":["1045:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"1045:7:9"}],"src":"1028:25:9"},"parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:9","nodeType":"VariableDeclaration","scope":1484,"src":"988:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1465,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"1063:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:9"},"scope":1561,"src":"961:207:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":1540,"nodeType":"Block","src":"1298:505:9","statements":[{"expression":{"arguments":[{"id":1494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1322:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1493,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"1308:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1496,"nodeType":"ExpressionStatement","src":"1308:22:9"},{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:9","nodeType":"VariableDeclaration","scope":1540,"src":"1341:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1497,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1502,"initialValue":{"baseExpression":{"id":1499,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1367:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1501,"indexExpression":{"id":1500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:9"},{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"base","nameLocation":"1410:4:9","nodeType":"VariableDeclaration","scope":1540,"src":"1396:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1503,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1507,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1505,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1417:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1510,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1506:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:9","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:9","memberName":"length","nodeType":"MemberAccess","src":"1500:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"IfStatement","src":"1496:70:9","trueBody":{"id":1517,"nodeType":"Block","src":"1525:41:9","statements":[{"expression":{"id":1515,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1546:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1492,"id":1516,"nodeType":"Return","src":"1539:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1521,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1671:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1519,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:9","typeDescriptions":{}}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:9","memberName":"length","nodeType":"MemberAccess","src":"1665:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"1661:95:9","trueBody":{"id":1533,"nodeType":"Block","src":"1694:62:9","statements":[{"expression":{"arguments":[{"id":1529,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1729:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1530,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1735:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:9","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1492,"id":1532,"nodeType":"Return","src":"1708:37:9"}]}},{"expression":{"arguments":[{"id":1537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1788:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1535,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1561_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:9","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":537,"src":"1773:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1492,"id":1539,"nodeType":"Return","src":"1766:30:9"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"1174:31:9","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:9","nodeType":"FunctionDefinition","overrides":{"id":1489,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:9"},"parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:9","nodeType":"VariableDeclaration","scope":1541,"src":"1228:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:9"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"1283:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1490,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:9"},"scope":1561,"src":"1210:593:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1559,"nodeType":"Block","src":"2012:86:9","statements":[{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1549,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2022:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1551,"indexExpression":{"id":1550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2033:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1552,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2044:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1554,"nodeType":"ExpressionStatement","src":"2022:31:9"},{"eventCall":{"arguments":[{"id":1556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1555,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2068:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"EmitStatement","src":"2063:28:9"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"1809:117:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1560,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:9","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:9","nodeType":"VariableDeclaration","scope":1560,"src":"1953:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:9","nodeType":"VariableDeclaration","scope":1560,"src":"1970:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1545,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:9"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"2012:0:9"},"scope":1561,"src":"1931:167:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1562,"src":"487:1613:9","usedErrors":[252,257,266,271,276,283,288,293],"usedEvents":[167,174,1314,1323,1332]}],"src":"128:1973:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1415],"IERC721Metadata":[1589]},"id":1590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1563,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1565,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1590,"sourceUnit":1416,"src":"153:39:10","symbolAliases":[{"foreign":{"id":1564,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1567,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1415,"src":"357:7:10"},"id":1568,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1589,"linearizedBaseContracts":[1589,1415,4283],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1569,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1574,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1571,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":1589,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1580,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":1589,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1588,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":1588,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1585,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":1589,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1590,"src":"328:463:10","usedErrors":[],"usedEvents":[1314,1323,1332]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1666],"IERC721Errors":[294],"IERC721Receiver":[1433]},"id":1667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1591,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1667,"sourceUnit":1434,"src":"144:55:11","symbolAliases":[{"foreign":{"id":1592,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1667,"sourceUnit":342,"src":"200:69:11","symbolAliases":[{"foreign":{"id":1594,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1666,"linearizedBaseContracts":[1666],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1664,"nodeType":"Block","src":"1159:760:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1173:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:11","memberName":"code","nodeType":"MemberAccess","src":"1173:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:11","memberName":"length","nodeType":"MemberAccess","src":"1173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1663,"nodeType":"IfStatement","src":"1169:744:11","trueBody":{"id":1662,"nodeType":"Block","src":"1193:720:11","statements":[{"clauses":[{"block":{"id":1640,"nodeType":"Block","src":"1303:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"1325:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1628,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1335:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1433_$","typeString":"type(contract IERC721Receiver)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"1335:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1639,"nodeType":"IfStatement","src":"1321:182:11","trueBody":{"id":1638,"nodeType":"Block","src":"1378:125:11","statements":[{"errorCall":{"arguments":[{"id":1635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1481:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1632,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1445:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1445:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"RevertStatement","src":"1438:46:11"}]}}]},"errorName":"","id":1641,"nodeType":"TryCatchClause","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"retval","nameLocation":"1295:6:11","nodeType":"VariableDeclaration","scope":1641,"src":"1288:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1624,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:11"},"src":"1279:238:11"},{"block":{"id":1659,"nodeType":"Block","src":"1546:357:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1645,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1568:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:11","memberName":"length","nodeType":"MemberAccess","src":"1568:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1657,"nodeType":"Block","src":"1736:153:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:11"},"nodeType":"YulFunctionCall","src":"1816:17:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:11"},"nodeType":"YulFunctionCall","src":"1835:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:11"},"nodeType":"YulFunctionCall","src":"1809:40:11"},"nodeType":"YulExpressionStatement","src":"1809:40:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1643,"isOffset":false,"isSlot":false,"src":"1820:6:11","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"1841:6:11","valueSize":1}],"flags":["memory-safe"],"id":1656,"nodeType":"InlineAssembly","src":"1758:113:11"}]},"id":1658,"nodeType":"IfStatement","src":"1564:325:11","trueBody":{"id":1655,"nodeType":"Block","src":"1588:142:11","statements":[{"errorCall":{"arguments":[{"id":1652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1708:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1649,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1672:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$294_$","typeString":"type(contract IERC721Errors)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":276,"src":"1672:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"RevertStatement","src":"1665:46:11"}]}}]},"errorName":"","id":1660,"nodeType":"TryCatchClause","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"reason","nameLocation":"1538:6:11","nodeType":"VariableDeclaration","scope":1660,"src":"1525:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1642,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:11"},"src":"1518:385:11"}],"externalCall":{"arguments":[{"id":1619,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1248:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1258:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1622,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1273:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"1227:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1615,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1211:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1433_$","typeString":"type(contract IERC721Receiver)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1433","typeString":"contract IERC721Receiver"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"1211:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1661,"nodeType":"TryStatement","src":"1207:696:11"}]}}]},"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"457:531:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:11","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"operator","nameLocation":"1041:8:11","nodeType":"VariableDeclaration","scope":1665,"src":"1033:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"from","nameLocation":"1067:4:11","nodeType":"VariableDeclaration","scope":1665,"src":"1059:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"to","nameLocation":"1089:2:11","nodeType":"VariableDeclaration","scope":1665,"src":"1081:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":1665,"src":"1101:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"data","nameLocation":"1139:4:11","nodeType":"VariableDeclaration","scope":1665,"src":"1126:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:11"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[],"src":"1159:0:11"},"scope":1666,"src":"993:926:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1667,"src":"431:1490:11","usedErrors":[],"usedEvents":[]}],"src":"118:1804:11"},"id":11},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[1761]},"id":1762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1668,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"126:75:12","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":1761,"linearizedBaseContracts":[1761],"name":"Base64","nameLocation":"210:6:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"223:131:12","text":" @dev Base64 Encoding/Decoding Table\n See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648"},"id":1673,"mutability":"constant","name":"_TABLE","nameLocation":"384:6:12","nodeType":"VariableDeclaration","scope":1761,"src":"359:100:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1671,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"393:66:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":1676,"mutability":"constant","name":"_TABLE_URL","nameLocation":"490:10:12","nodeType":"VariableDeclaration","scope":1761,"src":"465:104:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1674,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:66:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"736:51:12","statements":[{"expression":{"arguments":[{"id":1685,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"761:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1686,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"767:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"775:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1684,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"753:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1683,"id":1689,"nodeType":"Return","src":"746:34:12"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"576:82:12","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"672:6:12","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"data","nameLocation":"692:4:12","nodeType":"VariableDeclaration","scope":1691,"src":"679:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"679:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"678:19:12"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"721:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:12"},"scope":1761,"src":"663:124:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"1061:56:12","statements":[{"expression":{"arguments":[{"id":1700,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1086:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1701,"name":"_TABLE_URL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1092:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1104:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1699,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"1078:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1698,"id":1704,"nodeType":"Return","src":"1071:39:12"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"793:187:12","text":" @dev Converts a `bytes` to its Bytes64Url `string` representation.\n Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648]."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"encodeURL","nameLocation":"994:9:12","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"data","nameLocation":"1017:4:12","nodeType":"VariableDeclaration","scope":1706,"src":"1004:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1693,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:19:12"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1046:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1696,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1045:15:12"},"scope":1761,"src":"985:132:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"1298:3882:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1718,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"1515:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:12","memberName":"length","nodeType":"MemberAccess","src":"1515:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1515:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":1724,"nodeType":"IfStatement","src":"1511:31:12","trueBody":{"expression":{"hexValue":"","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1717,"id":1723,"nodeType":"Return","src":"1533:9:12"}},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"resultLength","nameLocation":"2488:12:12","nodeType":"VariableDeclaration","scope":1759,"src":"2480:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1748,"initialValue":{"condition":{"id":1727,"name":"withPadding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2503:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1739,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2552:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:6:12","memberName":"length","nodeType":"MemberAccess","src":"2552:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2548:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2547:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2547:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2503:69:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1729,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2523:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:12","memberName":"length","nodeType":"MemberAccess","src":"2523:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2523:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2522:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2522:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2521:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2480:92:12"},{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"result","nameLocation":"2597:6:12","nodeType":"VariableDeclaration","scope":1759,"src":"2583:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1749,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1755,"initialValue":{"arguments":[{"id":1753,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2617:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2606:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1751,"name":"string","nodeType":"ElementaryTypeName","src":"2610:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2583:47:12"},{"AST":{"nodeType":"YulBlock","src":"2666:2484:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2751:29:12","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"2771:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2778:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2767:3:12"},"nodeType":"YulFunctionCall","src":"2767:13:12"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"2755:8:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2850:34:12","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"2871:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2879:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:12"},"nodeType":"YulFunctionCall","src":"2867:17:12"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"2854:9:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2897:19:12","value":{"name":"data","nodeType":"YulIdentifier","src":"2912:4:12"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"2901:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2929:36:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2947:4:12"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2959:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2953:5:12"},"nodeType":"YulFunctionCall","src":"2953:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2943:3:12"},"nodeType":"YulFunctionCall","src":"2943:22:12"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"2933:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3179:33:12","value":{"arguments":[{"name":"endPtr","nodeType":"YulIdentifier","src":"3199:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3207:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:12"},"nodeType":"YulFunctionCall","src":"3195:17:12"},"variables":[{"name":"afterPtr","nodeType":"YulTypedName","src":"3183:8:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3225:33:12","value":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"3249:8:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3243:5:12"},"nodeType":"YulFunctionCall","src":"3243:15:12"},"variables":[{"name":"afterCache","nodeType":"YulTypedName","src":"3229:10:12","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"3278:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"3288:4:12","type":"","value":"0x00"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3271:6:12"},"nodeType":"YulFunctionCall","src":"3271:22:12"},"nodeType":"YulExpressionStatement","src":"3271:22:12"},{"body":{"nodeType":"YulBlock","src":"3390:1201:12","statements":[{"nodeType":"YulAssignment","src":"3443:26:12","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3458:7:12"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:12","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:12"},"nodeType":"YulFunctionCall","src":"3454:15:12"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3443:7:12"}]},{"nodeType":"YulVariableDeclaration","src":"3486:27:12","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3505:7:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3499:5:12"},"nodeType":"YulFunctionCall","src":"3499:14:12"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"3490:5:12","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4041:9:12"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4062:8:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:12","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"4084:5:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4076:3:12"},"nodeType":"YulFunctionCall","src":"4076:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"4092:4:12","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4072:3:12"},"nodeType":"YulFunctionCall","src":"4072:25:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4058:3:12"},"nodeType":"YulFunctionCall","src":"4058:40:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4052:5:12"},"nodeType":"YulFunctionCall","src":"4052:47:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4033:7:12"},"nodeType":"YulFunctionCall","src":"4033:67:12"},"nodeType":"YulExpressionStatement","src":"4033:67:12"},{"nodeType":"YulAssignment","src":"4117:30:12","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4134:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4145:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:12"},"nodeType":"YulFunctionCall","src":"4130:17:12"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4117:9:12"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4184:9:12"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4205:8:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4223:2:12","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"4227:5:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4219:3:12"},"nodeType":"YulFunctionCall","src":"4219:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"4235:4:12","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4215:3:12"},"nodeType":"YulFunctionCall","src":"4215:25:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:12"},"nodeType":"YulFunctionCall","src":"4201:40:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4195:5:12"},"nodeType":"YulFunctionCall","src":"4195:47:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4176:7:12"},"nodeType":"YulFunctionCall","src":"4176:67:12"},"nodeType":"YulExpressionStatement","src":"4176:67:12"},{"nodeType":"YulAssignment","src":"4260:30:12","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4277:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4288:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:12"},"nodeType":"YulFunctionCall","src":"4273:17:12"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4260:9:12"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4327:9:12"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4348:8:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4366:1:12","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"4369:5:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4362:3:12"},"nodeType":"YulFunctionCall","src":"4362:13:12"},{"kind":"number","nodeType":"YulLiteral","src":"4377:4:12","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4358:3:12"},"nodeType":"YulFunctionCall","src":"4358:24:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:12"},"nodeType":"YulFunctionCall","src":"4344:39:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4338:5:12"},"nodeType":"YulFunctionCall","src":"4338:46:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4319:7:12"},"nodeType":"YulFunctionCall","src":"4319:66:12"},"nodeType":"YulExpressionStatement","src":"4319:66:12"},{"nodeType":"YulAssignment","src":"4402:30:12","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4419:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4430:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:12"},"nodeType":"YulFunctionCall","src":"4415:17:12"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4402:9:12"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4469:9:12"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4490:8:12"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"4504:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"4511:4:12","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4500:3:12"},"nodeType":"YulFunctionCall","src":"4500:16:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4486:3:12"},"nodeType":"YulFunctionCall","src":"4486:31:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4480:5:12"},"nodeType":"YulFunctionCall","src":"4480:38:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4461:7:12"},"nodeType":"YulFunctionCall","src":"4461:58:12"},"nodeType":"YulExpressionStatement","src":"4461:58:12"},{"nodeType":"YulAssignment","src":"4536:30:12","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4553:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4564:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4549:3:12"},"nodeType":"YulFunctionCall","src":"4549:17:12"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4536:9:12"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3370:7:12"},{"name":"endPtr","nodeType":"YulIdentifier","src":"3379:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3367:2:12"},"nodeType":"YulFunctionCall","src":"3367:19:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3387:2:12","statements":[]},"pre":{"nodeType":"YulBlock","src":"3364:2:12","statements":[]},"src":"3360:1231:12"},{"expression":{"arguments":[{"name":"afterPtr","nodeType":"YulIdentifier","src":"4659:8:12"},{"name":"afterCache","nodeType":"YulIdentifier","src":"4669:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4652:6:12"},"nodeType":"YulFunctionCall","src":"4652:28:12"},"nodeType":"YulExpressionStatement","src":"4652:28:12"},{"body":{"nodeType":"YulBlock","src":"4709:431:12","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"4905:125:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4939:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4950:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4935:3:12"},"nodeType":"YulFunctionCall","src":"4935:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"4954:4:12","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4927:7:12"},"nodeType":"YulFunctionCall","src":"4927:32:12"},"nodeType":"YulExpressionStatement","src":"4927:32:12"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4992:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5003:1:12","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4988:3:12"},"nodeType":"YulFunctionCall","src":"4988:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"5007:4:12","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4980:7:12"},"nodeType":"YulFunctionCall","src":"4980:32:12"},"nodeType":"YulExpressionStatement","src":"4980:32:12"}]},"nodeType":"YulCase","src":"4898:132:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4903:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5054:72:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"5088:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5099:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5084:3:12"},"nodeType":"YulFunctionCall","src":"5084:17:12"},{"kind":"number","nodeType":"YulLiteral","src":"5103:4:12","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5076:7:12"},"nodeType":"YulFunctionCall","src":"5076:32:12"},"nodeType":"YulExpressionStatement","src":"5076:32:12"}]},"nodeType":"YulCase","src":"5047:79:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5052:1:12","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4872:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4866:5:12"},"nodeType":"YulFunctionCall","src":"4866:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"4879:1:12","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"4862:3:12"},"nodeType":"YulFunctionCall","src":"4862:19:12"},"nodeType":"YulSwitch","src":"4855:271:12"}]},"condition":{"name":"withPadding","nodeType":"YulIdentifier","src":"4697:11:12"},"nodeType":"YulIf","src":"4694:446:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1709,"isOffset":false,"isSlot":false,"src":"2912:4:12","valueSize":1},{"declaration":1709,"isOffset":false,"isSlot":false,"src":"2947:4:12","valueSize":1},{"declaration":1709,"isOffset":false,"isSlot":false,"src":"2959:4:12","valueSize":1},{"declaration":1709,"isOffset":false,"isSlot":false,"src":"4872:4:12","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"2871:6:12","valueSize":1},{"declaration":1711,"isOffset":false,"isSlot":false,"src":"2771:5:12","valueSize":1},{"declaration":1713,"isOffset":false,"isSlot":false,"src":"4697:11:12","valueSize":1}],"flags":["memory-safe"],"id":1756,"nodeType":"InlineAssembly","src":"2641:2509:12"},{"expression":{"id":1757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5167:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1717,"id":1758,"nodeType":"Return","src":"5160:13:12"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1123:58:12","text":" @dev Internal table-agnostic conversion"},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"_encode","nameLocation":"1195:7:12","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"data","nameLocation":"1216:4:12","nodeType":"VariableDeclaration","scope":1760,"src":"1203:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1708,"name":"bytes","nodeType":"ElementaryTypeName","src":"1203:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"table","nameLocation":"1236:5:12","nodeType":"VariableDeclaration","scope":1760,"src":"1222:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"1222:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"withPadding","nameLocation":"1248:11:12","nodeType":"VariableDeclaration","scope":1760,"src":"1243:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1712,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:58:12"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"1283:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1715,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:12"},"scope":1761,"src":"1186:3994:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1762,"src":"202:4980:12","usedErrors":[],"usedEvents":[]}],"src":"100:5083:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1791]},"id":1792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1763,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1791,"linearizedBaseContracts":[1791],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1772,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1769,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1768,"id":1771,"nodeType":"Return","src":"728:17:13"}]},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1791,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1781,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1777,"id":1780,"nodeType":"Return","src":"835:15:13"}]},"id":1782,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1782,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1791,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1789,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1786,"id":1788,"nodeType":"Return","src":"945:8:13"}]},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1790,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1791,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1792,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1843]},"id":1844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1793,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1843,"linearizedBaseContracts":[1843],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1798,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1843,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1802,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1843,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1806,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1843,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1810,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1843,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1814,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1843,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1818,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1843,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1822,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1843,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1826,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1843,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1830,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1843,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1834,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1843,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1841,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1837,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1840,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1842,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1843,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1844,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1849],"ShortStrings":[2060],"StorageSlot":[2184]},"id":2061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1845,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2061,"sourceUnit":2185,"src":"132:46:15","symbolAliases":[{"foreign":{"id":1846,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"140:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1849,"name":"ShortString","nameLocation":"353:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:15","underlyingType":{"id":1848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"378:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2060,"linearizedBaseContracts":[2060],"name":"ShortStrings","nameLocation":"1263:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1853,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:15","nodeType":"VariableDeclaration","scope":2060,"src":"1345:111:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1857,"name":"StringTooLong","nameLocation":"1469:13:15","nodeType":"ErrorDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"str","nameLocation":"1490:3:15","nodeType":"VariableDeclaration","scope":1857,"src":"1483:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:15"},"src":"1463:32:15"},{"errorSelector":"b3512b0c","id":1859,"name":"InvalidShortString","nameLocation":"1506:18:15","nodeType":"ErrorDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"1524:2:15"},"src":"1500:27:15"},{"body":{"id":1902,"nodeType":"Block","src":"1786:208:15","statements":[{"assignments":[1869],"declarations":[{"constant":false,"id":1869,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:15","nodeType":"VariableDeclaration","scope":1902,"src":"1796:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1868,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1874,"initialValue":{"arguments":[{"id":1872,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1822:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1870,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:15","typeDescriptions":{}}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1875,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"1840:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:15","memberName":"length","nodeType":"MemberAccess","src":"1840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"nodeType":"IfStatement","src":"1836:72:15","trueBody":{"id":1883,"nodeType":"Block","src":"1858:50:15","statements":[{"errorCall":{"arguments":[{"id":1880,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1893:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1879,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"1879:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1882,"nodeType":"RevertStatement","src":"1872:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1893,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"1965:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:15","typeDescriptions":{}}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1896,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"1974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:15","memberName":"length","nodeType":"MemberAccess","src":"1974:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:15","typeDescriptions":{}}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1885,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"1924:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"type(ShortString)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"functionReturnParameters":1867,"id":1901,"nodeType":"Return","src":"1917:70:15"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"1533:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:15","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"str","nameLocation":"1745:3:15","nodeType":"VariableDeclaration","scope":1903,"src":"1731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1861,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:15"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"1773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":1865,"nodeType":"UserDefinedTypeName","pathNode":{"id":1864,"name":"ShortString","nameLocations":["1773:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"1773:11:15"},"referencedDeclaration":1849,"src":"1773:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:15"},"scope":2060,"src":"1708:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"2152:304:15","statements":[{"assignments":[1913],"declarations":[{"constant":false,"id":1913,"mutability":"mutable","name":"len","nameLocation":"2170:3:15","nodeType":"VariableDeclaration","scope":1928,"src":"2162:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[{"id":1915,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"2187:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"id":1914,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:15"},{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"str","nameLocation":"2294:3:15","nodeType":"VariableDeclaration","scope":1928,"src":"2280:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1918,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1924,"initialValue":{"arguments":[{"hexValue":"3332","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1920,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:15"},{"AST":{"nodeType":"YulBlock","src":"2349:81:15","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:15"},"nodeType":"YulFunctionCall","src":"2363:16:15"},"nodeType":"YulExpressionStatement","src":"2363:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:15"},"nodeType":"YulFunctionCall","src":"2399:14:15"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:15"},"nodeType":"YulFunctionCall","src":"2392:28:15"},"nodeType":"YulExpressionStatement","src":"2392:28:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1913,"isOffset":false,"isSlot":false,"src":"2375:3:15","valueSize":1},{"declaration":1907,"isOffset":false,"isSlot":false,"src":"2415:4:15","valueSize":1},{"declaration":1919,"isOffset":false,"isSlot":false,"src":"2370:3:15","valueSize":1},{"declaration":1919,"isOffset":false,"isSlot":false,"src":"2403:3:15","valueSize":1}],"flags":["memory-safe"],"id":1925,"nodeType":"InlineAssembly","src":"2324:106:15"},{"expression":{"id":1926,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2446:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1911,"id":1927,"nodeType":"Return","src":"2439:10:15"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"2000:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:15","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:15","nodeType":"VariableDeclaration","scope":1929,"src":"2096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":1906,"nodeType":"UserDefinedTypeName","pathNode":{"id":1905,"name":"ShortString","nameLocations":["2096:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"2096:11:15"},"referencedDeclaration":1849,"src":"2096:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:15"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"2137:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1909,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:15"},"scope":2060,"src":"2078:378:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"2598:175:15","statements":[{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"result","nameLocation":"2616:6:15","nodeType":"VariableDeclaration","scope":1960,"src":"2608:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1949,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1944,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2652:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"expression":{"id":1942,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"2633:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"type(ShortString)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:15","typeDescriptions":{}}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1957,"nodeType":"IfStatement","src":"2675:69:15","trueBody":{"id":1956,"nodeType":"Block","src":"2692:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1953,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"2713:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"RevertStatement","src":"2706:27:15"}]}},{"expression":{"id":1958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1937,"id":1959,"nodeType":"Return","src":"2753:13:15"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"2462:61:15","text":" @dev Return the length of a `ShortString`."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:15","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:15","nodeType":"VariableDeclaration","scope":1961,"src":"2548:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":1932,"nodeType":"UserDefinedTypeName","pathNode":{"id":1931,"name":"ShortString","nameLocations":["2548:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"2548:11:15"},"referencedDeclaration":1849,"src":"2548:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:15"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"2589:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:15"},"scope":2060,"src":"2528:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"2996:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3016:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:15","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:15","memberName":"length","nodeType":"MemberAccess","src":"3010:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1998,"nodeType":"Block","src":"3094:127:15","statements":[{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1987,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3134:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1984,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"3108:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2184_$","typeString":"type(library StorageSlot)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"3108:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2081_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2081_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"3108:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3149:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1992,"nodeType":"ExpressionStatement","src":"3108:46:15"},{"expression":{"arguments":[{"id":1995,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3192:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1993,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"3175:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"type(ShortString)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"functionReturnParameters":1971,"id":1997,"nodeType":"Return","src":"3168:42:15"}]},"id":1999,"nodeType":"IfStatement","src":"3006:215:15","trueBody":{"id":1983,"nodeType":"Block","src":"3036:52:15","statements":[{"expression":{"arguments":[{"id":1980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3071:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1979,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3057:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"functionReturnParameters":1971,"id":1982,"nodeType":"Return","src":"3050:27:15"}]}}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"2779:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:15","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"value","nameLocation":"2936:5:15","nodeType":"VariableDeclaration","scope":2001,"src":"2922:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1963,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1966,"mutability":"mutable","name":"store","nameLocation":"2958:5:15","nodeType":"VariableDeclaration","scope":2001,"src":"2943:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1965,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:15"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"2983:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":1969,"nodeType":"UserDefinedTypeName","pathNode":{"id":1968,"name":"ShortString","nameLocations":["2983:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"2983:11:15"},"referencedDeclaration":1849,"src":"2983:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:15"},"scope":2060,"src":"2887:340:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2027,"nodeType":"Block","src":"3477:158:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3510:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"expression":{"id":2012,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"3491:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"type(ShortString)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2016,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3520:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2025,"nodeType":"Block","src":"3592:37:15","statements":[{"expression":{"id":2023,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"3613:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2011,"id":2024,"nodeType":"Return","src":"3606:12:15"}]},"id":2026,"nodeType":"IfStatement","src":"3487:142:15","trueBody":{"id":2022,"nodeType":"Block","src":"3539:47:15","statements":[{"expression":{"arguments":[{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3569:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"id":2018,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"3560:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2011,"id":2021,"nodeType":"Return","src":"3553:22:15"}]}}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"3233:130:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:15","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"value","nameLocation":"3410:5:15","nodeType":"VariableDeclaration","scope":2028,"src":"3398:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":2004,"nodeType":"UserDefinedTypeName","pathNode":{"id":2003,"name":"ShortString","nameLocations":["3398:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"3398:11:15"},"referencedDeclaration":1849,"src":"3398:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"store","nameLocation":"3432:5:15","nodeType":"VariableDeclaration","scope":2028,"src":"3417:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2006,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:15"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"3462:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:15"},"scope":2060,"src":"3368:267:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"4125:174:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4158:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"expression":{"id":2039,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"4139:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"type(ShortString)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2043,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4168:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2056,"nodeType":"Block","src":"4242:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":2052,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4269:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:15","typeDescriptions":{}}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:15","memberName":"length","nodeType":"MemberAccess","src":"4263:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2038,"id":2055,"nodeType":"Return","src":"4256:26:15"}]},"id":2057,"nodeType":"IfStatement","src":"4135:158:15","trueBody":{"id":2049,"nodeType":"Block","src":"4187:49:15","statements":[{"expression":{"arguments":[{"id":2046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"4219:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}],"id":2045,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"4208:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1849_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2038,"id":2048,"nodeType":"Return","src":"4201:24:15"}]}}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"3641:374:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:15","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"value","nameLocation":"4064:5:15","nodeType":"VariableDeclaration","scope":2059,"src":"4052:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":2031,"nodeType":"UserDefinedTypeName","pathNode":{"id":2030,"name":"ShortString","nameLocations":["4052:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"4052:11:15"},"referencedDeclaration":1849,"src":"4052:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"store","nameLocation":"4086:5:15","nodeType":"VariableDeclaration","scope":2059,"src":"4071:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2033,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:15"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"4116:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:15"},"scope":2060,"src":"4020:279:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2061,"src":"1255:3046:15","usedErrors":[1857,1859],"usedEvents":[]}],"src":"106:4196:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2184]},"id":2185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"219:1187:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2184,"linearizedBaseContracts":[2184],"name":"StorageSlot","nameLocation":"1415:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2066,"members":[{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":2066,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":2184,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2069,"members":[{"constant":false,"id":2068,"mutability":"mutable","name":"value","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":2069,"src":"1517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2067,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:16","nodeType":"StructDefinition","scope":2184,"src":"1488:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2072,"members":[{"constant":false,"id":2071,"mutability":"mutable","name":"value","nameLocation":"1577:5:16","nodeType":"VariableDeclaration","scope":2072,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:16","nodeType":"StructDefinition","scope":2184,"src":"1540:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2075,"members":[{"constant":false,"id":2074,"mutability":"mutable","name":"value","nameLocation":"1632:5:16","nodeType":"VariableDeclaration","scope":2075,"src":"1624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:16","nodeType":"StructDefinition","scope":2184,"src":"1595:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2078,"members":[{"constant":false,"id":2077,"mutability":"mutable","name":"value","nameLocation":"1685:5:16","nodeType":"VariableDeclaration","scope":2078,"src":"1678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2076,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:16","nodeType":"StructDefinition","scope":2184,"src":"1650:47:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2081,"members":[{"constant":false,"id":2080,"mutability":"mutable","name":"value","nameLocation":"1738:5:16","nodeType":"VariableDeclaration","scope":2081,"src":"1731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2079,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:16","nodeType":"StructDefinition","scope":2184,"src":"1703:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2084,"members":[{"constant":false,"id":2083,"mutability":"mutable","name":"value","nameLocation":"1789:5:16","nodeType":"VariableDeclaration","scope":2084,"src":"1783:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:16","nodeType":"StructDefinition","scope":2184,"src":"1756:45:16","visibility":"public"},{"body":{"id":2094,"nodeType":"Block","src":"1983:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:16","statements":[{"nodeType":"YulAssignment","src":"2032:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2091,"isOffset":false,"isSlot":true,"src":"2032:6:16","suffix":"slot","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"2042:4:16","valueSize":1}],"flags":["memory-safe"],"id":2093,"nodeType":"InlineAssembly","src":"1993:63:16"}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"1807:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:16","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"slot","nameLocation":"1931:4:16","nodeType":"VariableDeclaration","scope":2095,"src":"1923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:16"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"r","nameLocation":"1980:1:16","nodeType":"VariableDeclaration","scope":2095,"src":"1960:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2066_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2090,"nodeType":"UserDefinedTypeName","pathNode":{"id":2089,"name":"AddressSlot","nameLocations":["1960:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"1960:11:16"},"referencedDeclaration":2066,"src":"1960:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2066_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:16"},"scope":2184,"src":"1899:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"2243:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:16","statements":[{"nodeType":"YulAssignment","src":"2292:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2102,"isOffset":false,"isSlot":true,"src":"2292:6:16","suffix":"slot","valueSize":1},{"declaration":2098,"isOffset":false,"isSlot":false,"src":"2302:4:16","valueSize":1}],"flags":["memory-safe"],"id":2104,"nodeType":"InlineAssembly","src":"2253:63:16"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2068:86:16","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:16","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"slot","nameLocation":"2191:4:16","nodeType":"VariableDeclaration","scope":2106,"src":"2183:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:16"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"r","nameLocation":"2240:1:16","nodeType":"VariableDeclaration","scope":2106,"src":"2220:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2069_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2101,"nodeType":"UserDefinedTypeName","pathNode":{"id":2100,"name":"BooleanSlot","nameLocations":["2220:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2069,"src":"2220:11:16"},"referencedDeclaration":2069,"src":"2220:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2069_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:16"},"scope":2184,"src":"2159:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"2503:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:16","statements":[{"nodeType":"YulAssignment","src":"2552:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2113,"isOffset":false,"isSlot":true,"src":"2552:6:16","suffix":"slot","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"2562:4:16","valueSize":1}],"flags":["memory-safe"],"id":2115,"nodeType":"InlineAssembly","src":"2513:63:16"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"2328:86:16","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:16","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"slot","nameLocation":"2451:4:16","nodeType":"VariableDeclaration","scope":2117,"src":"2443:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:16"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"r","nameLocation":"2500:1:16","nodeType":"VariableDeclaration","scope":2117,"src":"2480:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2072_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"Bytes32Slot","nameLocations":["2480:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"2480:11:16"},"referencedDeclaration":2072,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2072_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:16"},"scope":2184,"src":"2419:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"2763:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:16","statements":[{"nodeType":"YulAssignment","src":"2812:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2124,"isOffset":false,"isSlot":true,"src":"2812:6:16","suffix":"slot","valueSize":1},{"declaration":2120,"isOffset":false,"isSlot":false,"src":"2822:4:16","valueSize":1}],"flags":["memory-safe"],"id":2126,"nodeType":"InlineAssembly","src":"2773:63:16"}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"2588:86:16","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:16","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":2128,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:16"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"r","nameLocation":"2760:1:16","nodeType":"VariableDeclaration","scope":2128,"src":"2740:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2075_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2123,"nodeType":"UserDefinedTypeName","pathNode":{"id":2122,"name":"Uint256Slot","nameLocations":["2740:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2075,"src":"2740:11:16"},"referencedDeclaration":2075,"src":"2740:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2075_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:16"},"scope":2184,"src":"2679:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"3020:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:16","statements":[{"nodeType":"YulAssignment","src":"3069:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"3069:6:16","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"3079:4:16","valueSize":1}],"flags":["memory-safe"],"id":2137,"nodeType":"InlineAssembly","src":"3030:63:16"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"2848:85:16","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:16","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"2969:4:16","nodeType":"VariableDeclaration","scope":2139,"src":"2961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:16"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"3017:1:16","nodeType":"VariableDeclaration","scope":2139,"src":"2998:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2078_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"Int256Slot","nameLocations":["2998:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2078,"src":"2998:10:16"},"referencedDeclaration":2078,"src":"2998:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2078_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:16"},"scope":2184,"src":"2938:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"3277:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:16","statements":[{"nodeType":"YulAssignment","src":"3326:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"3326:6:16","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"3336:4:16","valueSize":1}],"flags":["memory-safe"],"id":2148,"nodeType":"InlineAssembly","src":"3287:63:16"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"3105:85:16","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:16","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"3226:4:16","nodeType":"VariableDeclaration","scope":2150,"src":"3218:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:16"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"3274:1:16","nodeType":"VariableDeclaration","scope":2150,"src":"3255:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2081_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"StringSlot","nameLocations":["3255:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2081,"src":"3255:10:16"},"referencedDeclaration":2081,"src":"3255:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2081_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:16"},"scope":2184,"src":"3195:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"3558:85:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:16","statements":[{"nodeType":"YulAssignment","src":"3607:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"3607:6:16","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":true,"src":"3617:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2159,"nodeType":"InlineAssembly","src":"3568:69:16"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"3362:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:16","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"store","nameLocation":"3506:5:16","nodeType":"VariableDeclaration","scope":2161,"src":"3491:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:16"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"3555:1:16","nodeType":"VariableDeclaration","scope":2161,"src":"3536:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2081_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"StringSlot","nameLocations":["3536:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2081,"src":"3536:10:16"},"referencedDeclaration":2081,"src":"3536:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2081_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:16"},"scope":2184,"src":"3468:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"3818:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:16","statements":[{"nodeType":"YulAssignment","src":"3867:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"3867:6:16","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"3877:4:16","valueSize":1}],"flags":["memory-safe"],"id":2170,"nodeType":"InlineAssembly","src":"3828:63:16"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"3649:84:16","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:16","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":2172,"src":"3760:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:16"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"3815:1:16","nodeType":"VariableDeclaration","scope":2172,"src":"3797:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2084_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"BytesSlot","nameLocations":["3797:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2084,"src":"3797:9:16"},"referencedDeclaration":2084,"src":"3797:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2084_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:16"},"scope":2184,"src":"3738:159:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"4094:85:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:16","statements":[{"nodeType":"YulAssignment","src":"4143:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"4143:6:16","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":true,"src":"4153:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2181,"nodeType":"InlineAssembly","src":"4104:69:16"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"3903:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:16","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"store","nameLocation":"4043:5:16","nodeType":"VariableDeclaration","scope":2183,"src":"4029:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2174,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:16"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"4091:1:16","nodeType":"VariableDeclaration","scope":2183,"src":"4073:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2084_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"BytesSlot","nameLocations":["4073:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2084,"src":"4073:9:16"},"referencedDeclaration":2084,"src":"4073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2084_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:16"},"scope":2184,"src":"4007:172:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2185,"src":"1407:2774:16","usedErrors":[],"usedEvents":[]}],"src":"193:3989:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5904],"SafeCast":[7669],"SignedMath":[7813],"Strings":[3586]},"id":3587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2186,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":5905,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2187,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":7670,"src":"165:45:17","symbolAliases":[{"foreign":{"id":2189,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3587,"sourceUnit":7814,"src":"211:49:17","symbolAliases":[{"foreign":{"id":2191,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3586,"linearizedBaseContracts":[3586],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2195,"libraryName":{"id":2194,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":7669,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":2198,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":3586,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2196,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2201,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":3586,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2199,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2237,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:17","nodeType":"VariableDeclaration","scope":3586,"src":"456:302:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:17","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:17","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:17","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:17","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:17","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"778:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2244,"name":"StringsInsufficientHexLength","nameLocation":"870:28:17","nodeType":"ErrorDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"value","nameLocation":"907:5:17","nodeType":"VariableDeclaration","scope":2244,"src":"899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"length","nameLocation":"922:6:17","nodeType":"VariableDeclaration","scope":2244,"src":"914:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:17"},"src":"864:66:17"},{"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"936:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2247,"name":"StringsInvalidChar","nameLocation":"1055:18:17","nodeType":"ErrorDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[],"src":"1073:2:17"},"src":"1049:27:17"},{"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"1082:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2250,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:17","nodeType":"ErrorDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[],"src":"1204:2:17"},"src":"1171:36:17"},{"body":{"id":2297,"nodeType":"Block","src":"1379:563:17","statements":[{"id":2296,"nodeType":"UncheckedBlock","src":"1389:547:17","statements":[{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"length","nameLocation":"1421:6:17","nodeType":"VariableDeclaration","scope":2296,"src":"1413:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"1441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2260,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1430:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5904_$","typeString":"type(library Math)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5736,"src":"1430:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:17"},{"assignments":[2268],"declarations":[{"constant":false,"id":2268,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:17","nodeType":"VariableDeclaration","scope":2296,"src":"1465:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2273,"initialValue":{"arguments":[{"id":2271,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"1499:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2269,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:17"},{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:17","nodeType":"VariableDeclaration","scope":2296,"src":"1520:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2276,"nodeType":"VariableDeclarationStatement","src":"1520:11:17"},{"AST":{"nodeType":"YulBlock","src":"1570:69:17","statements":[{"nodeType":"YulAssignment","src":"1588:37:17","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:17"},"nodeType":"YulFunctionCall","src":"1599:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:17"},"nodeType":"YulFunctionCall","src":"1595:30:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2268,"isOffset":false,"isSlot":false,"src":"1603:6:17","valueSize":1},{"declaration":2259,"isOffset":false,"isSlot":false,"src":"1618:6:17","valueSize":1},{"declaration":2275,"isOffset":false,"isSlot":false,"src":"1588:3:17","valueSize":1}],"flags":["memory-safe"],"id":2277,"nodeType":"InlineAssembly","src":"1545:94:17"},{"body":{"id":2292,"nodeType":"Block","src":"1665:234:17","statements":[{"expression":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:17","subExpression":{"id":2279,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"nodeType":"ExpressionStatement","src":"1683:5:17"},{"AST":{"nodeType":"YulBlock","src":"1731:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:17"},"nodeType":"YulFunctionCall","src":"1771:14:17"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:17"},"nodeType":"YulFunctionCall","src":"1766:32:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:17"},"nodeType":"YulFunctionCall","src":"1753:46:17"},"nodeType":"YulExpressionStatement","src":"1753:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2198,"isOffset":false,"isSlot":false,"src":"1787:10:17","valueSize":1},{"declaration":2275,"isOffset":false,"isSlot":false,"src":"1761:3:17","valueSize":1},{"declaration":2253,"isOffset":false,"isSlot":false,"src":"1775:5:17","valueSize":1}],"flags":["memory-safe"],"id":2282,"nodeType":"InlineAssembly","src":"1706:111:17"},{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"1834:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"1867:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"1863:21:17","trueBody":{"id":2290,"nodeType":"Break","src":"1879:5:17"}}]},"condition":{"hexValue":"74727565","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2293,"nodeType":"WhileStatement","src":"1652:247:17"},{"expression":{"id":2294,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1919:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2257,"id":2295,"nodeType":"Return","src":"1912:13:17"}]}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"1213:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:17","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"value","nameLocation":"1334:5:17","nodeType":"VariableDeclaration","scope":2298,"src":"1326:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:17"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2298,"src":"1364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:17"},"scope":3586,"src":"1308:634:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"2118:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2149:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:17","trueExpression":{"hexValue":"2d","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2195:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2316,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2180:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7813_$","typeString":"type(library SignedMath)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7812,"src":"2180:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2315,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"2171:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:17","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2305,"id":2322,"nodeType":"Return","src":"2128:75:17"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"1948:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:17","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"value","nameLocation":"2073:5:17","nodeType":"VariableDeclaration","scope":2324,"src":"2066:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2300,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:17"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"2103:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2303,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:17"},"scope":3586,"src":"2042:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"2389:100:17","statements":[{"id":2342,"nodeType":"UncheckedBlock","src":"2399:84:17","statements":[{"expression":{"arguments":[{"id":2333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2442:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2461:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2334,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"2449:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5904_$","typeString":"type(library Math)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5847,"src":"2449:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2344,2427,2447],"referencedDeclaration":2427,"src":"2430:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2331,"id":2341,"nodeType":"Return","src":"2423:49:17"}]}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"2216:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:17","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"value","nameLocation":"2344:5:17","nodeType":"VariableDeclaration","scope":2344,"src":"2336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:17"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"2374:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2329,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:17"},"scope":3586,"src":"2315:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2426,"nodeType":"Block","src":"2702:435:17","statements":[{"assignments":[2355],"declarations":[{"constant":false,"id":2355,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:17","nodeType":"VariableDeclaration","scope":2426,"src":"2712:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2357,"initialValue":{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:17"},{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:17","nodeType":"VariableDeclaration","scope":2426,"src":"2748:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2368,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2363,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2784:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2360,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:17"},{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2369,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2805:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2371,"indexExpression":{"hexValue":"30","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2374,"nodeType":"ExpressionStatement","src":"2805:15:17"},{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2375,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2830:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2377,"indexExpression":{"hexValue":"31","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2380,"nodeType":"ExpressionStatement","src":"2830:15:17"},{"body":{"id":2409,"nodeType":"Block","src":"2900:95:17","statements":[{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2395,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2914:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2397,"indexExpression":{"id":2396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2398,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"2926:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2402,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2399,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2937:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2404,"nodeType":"ExpressionStatement","src":"2914:40:17"},{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2405,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2968:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"2968:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2410,"initializationExpression":{"assignments":[2382],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"i","nameLocation":"2868:1:17","nodeType":"VariableDeclaration","scope":2410,"src":"2860:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2388,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2384,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2876:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:17"},"loopExpression":{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:17","subExpression":{"id":2392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2897:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"2895:3:17"},"nodeType":"ForStatement","src":"2855:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"3008:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"3004:96:17","trueBody":{"id":2419,"nodeType":"Block","src":"3025:75:17","statements":[{"errorCall":{"arguments":[{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3075:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2416,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3082:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3046:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"RevertStatement","src":"3039:50:17"}]}},{"expression":{"arguments":[{"id":2423,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"3123:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2421,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:17","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2353,"id":2425,"nodeType":"Return","src":"3109:21:17"}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"2495:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:17","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"value","nameLocation":"2641:5:17","nodeType":"VariableDeclaration","scope":2427,"src":"2633:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"length","nameLocation":"2656:6:17","nodeType":"VariableDeclaration","scope":2427,"src":"2648:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:17"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2427,"src":"2687:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:17"},"scope":3586,"src":"2612:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2446,"nodeType":"Block","src":"3369:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2440,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"3414:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2438,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:17","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:17","typeDescriptions":{}}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2443,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3422:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2435,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2344,2427,2447],"referencedDeclaration":2427,"src":"3386:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2434,"id":2445,"nodeType":"Return","src":"3379:58:17"}]},"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"3143:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:17","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"addr","nameLocation":"3325:4:17","nodeType":"VariableDeclaration","scope":2447,"src":"3317:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:17"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"3354:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2432,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:17"},"scope":3586,"src":"3296:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"3701:642:17","statements":[{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:17","nodeType":"VariableDeclaration","scope":2511,"src":"3711:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2455,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2463,"initialValue":{"arguments":[{"arguments":[{"id":2460,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3751:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2459,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2344,2427,2447],"referencedDeclaration":2447,"src":"3739:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2457,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:17"},{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:17","nodeType":"VariableDeclaration","scope":2511,"src":"3842:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2466,"nodeType":"VariableDeclarationStatement","src":"3842:17:17"},{"AST":{"nodeType":"YulBlock","src":"3894:78:17","statements":[{"nodeType":"YulAssignment","src":"3908:54:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:17"},"nodeType":"YulFunctionCall","src":"3939:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:17"},"nodeType":"YulFunctionCall","src":"3929:32:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:17"},"nodeType":"YulFunctionCall","src":"3921:41:17"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2456,"isOffset":false,"isSlot":false,"src":"3943:6:17","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"3908:9:17","valueSize":1}],"flags":["memory-safe"],"id":2467,"nodeType":"InlineAssembly","src":"3869:103:17"},{"body":{"id":2504,"nodeType":"Block","src":"4015:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4121:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2485,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2487,"indexExpression":{"id":2486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2483,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:17","typeDescriptions":{}}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2499,"nodeType":"IfStatement","src":"4117:150:17","trueBody":{"id":2498,"nodeType":"Block","src":"4167:100:17","statements":[{"expression":{"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2492,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4235:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2494,"indexExpression":{"id":2493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4242:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2497,"nodeType":"ExpressionStatement","src":"4235:17:17"}]}},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4280:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"4280:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4003:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2505,"initializationExpression":{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"i","nameLocation":"3995:1:17","nodeType":"VariableDeclaration","scope":2505,"src":"3987:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2471,"initialValue":{"hexValue":"3431","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:17"},"loopExpression":{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:17","subExpression":{"id":2475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"4010:3:17"},"nodeType":"ForStatement","src":"3982:324:17"},{"expression":{"arguments":[{"id":2508,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4329:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:17","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2454,"id":2510,"nodeType":"Return","src":"4315:21:17"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"3450:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:17","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"addr","nameLocation":"3657:4:17","nodeType":"VariableDeclaration","scope":2512,"src":"3649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:17"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"3686:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2452,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:17"},"scope":3586,"src":"3620:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2548,"nodeType":"Block","src":"4498:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4521:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2522,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:17","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:17","memberName":"length","nodeType":"MemberAccess","src":"4515:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4540:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2527,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:17","typeDescriptions":{}}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:17","memberName":"length","nodeType":"MemberAccess","src":"4534:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4569:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2534,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:17","typeDescriptions":{}}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2533,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4592:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2540,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:17","typeDescriptions":{}}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2539,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2521,"id":2547,"nodeType":"Return","src":"4508:87:17"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"4349:66:17","text":" @dev Returns true if the two strings are equal."},"id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:17","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"a","nameLocation":"4449:1:17","nodeType":"VariableDeclaration","scope":2549,"src":"4435:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2514,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"b","nameLocation":"4466:1:17","nodeType":"VariableDeclaration","scope":2549,"src":"4452:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2516,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:17"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2549,"src":"4492:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2519,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:17"},"scope":3586,"src":"4420:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2567,"nodeType":"Block","src":"4899:64:17","statements":[{"expression":{"arguments":[{"id":2558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"4926:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2562,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"4942:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:17","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:17","memberName":"length","nodeType":"MemberAccess","src":"4936:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2568,2599],"referencedDeclaration":2599,"src":"4916:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2566,"nodeType":"Return","src":"4909:47:17"}]},"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"4608:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:17","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"input","nameLocation":"4860:5:17","nodeType":"VariableDeclaration","scope":2568,"src":"4846:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2551,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:17"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2568,"src":"4890:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:17"},"scope":3586,"src":"4827:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"5368:153:17","statements":[{"assignments":[2581,2583],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"success","nameLocation":"5384:7:17","nodeType":"VariableDeclaration","scope":2598,"src":"5379:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2580,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"value","nameLocation":"5401:5:17","nodeType":"VariableDeclaration","scope":2598,"src":"5393:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2589,"initialValue":{"arguments":[{"id":2585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5423:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2586,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"5430:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2587,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5437:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2620,2657],"referencedDeclaration":2657,"src":"5410:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:17"},{"condition":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:17","subExpression":{"id":2590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"5456:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2595,"nodeType":"IfStatement","src":"5451:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2592,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"5472:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"RevertStatement","src":"5465:27:17"}},{"expression":{"id":2596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"5509:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2597,"nodeType":"Return","src":"5502:12:17"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"4969:294:17","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:17","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"input","nameLocation":"5301:5:17","nodeType":"VariableDeclaration","scope":2599,"src":"5287:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2570,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"begin","nameLocation":"5316:5:17","nodeType":"VariableDeclaration","scope":2599,"src":"5308:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"end","nameLocation":"5331:3:17","nodeType":"VariableDeclaration","scope":2599,"src":"5323:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:17"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"5359:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:17"},"scope":3586,"src":"5268:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"5842:83:17","statements":[{"expression":{"arguments":[{"id":2610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5888:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2614,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5904:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:17","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:17","memberName":"length","nodeType":"MemberAccess","src":"5898:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"5859:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2608,"id":2618,"nodeType":"Return","src":"5852:66:17"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"5527:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:17","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"input","nameLocation":"5783:5:17","nodeType":"VariableDeclaration","scope":2620,"src":"5769:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:17"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"success","nameLocation":"5818:7:17","nodeType":"VariableDeclaration","scope":2620,"src":"5813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"value","nameLocation":"5835:5:17","nodeType":"VariableDeclaration","scope":2620,"src":"5827:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:17"},"scope":3586,"src":"5747:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"6327:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6341:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6353:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2635,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:17","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:17","memberName":"length","nodeType":"MemberAccess","src":"6347:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6378:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2649,"nodeType":"IfStatement","src":"6337:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2633,"id":2648,"nodeType":"Return","src":"6383:17:17"}},{"expression":{"arguments":[{"id":2651,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6446:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6453:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2653,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6460:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6417:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2633,"id":2655,"nodeType":"Return","src":"6410:54:17"}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"5931:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:17","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"input","nameLocation":"6219:5:17","nodeType":"VariableDeclaration","scope":2657,"src":"6205:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2622,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"begin","nameLocation":"6242:5:17","nodeType":"VariableDeclaration","scope":2657,"src":"6234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"end","nameLocation":"6265:3:17","nodeType":"VariableDeclaration","scope":2657,"src":"6257:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:17"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"success","nameLocation":"6303:7:17","nodeType":"VariableDeclaration","scope":2657,"src":"6298:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2629,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"value","nameLocation":"6320:5:17","nodeType":"VariableDeclaration","scope":2657,"src":"6312:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:17"},"scope":3586,"src":"6174:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2726,"nodeType":"Block","src":"6874:347:17","statements":[{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:17","nodeType":"VariableDeclaration","scope":2726,"src":"6884:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"id":2675,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6912:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2673,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:17","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:17"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"result","nameLocation":"6937:6:17","nodeType":"VariableDeclaration","scope":2726,"src":"6929:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2681,"initialValue":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:17"},{"body":{"id":2720,"nodeType":"Block","src":"6995:189:17","statements":[{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"chr","nameLocation":"7015:3:17","nodeType":"VariableDeclaration","scope":2720,"src":"7009:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2692,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2703,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2698,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"7064:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"7072:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7041:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2695,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:17","typeDescriptions":{}}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2694,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7021:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"7094:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2711,"nodeType":"IfStatement","src":"7090:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2670,"id":2710,"nodeType":"Return","src":"7103:17:17"}},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"7134:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2715,"nodeType":"ExpressionStatement","src":"7134:12:17"},{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"7160:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2717,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"7170:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2719,"nodeType":"ExpressionStatement","src":"7160:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2687,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"6985:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2721,"initializationExpression":{"assignments":[2683],"declarations":[{"constant":false,"id":2683,"mutability":"mutable","name":"i","nameLocation":"6970:1:17","nodeType":"VariableDeclaration","scope":2721,"src":"6962:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2685,"initialValue":{"id":2684,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"6974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:17"},"loopExpression":{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:17","subExpression":{"id":2689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"6992:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"6990:3:17"},"nodeType":"ForStatement","src":"6957:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"7207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2670,"id":2725,"nodeType":"Return","src":"7193:21:17"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"6477:224:17","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:17","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"input","nameLocation":"6767:5:17","nodeType":"VariableDeclaration","scope":2727,"src":"6753:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"begin","nameLocation":"6790:5:17","nodeType":"VariableDeclaration","scope":2727,"src":"6782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"end","nameLocation":"6813:3:17","nodeType":"VariableDeclaration","scope":2727,"src":"6805:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:17"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"success","nameLocation":"6850:7:17","nodeType":"VariableDeclaration","scope":2727,"src":"6845:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"value","nameLocation":"6867:5:17","nodeType":"VariableDeclaration","scope":2727,"src":"6859:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:17"},"scope":3586,"src":"6706:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2745,"nodeType":"Block","src":"7518:63:17","statements":[{"expression":{"arguments":[{"id":2736,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7544:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2740,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7560:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:17","typeDescriptions":{}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:17","memberName":"length","nodeType":"MemberAccess","src":"7554:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2735,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2746,2777],"referencedDeclaration":2777,"src":"7535:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2734,"id":2744,"nodeType":"Return","src":"7528:46:17"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"7227:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:17","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"input","nameLocation":"7480:5:17","nodeType":"VariableDeclaration","scope":2746,"src":"7466:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2729,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:17"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2746,"src":"7510:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2732,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:17"},"scope":3586,"src":"7448:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2776,"nodeType":"Block","src":"7986:151:17","statements":[{"assignments":[2759,2761],"declarations":[{"constant":false,"id":2759,"mutability":"mutable","name":"success","nameLocation":"8002:7:17","nodeType":"VariableDeclaration","scope":2776,"src":"7997:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2758,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"8018:5:17","nodeType":"VariableDeclaration","scope":2776,"src":"8011:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2760,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2767,"initialValue":{"arguments":[{"id":2763,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"8039:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2764,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2765,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8053:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2762,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2798,2840],"referencedDeclaration":2840,"src":"8027:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:17"},{"condition":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:17","subExpression":{"id":2768,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"8072:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"8067:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2770,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"8088:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"RevertStatement","src":"8081:27:17"}},{"expression":{"id":2774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2757,"id":2775,"nodeType":"Return","src":"8118:12:17"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"7587:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:17","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"input","nameLocation":"7920:5:17","nodeType":"VariableDeclaration","scope":2777,"src":"7906:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2748,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"begin","nameLocation":"7935:5:17","nodeType":"VariableDeclaration","scope":2777,"src":"7927:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"end","nameLocation":"7950:3:17","nodeType":"VariableDeclaration","scope":2777,"src":"7942:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:17"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2777,"src":"7978:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2755,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:17"},"scope":3586,"src":"7888:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"8528:82:17","statements":[{"expression":{"arguments":[{"id":2788,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8573:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2792,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"8589:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2790,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:17","typeDescriptions":{}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:17","memberName":"length","nodeType":"MemberAccess","src":"8583:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2787,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"8545:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2786,"id":2796,"nodeType":"Return","src":"8538:65:17"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"8143:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2798,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:17","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"input","nameLocation":"8470:5:17","nodeType":"VariableDeclaration","scope":2798,"src":"8456:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:17"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"success","nameLocation":"8505:7:17","nodeType":"VariableDeclaration","scope":2798,"src":"8500:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"value","nameLocation":"8521:5:17","nodeType":"VariableDeclaration","scope":2798,"src":"8514:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2784,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:17"},"scope":3586,"src":"8435:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2803,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:17","nodeType":"VariableDeclaration","scope":3586,"src":"8616:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2839,"nodeType":"Block","src":"9132:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9146:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2820,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"9158:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2818,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:17","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:17","memberName":"length","nodeType":"MemberAccess","src":"9152:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2825,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9183:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2832,"nodeType":"IfStatement","src":"9142:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2816,"id":2831,"nodeType":"Return","src":"9188:17:17"}},{"expression":{"arguments":[{"id":2834,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"9250:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2835,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9257:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2836,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9264:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2833,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"9222:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2816,"id":2838,"nodeType":"Return","src":"9215:53:17"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"8673:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:17","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"input","nameLocation":"9025:5:17","nodeType":"VariableDeclaration","scope":2840,"src":"9011:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"begin","nameLocation":"9048:5:17","nodeType":"VariableDeclaration","scope":2840,"src":"9040:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"end","nameLocation":"9071:3:17","nodeType":"VariableDeclaration","scope":2840,"src":"9063:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:17"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"success","nameLocation":"9109:7:17","nodeType":"VariableDeclaration","scope":2840,"src":"9104:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2812,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"value","nameLocation":"9125:5:17","nodeType":"VariableDeclaration","scope":2840,"src":"9118:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2814,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:17"},"scope":3586,"src":"8981:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"9675:812:17","statements":[{"assignments":[2855],"declarations":[{"constant":false,"id":2855,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:17","nodeType":"VariableDeclaration","scope":2960,"src":"9685:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2854,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2860,"initialValue":{"arguments":[{"id":2858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"9713:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2856,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:17","typeDescriptions":{}}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:17"},{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"sign","nameLocation":"9783:4:17","nodeType":"VariableDeclaration","scope":2960,"src":"9776:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2861,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2878,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2864,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9799:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"9847:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2874,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"9855:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"9824:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2870,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:17","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2866,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:17","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:17"},{"assignments":[2880],"declarations":[{"constant":false,"id":2880,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:17","nodeType":"VariableDeclaration","scope":2960,"src":"9943:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2887,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2882,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:17","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:17"},{"assignments":[2889],"declarations":[{"constant":false,"id":2889,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:17","nodeType":"VariableDeclaration","scope":2960,"src":"9992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2888,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2896,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"10012:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2891,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:17","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:17"},{"assignments":[2898],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"offset","nameLocation":"10049:6:17","nodeType":"VariableDeclaration","scope":2960,"src":"10041:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2905,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"10059:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2900,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"10075:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"10058:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:17"},{"assignments":[2907,2909],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:17","nodeType":"VariableDeclaration","scope":2960,"src":"10109:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2906,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:17","nodeType":"VariableDeclaration","scope":2960,"src":"10126:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2917,"initialValue":{"arguments":[{"id":2911,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10159:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10166:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2913,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"10174:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2915,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10182:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2620,2657],"referencedDeclaration":2657,"src":"10146:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10201:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10215:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2920,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10226:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"10343:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2939,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"10357:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2942,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"10385:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2853,"id":2957,"nodeType":"Return","src":"10463:17:17"},"id":2958,"nodeType":"IfStatement","src":"10339:141:17","trueBody":{"id":2953,"nodeType":"Block","src":"10401:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2947,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:17","memberName":"min","nodeType":"MemberAccess","src":"10429:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2853,"id":2952,"nodeType":"Return","src":"10415:31:17"}]}},"id":2959,"nodeType":"IfStatement","src":"10197:283:17","trueBody":{"id":2937,"nodeType":"Block","src":"10242:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2924,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"10270:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2932,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2930,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:17","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:17","trueExpression":{"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:17","subExpression":{"arguments":[{"id":2927,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"10293:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2925,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:17","typeDescriptions":{}}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2853,"id":2936,"nodeType":"Return","src":"10256:66:17"}]}}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"9281:223:17","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:17","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"input","nameLocation":"9569:5:17","nodeType":"VariableDeclaration","scope":2961,"src":"9555:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2842,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"begin","nameLocation":"9592:5:17","nodeType":"VariableDeclaration","scope":2961,"src":"9584:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"end","nameLocation":"9615:3:17","nodeType":"VariableDeclaration","scope":2961,"src":"9607:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:17"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"success","nameLocation":"9652:7:17","nodeType":"VariableDeclaration","scope":2961,"src":"9647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"9668:5:17","nodeType":"VariableDeclaration","scope":2961,"src":"9661:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2851,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:17"},"scope":3586,"src":"9509:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2979,"nodeType":"Block","src":"10832:67:17","statements":[{"expression":{"arguments":[{"id":2970,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10862:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10878:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2972,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:17","typeDescriptions":{}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:17","memberName":"length","nodeType":"MemberAccess","src":"10872:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2980,3011],"referencedDeclaration":3011,"src":"10849:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2968,"id":2978,"nodeType":"Return","src":"10842:50:17"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"10493:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:17","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"input","nameLocation":"10793:5:17","nodeType":"VariableDeclaration","scope":2980,"src":"10779:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2963,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:17"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"10823:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:17"},"scope":3586,"src":"10757:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"11320:156:17","statements":[{"assignments":[2993,2995],"declarations":[{"constant":false,"id":2993,"mutability":"mutable","name":"success","nameLocation":"11336:7:17","nodeType":"VariableDeclaration","scope":3010,"src":"11331:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2992,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"value","nameLocation":"11353:5:17","nodeType":"VariableDeclaration","scope":3010,"src":"11345:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3001,"initialValue":{"arguments":[{"id":2997,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"11378:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2998,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"11385:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2999,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"11392:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2996,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3032,3069],"referencedDeclaration":3069,"src":"11362:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:17"},{"condition":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:17","subExpression":{"id":3002,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"11411:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3007,"nodeType":"IfStatement","src":"11406:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3004,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11427:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"RevertStatement","src":"11420:27:17"}},{"expression":{"id":3008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"11464:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2991,"id":3009,"nodeType":"Return","src":"11457:12:17"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"10905:307:17","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:17","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"input","nameLocation":"11253:5:17","nodeType":"VariableDeclaration","scope":3011,"src":"11239:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2982,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"begin","nameLocation":"11268:5:17","nodeType":"VariableDeclaration","scope":3011,"src":"11260:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"end","nameLocation":"11283:3:17","nodeType":"VariableDeclaration","scope":3011,"src":"11275:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:17"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3011,"src":"11311:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:17"},"scope":3586,"src":"11217:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3031,"nodeType":"Block","src":"11803:86:17","statements":[{"expression":{"arguments":[{"id":3022,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11852:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11868:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:17","typeDescriptions":{}}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:17","memberName":"length","nodeType":"MemberAccess","src":"11862:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3021,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"11820:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3020,"id":3030,"nodeType":"Return","src":"11813:69:17"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"11482:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3032,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:17","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"input","nameLocation":"11744:5:17","nodeType":"VariableDeclaration","scope":3032,"src":"11730:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3013,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:17"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"success","nameLocation":"11779:7:17","nodeType":"VariableDeclaration","scope":3032,"src":"11774:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3016,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"value","nameLocation":"11796:5:17","nodeType":"VariableDeclaration","scope":3032,"src":"11788:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:17"},"scope":3586,"src":"11705:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3068,"nodeType":"Block","src":"12297:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12311:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3049,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"12323:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3047,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:17","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:17","memberName":"length","nodeType":"MemberAccess","src":"12317:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12340:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3054,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12348:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"12307:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3045,"id":3060,"nodeType":"Return","src":"12353:17:17"}},{"expression":{"arguments":[{"id":3063,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"12419:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3064,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"12426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3065,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12433:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3062,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12387:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3045,"id":3067,"nodeType":"Return","src":"12380:57:17"}]},"documentation":{"id":3033,"nodeType":"StructuredDocumentation","src":"11895:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:17","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"input","nameLocation":"12189:5:17","nodeType":"VariableDeclaration","scope":3069,"src":"12175:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3034,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"begin","nameLocation":"12212:5:17","nodeType":"VariableDeclaration","scope":3069,"src":"12204:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"end","nameLocation":"12235:3:17","nodeType":"VariableDeclaration","scope":3069,"src":"12227:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:17"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"success","nameLocation":"12273:7:17","nodeType":"VariableDeclaration","scope":3069,"src":"12268:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3041,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"value","nameLocation":"12290:5:17","nodeType":"VariableDeclaration","scope":3069,"src":"12282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:17"},"scope":3586,"src":"12141:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"12853:881:17","statements":[{"assignments":[3084],"declarations":[{"constant":false,"id":3084,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:17","nodeType":"VariableDeclaration","scope":3171,"src":"12863:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3083,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3089,"initialValue":{"arguments":[{"id":3087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"12891:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3085,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:17","typeDescriptions":{}}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:17"},{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:17","nodeType":"VariableDeclaration","scope":3171,"src":"12945:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3111,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"12963:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"12969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3101,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"13013:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3102,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"13021:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3100,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"12990:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3098,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:17","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3105,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:17","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:17"},{"assignments":[3113],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"offset","nameLocation":"13133:6:17","nodeType":"VariableDeclaration","scope":3171,"src":"13125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3119,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3114,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"13142:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"13142:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:17"},{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"result","nameLocation":"13183:6:17","nodeType":"VariableDeclaration","scope":3171,"src":"13175:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3123,"initialValue":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:17"},{"body":{"id":3165,"nodeType":"Block","src":"13250:447:17","statements":[{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"chr","nameLocation":"13270:3:17","nodeType":"VariableDeclaration","scope":3165,"src":"13264:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3136,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3147,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3142,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"13319:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13327:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"13296:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3139,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:17","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3138,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"13276:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13349:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3155,"nodeType":"IfStatement","src":"13345:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3082,"id":3154,"nodeType":"Return","src":"13359:17:17"}},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"13390:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"13390:12:17"},{"id":3164,"nodeType":"UncheckedBlock","src":"13416:271:17","statements":[{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"13659:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3161,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13669:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"13659:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3131,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"13240:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3166,"initializationExpression":{"assignments":[3125],"declarations":[{"constant":false,"id":3125,"mutability":"mutable","name":"i","nameLocation":"13216:1:17","nodeType":"VariableDeclaration","scope":3166,"src":"13208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3129,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"13220:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3127,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"13228:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:17"},"loopExpression":{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:17","subExpression":{"id":3133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"13247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"13245:3:17"},"nodeType":"ForStatement","src":"13203:494:17"},{"expression":{"components":[{"hexValue":"74727565","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"13720:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3082,"id":3170,"nodeType":"Return","src":"13706:21:17"}]},"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"12450:227:17","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:17","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"input","nameLocation":"12746:5:17","nodeType":"VariableDeclaration","scope":3172,"src":"12732:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3071,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"begin","nameLocation":"12769:5:17","nodeType":"VariableDeclaration","scope":3172,"src":"12761:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"end","nameLocation":"12792:3:17","nodeType":"VariableDeclaration","scope":3172,"src":"12784:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:17"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"success","nameLocation":"12829:7:17","nodeType":"VariableDeclaration","scope":3172,"src":"12824:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3078,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"value","nameLocation":"12846:5:17","nodeType":"VariableDeclaration","scope":3172,"src":"12838:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:17"},"scope":3586,"src":"12682:1052:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3190,"nodeType":"Block","src":"14032:67:17","statements":[{"expression":{"arguments":[{"id":3181,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"14062:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3185,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"14078:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3183,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:17","typeDescriptions":{}}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:17","memberName":"length","nodeType":"MemberAccess","src":"14072:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3180,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3191,3222],"referencedDeclaration":3222,"src":"14049:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3179,"id":3189,"nodeType":"Return","src":"14042:50:17"}]},"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"13740:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:17","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"input","nameLocation":"13993:5:17","nodeType":"VariableDeclaration","scope":3191,"src":"13979:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3174,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:17"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"14023:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:17"},"scope":3586,"src":"13957:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3221,"nodeType":"Block","src":"14472:165:17","statements":[{"assignments":[3204,3206],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"success","nameLocation":"14488:7:17","nodeType":"VariableDeclaration","scope":3221,"src":"14483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3203,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"value","nameLocation":"14505:5:17","nodeType":"VariableDeclaration","scope":3221,"src":"14497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3212,"initialValue":{"arguments":[{"id":3208,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"14530:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3209,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"14537:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"14544:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3207,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3243,3347],"referencedDeclaration":3347,"src":"14514:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:17"},{"condition":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:17","subExpression":{"id":3213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"14563:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3218,"nodeType":"IfStatement","src":"14558:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3215,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"14579:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"RevertStatement","src":"14572:36:17"}},{"expression":{"id":3219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"14625:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3202,"id":3220,"nodeType":"Return","src":"14618:12:17"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"14105:259:17","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:17","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"input","nameLocation":"14405:5:17","nodeType":"VariableDeclaration","scope":3222,"src":"14391:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3193,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"begin","nameLocation":"14420:5:17","nodeType":"VariableDeclaration","scope":3222,"src":"14412:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"end","nameLocation":"14435:3:17","nodeType":"VariableDeclaration","scope":3222,"src":"14427:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:17"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3222,"src":"14463:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:17"},"scope":3586,"src":"14369:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"14944:70:17","statements":[{"expression":{"arguments":[{"id":3233,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"14977:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"14993:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:17","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:17","memberName":"length","nodeType":"MemberAccess","src":"14987:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3232,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3243,3347],"referencedDeclaration":3347,"src":"14961:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3231,"id":3241,"nodeType":"Return","src":"14954:53:17"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"14643:198:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:17","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"input","nameLocation":"14885:5:17","nodeType":"VariableDeclaration","scope":3243,"src":"14871:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3224,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:17"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"success","nameLocation":"14920:7:17","nodeType":"VariableDeclaration","scope":3243,"src":"14915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3227,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"value","nameLocation":"14937:5:17","nodeType":"VariableDeclaration","scope":3243,"src":"14929:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:17"},"scope":3586,"src":"14846:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"15407:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"15421:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3260,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15433:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3258,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:17","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:17","memberName":"length","nodeType":"MemberAccess","src":"15427:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15450:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3265,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"15458:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"nodeType":"IfStatement","src":"15417:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:17","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3256,"id":3274,"nodeType":"Return","src":"15463:26:17"}},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:17","nodeType":"VariableDeclaration","scope":3346,"src":"15500:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3276,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3300,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"15518:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3289,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3287,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:17","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3291,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15582:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3286,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"15545:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3284,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:17","typeDescriptions":{}}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3294,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:17","typeDescriptions":{}}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:17"},{"assignments":[3302],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:17","nodeType":"VariableDeclaration","scope":3346,"src":"15686:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3310,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3304,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"15716:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"15716:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"15803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3312,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15809:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3314,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"15818:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3344,"nodeType":"Block","src":"16083:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:17","typeDescriptions":{}}},"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3256,"id":3343,"nodeType":"Return","src":"16097:26:17"}]},"id":3345,"nodeType":"IfStatement","src":"15799:335:17","trueBody":{"id":3336,"nodeType":"Block","src":"15834:243:17","statements":[{"assignments":[3317,3319],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"s","nameLocation":"15955:1:17","nodeType":"VariableDeclaration","scope":3336,"src":"15950:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3316,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"v","nameLocation":"15966:1:17","nodeType":"VariableDeclaration","scope":3336,"src":"15958:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3325,"initialValue":{"arguments":[{"id":3321,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"16003:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3322,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"16010:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"16017:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3320,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"15971:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:17"},{"expression":{"components":[{"id":3326,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"16043:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3331,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"16062:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3329,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:17","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:17","typeDescriptions":{}}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3256,"id":3335,"nodeType":"Return","src":"16035:31:17"}]}}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"15020:226:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:17","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"input","nameLocation":"15299:5:17","nodeType":"VariableDeclaration","scope":3347,"src":"15285:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3245,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"begin","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":3347,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"end","nameLocation":"15345:3:17","nodeType":"VariableDeclaration","scope":3347,"src":"15337:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:17"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"success","nameLocation":"15383:7:17","nodeType":"VariableDeclaration","scope":3347,"src":"15378:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3252,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"value","nameLocation":"15400:5:17","nodeType":"VariableDeclaration","scope":3347,"src":"15392:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:17"},"scope":3586,"src":"15251:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3406,"nodeType":"Block","src":"16209:461:17","statements":[{"assignments":[3355],"declarations":[{"constant":false,"id":3355,"mutability":"mutable","name":"value","nameLocation":"16225:5:17","nodeType":"VariableDeclaration","scope":3406,"src":"16219:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3354,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3360,"initialValue":{"arguments":[{"id":3358,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"16239:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3356,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:17","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:17"},{"id":3403,"nodeType":"UncheckedBlock","src":"16403:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16431:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16445:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16491:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16505:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16552:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16566:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3395,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:17","memberName":"max","nodeType":"MemberAccess","src":"16615:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3353,"id":3399,"nodeType":"Return","src":"16608:22:17"},"id":3400,"nodeType":"IfStatement","src":"16548:82:17","trueBody":{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16578:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3393,"nodeType":"ExpressionStatement","src":"16578:11:17"}},"id":3401,"nodeType":"IfStatement","src":"16487:143:17","trueBody":{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16518:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3382,"nodeType":"ExpressionStatement","src":"16518:11:17"}},"id":3402,"nodeType":"IfStatement","src":"16427:203:17","trueBody":{"expression":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16457:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3371,"nodeType":"ExpressionStatement","src":"16457:11:17"}}]},{"expression":{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16658:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3353,"id":3405,"nodeType":"Return","src":"16651:12:17"}]},"id":3407,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:17","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"chr","nameLocation":"16175:3:17","nodeType":"VariableDeclaration","scope":3407,"src":"16168:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3348,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:17"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3407,"src":"16202:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3351,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:17"},"scope":3586,"src":"16146:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3572,"nodeType":"Block","src":"17336:1331:17","statements":[{"assignments":[3416],"declarations":[{"constant":false,"id":3416,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:17","nodeType":"VariableDeclaration","scope":3572,"src":"17346:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3415,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3421,"initialValue":{"arguments":[{"id":3419,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"17374:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:17","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:17"},{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"output","nameLocation":"17403:6:17","nodeType":"VariableDeclaration","scope":3572,"src":"17390:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3422,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3431,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3427,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"17426:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:17","memberName":"length","nodeType":"MemberAccess","src":"17426:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3424,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:17"},{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:17","nodeType":"VariableDeclaration","scope":3572,"src":"17473:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3435,"initialValue":{"hexValue":"30","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:17"},{"body":{"id":3564,"nodeType":"Block","src":"17548:854:17","statements":[{"assignments":[3447],"declarations":[{"constant":false,"id":3447,"mutability":"mutable","name":"char","nameLocation":"17569:4:17","nodeType":"VariableDeclaration","scope":3564,"src":"17562:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3446,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3455,"initialValue":{"arguments":[{"arguments":[{"id":3451,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"17606:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"17614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"17583:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3448,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:17","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:17"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"17637:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3460,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"17672:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3458,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:17","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3562,"nodeType":"Block","src":"18330:62:17","statements":[{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3555,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"18348:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3558,"indexExpression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:17","subExpression":{"id":3556,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"18355:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3559,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"18373:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3561,"nodeType":"ExpressionStatement","src":"18348:29:17"}]},"id":3563,"nodeType":"IfStatement","src":"17631:761:17","trueBody":{"id":3554,"nodeType":"Block","src":"17687:637:17","statements":[{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3469,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3472,"indexExpression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:17","subExpression":{"id":3470,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"17712:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3475,"nodeType":"ExpressionStatement","src":"17705:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"17756:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"17825:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"17894:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"17963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"18032:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"18101:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"18171:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3547,"nodeType":"IfStatement","src":"18167:143:17","trueBody":{"id":3546,"nodeType":"Block","src":"18185:125:17","statements":[{"expression":{"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3539,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"18263:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3542,"indexExpression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:17","subExpression":{"id":3540,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"18270:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3545,"nodeType":"ExpressionStatement","src":"18263:28:17"}]}},"id":3548,"nodeType":"IfStatement","src":"18097:213:17","trueBody":{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3529,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"18115:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3532,"indexExpression":{"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:17","subExpression":{"id":3530,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"18122:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3535,"nodeType":"ExpressionStatement","src":"18115:29:17"}},"id":3549,"nodeType":"IfStatement","src":"18028:282:17","trueBody":{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3519,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"18046:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3522,"indexExpression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:17","subExpression":{"id":3520,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"18053:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3525,"nodeType":"ExpressionStatement","src":"18046:28:17"}},"id":3550,"nodeType":"IfStatement","src":"17959:351:17","trueBody":{"expression":{"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3509,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"17977:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3512,"indexExpression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:17","subExpression":{"id":3510,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"17984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3515,"nodeType":"ExpressionStatement","src":"17977:28:17"}},"id":3551,"nodeType":"IfStatement","src":"17890:420:17","trueBody":{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3499,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"17908:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3502,"indexExpression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:17","subExpression":{"id":3500,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"17915:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3505,"nodeType":"ExpressionStatement","src":"17908:28:17"}},"id":3552,"nodeType":"IfStatement","src":"17821:489:17","trueBody":{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3489,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"17839:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3492,"indexExpression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:17","subExpression":{"id":3490,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"17846:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3495,"nodeType":"ExpressionStatement","src":"17839:28:17"}},"id":3553,"nodeType":"IfStatement","src":"17752:558:17","trueBody":{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3479,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"17770:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3482,"indexExpression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:17","subExpression":{"id":3480,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"17777:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3485,"nodeType":"ExpressionStatement","src":"17770:28:17"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"17524:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3440,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"17528:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:17","memberName":"length","nodeType":"MemberAccess","src":"17528:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"initializationExpression":{"assignments":[3437],"declarations":[{"constant":false,"id":3437,"mutability":"mutable","name":"i","nameLocation":"17521:1:17","nodeType":"VariableDeclaration","scope":3565,"src":"17513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3438,"nodeType":"VariableDeclarationStatement","src":"17513:9:17"},"loopExpression":{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:17","subExpression":{"id":3443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"17545:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"17543:3:17"},"nodeType":"ForStatement","src":"17508:894:17"},{"AST":{"nodeType":"YulBlock","src":"18500:129:17","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:17"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:17"},"nodeType":"YulFunctionCall","src":"18514:28:17"},"nodeType":"YulExpressionStatement","src":"18514:28:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:17","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:17","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:17","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:17","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:17"},"nodeType":"YulFunctionCall","src":"18594:21:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:17"},"nodeType":"YulFunctionCall","src":"18587:29:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:17"},"nodeType":"YulFunctionCall","src":"18580:37:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:17"},"nodeType":"YulFunctionCall","src":"18568:50:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:17"},"nodeType":"YulFunctionCall","src":"18555:64:17"},"nodeType":"YulExpressionStatement","src":"18555:64:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3423,"isOffset":false,"isSlot":false,"src":"18521:6:17","valueSize":1},{"declaration":3423,"isOffset":false,"isSlot":false,"src":"18572:6:17","valueSize":1},{"declaration":3433,"isOffset":false,"isSlot":false,"src":"18529:12:17","valueSize":1},{"declaration":3433,"isOffset":false,"isSlot":false,"src":"18598:12:17","valueSize":1}],"flags":["memory-safe"],"id":3566,"nodeType":"InlineAssembly","src":"18475:154:17"},{"expression":{"arguments":[{"id":3569,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"18653:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3567,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:17","typeDescriptions":{}}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3414,"id":3571,"nodeType":"Return","src":"18639:21:17"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"16676:576:17","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:17","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"input","nameLocation":"17291:5:17","nodeType":"VariableDeclaration","scope":3573,"src":"17277:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3409,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:17"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"17321:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3412,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:17"},"scope":3586,"src":"17257:1410:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"19052:225:17","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:17","statements":[{"nodeType":"YulAssignment","src":"19215:46:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:17"},"nodeType":"YulFunctionCall","src":"19234:17:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:17"},"nodeType":"YulFunctionCall","src":"19230:30:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:17"},"nodeType":"YulFunctionCall","src":"19224:37:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3576,"isOffset":false,"isSlot":false,"src":"19238:6:17","valueSize":1},{"declaration":3578,"isOffset":false,"isSlot":false,"src":"19253:6:17","valueSize":1},{"declaration":3581,"isOffset":false,"isSlot":false,"src":"19215:5:17","valueSize":1}],"flags":["memory-safe"],"id":3583,"nodeType":"InlineAssembly","src":"19176:95:17"}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"18673:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:17","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:17","nodeType":"VariableDeclaration","scope":3585,"src":"18978:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3575,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"offset","nameLocation":"19007:6:17","nodeType":"VariableDeclaration","scope":3585,"src":"18999:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:17"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"value","nameLocation":"19045:5:17","nodeType":"VariableDeclaration","scope":3585,"src":"19037:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:17"},"scope":3586,"src":"18946:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3587,"src":"297:18982:17","usedErrors":[2244,2247,2250],"usedEvents":[]}],"src":"101:19179:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3934]},"id":3935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3588,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"138:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3934,"linearizedBaseContracts":[3934],"name":"ECDSA","nameLocation":"352:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3594,"members":[{"id":3590,"name":"NoError","nameLocation":"392:7:18","nodeType":"EnumValue","src":"392:7:18"},{"id":3591,"name":"InvalidSignature","nameLocation":"409:16:18","nodeType":"EnumValue","src":"409:16:18"},{"id":3592,"name":"InvalidSignatureLength","nameLocation":"435:22:18","nodeType":"EnumValue","src":"435:22:18"},{"id":3593,"name":"InvalidSignatureS","nameLocation":"467:17:18","nodeType":"EnumValue","src":"467:17:18"}],"name":"RecoverError","nameLocation":"369:12:18","nodeType":"EnumDefinition","src":"364:126:18"},{"documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"496:63:18","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3597,"name":"ECDSAInvalidSignature","nameLocation":"570:21:18","nodeType":"ErrorDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[],"src":"591:2:18"},"src":"564:30:18"},{"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"600:60:18","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3602,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:18","nodeType":"ErrorDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"length","nameLocation":"707:6:18","nodeType":"VariableDeclaration","scope":3602,"src":"699:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3599,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:18"},"src":"665:50:18"},{"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"721:85:18","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3607,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:18","nodeType":"ErrorDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"s","nameLocation":"848:1:18","nodeType":"VariableDeclaration","scope":3607,"src":"840:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:18"},"src":"811:40:18"},{"body":{"id":3659,"nodeType":"Block","src":"2285:622:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3622,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2299:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:18","memberName":"length","nodeType":"MemberAccess","src":"2299:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3657,"nodeType":"Block","src":"2793:108:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3644,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:18","typeDescriptions":{}}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3648,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"2827:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"2827:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3652,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2872:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:18","memberName":"length","nodeType":"MemberAccess","src":"2872:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:18","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3621,"id":3656,"nodeType":"Return","src":"2807:83:18"}]},"id":3658,"nodeType":"IfStatement","src":"2295:606:18","trueBody":{"id":3643,"nodeType":"Block","src":"2323:464:18","statements":[{"assignments":[3627],"declarations":[{"constant":false,"id":3627,"mutability":"mutable","name":"r","nameLocation":"2345:1:18","nodeType":"VariableDeclaration","scope":3643,"src":"2337:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3628,"nodeType":"VariableDeclarationStatement","src":"2337:9:18"},{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"s","nameLocation":"2368:1:18","nodeType":"VariableDeclaration","scope":3643,"src":"2360:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3631,"nodeType":"VariableDeclarationStatement","src":"2360:9:18"},{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"v","nameLocation":"2389:1:18","nodeType":"VariableDeclaration","scope":3643,"src":"2383:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3632,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3634,"nodeType":"VariableDeclarationStatement","src":"2383:7:18"},{"AST":{"nodeType":"YulBlock","src":"2560:171:18","statements":[{"nodeType":"YulAssignment","src":"2578:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:18"},"nodeType":"YulFunctionCall","src":"2589:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:18"},"nodeType":"YulFunctionCall","src":"2583:27:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:18"}]},{"nodeType":"YulAssignment","src":"2627:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:18"},"nodeType":"YulFunctionCall","src":"2638:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:18"},"nodeType":"YulFunctionCall","src":"2632:27:18"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:18"}]},{"nodeType":"YulAssignment","src":"2676:41:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:18"},"nodeType":"YulFunctionCall","src":"2695:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:18"},"nodeType":"YulFunctionCall","src":"2689:27:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:18"},"nodeType":"YulFunctionCall","src":"2681:36:18"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3627,"isOffset":false,"isSlot":false,"src":"2578:1:18","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"2627:1:18","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"2593:9:18","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"2642:9:18","valueSize":1},{"declaration":3612,"isOffset":false,"isSlot":false,"src":"2699:9:18","valueSize":1},{"declaration":3633,"isOffset":false,"isSlot":false,"src":"2676:1:18","valueSize":1}],"flags":["memory-safe"],"id":3635,"nodeType":"InlineAssembly","src":"2535:196:18"},{"expression":{"arguments":[{"id":3637,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2762:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3638,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2768:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"2771:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3640,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"2774:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3636,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3660,3740,3848],"referencedDeclaration":3848,"src":"2751:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3621,"id":3642,"nodeType":"Return","src":"2744:32:18"}]}}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"857:1267:18","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:18","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"hash","nameLocation":"2166:4:18","nodeType":"VariableDeclaration","scope":3660,"src":"2158:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"signature","nameLocation":"2193:9:18","nodeType":"VariableDeclaration","scope":3660,"src":"2180:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3611,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:18"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:18","nodeType":"VariableDeclaration","scope":3660,"src":"2232:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3614,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"err","nameLocation":"2264:3:18","nodeType":"VariableDeclaration","scope":3660,"src":"2251:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3617,"nodeType":"UserDefinedTypeName","pathNode":{"id":3616,"name":"RecoverError","nameLocations":["2251:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"2251:12:18"},"referencedDeclaration":3594,"src":"2251:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:18","nodeType":"VariableDeclaration","scope":3660,"src":"2269:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:18"},"scope":3934,"src":"2129:778:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"3801:168:18","statements":[{"assignments":[3671,3674,3676],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:18","nodeType":"VariableDeclaration","scope":3689,"src":"3812:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3670,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"error","nameLocation":"3844:5:18","nodeType":"VariableDeclaration","scope":3689,"src":"3831:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3673,"nodeType":"UserDefinedTypeName","pathNode":{"id":3672,"name":"RecoverError","nameLocations":["3831:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"3831:12:18"},"referencedDeclaration":3594,"src":"3831:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:18","nodeType":"VariableDeclaration","scope":3689,"src":"3851:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3681,"initialValue":{"arguments":[{"id":3678,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"3882:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3679,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"3888:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3677,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3660,3740,3848],"referencedDeclaration":3660,"src":"3871:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:18"},{"expression":{"arguments":[{"id":3683,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"3920:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"id":3684,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"3927:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3682,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"3908:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3594_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3686,"nodeType":"ExpressionStatement","src":"3908:28:18"},{"expression":{"id":3687,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3953:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3669,"id":3688,"nodeType":"Return","src":"3946:16:18"}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"2913:796:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:18","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"hash","nameLocation":"3739:4:18","nodeType":"VariableDeclaration","scope":3690,"src":"3731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"signature","nameLocation":"3758:9:18","nodeType":"VariableDeclaration","scope":3690,"src":"3745:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3664,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:18"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3690,"src":"3792:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3667,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:18"},"scope":3934,"src":"3714:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"4348:342:18","statements":[{"id":3738,"nodeType":"UncheckedBlock","src":"4358:326:18","statements":[{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"s","nameLocation":"4390:1:18","nodeType":"VariableDeclaration","scope":3738,"src":"4382:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3715,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"4394:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:18","typeDescriptions":{}}},"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:18"},{"assignments":[3717],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"v","nameLocation":"4591:1:18","nodeType":"VariableDeclaration","scope":3738,"src":"4585:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3716,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3722,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"4610:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:18","typeDescriptions":{}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3718,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:18","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:18"},{"expression":{"arguments":[{"id":3732,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"4659:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3733,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4665:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3734,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"4668:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3735,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"4671:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3731,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3660,3740,3848],"referencedDeclaration":3848,"src":"4648:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3706,"id":3737,"nodeType":"Return","src":"4641:32:18"}]}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"3975:205:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:18","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"hash","nameLocation":"4222:4:18","nodeType":"VariableDeclaration","scope":3740,"src":"4214:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"r","nameLocation":"4244:1:18","nodeType":"VariableDeclaration","scope":3740,"src":"4236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"vs","nameLocation":"4263:2:18","nodeType":"VariableDeclaration","scope":3740,"src":"4255:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:18"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:18","nodeType":"VariableDeclaration","scope":3740,"src":"4295:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"err","nameLocation":"4327:3:18","nodeType":"VariableDeclaration","scope":3740,"src":"4314:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3702,"nodeType":"UserDefinedTypeName","pathNode":{"id":3701,"name":"RecoverError","nameLocations":["4314:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"4314:12:18"},"referencedDeclaration":3594,"src":"4314:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:18","nodeType":"VariableDeclaration","scope":3740,"src":"4332:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:18"},"scope":3934,"src":"4185:505:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3772,"nodeType":"Block","src":"4903:164:18","statements":[{"assignments":[3753,3756,3758],"declarations":[{"constant":false,"id":3753,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:18","nodeType":"VariableDeclaration","scope":3772,"src":"4914:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3752,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"error","nameLocation":"4946:5:18","nodeType":"VariableDeclaration","scope":3772,"src":"4933:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3755,"nodeType":"UserDefinedTypeName","pathNode":{"id":3754,"name":"RecoverError","nameLocations":["4933:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"4933:12:18"},"referencedDeclaration":3594,"src":"4933:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:18","nodeType":"VariableDeclaration","scope":3772,"src":"4953:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3764,"initialValue":{"arguments":[{"id":3760,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"4984:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3761,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"4990:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3762,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"4993:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3759,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3660,3740,3848],"referencedDeclaration":3740,"src":"4973:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:18"},{"expression":{"arguments":[{"id":3766,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"5018:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"id":3767,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"5025:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3765,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"5006:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3594_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3769,"nodeType":"ExpressionStatement","src":"5006:28:18"},{"expression":{"id":3770,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"5051:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3751,"id":3771,"nodeType":"Return","src":"5044:16:18"}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"4696:116:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3773,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:18","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"hash","nameLocation":"4842:4:18","nodeType":"VariableDeclaration","scope":3773,"src":"4834:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"r","nameLocation":"4856:1:18","nodeType":"VariableDeclaration","scope":3773,"src":"4848:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"vs","nameLocation":"4867:2:18","nodeType":"VariableDeclaration","scope":3773,"src":"4859:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:18"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3773,"src":"4894:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:18"},"scope":3934,"src":"4817:250:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"5382:1372:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3794,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"6278:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:18","typeDescriptions":{}}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3808,"nodeType":"IfStatement","src":"6266:164:18","trueBody":{"id":3807,"nodeType":"Block","src":"6351:79:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:18","typeDescriptions":{}}},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3802,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"6385:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3593,"src":"6385:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"id":3804,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"6417:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3791,"id":3806,"nodeType":"Return","src":"6365:54:18"}]}},{"assignments":[3810],"declarations":[{"constant":false,"id":3810,"mutability":"mutable","name":"signer","nameLocation":"6532:6:18","nodeType":"VariableDeclaration","scope":3847,"src":"6524:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3809,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3817,"initialValue":{"arguments":[{"id":3812,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6551:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3813,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"6557:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3814,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"6560:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3815,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"6563:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3811,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6579:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:18","typeDescriptions":{}}},"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"6575:113:18","trueBody":{"id":3836,"nodeType":"Block","src":"6601:87:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3824,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:18","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3828,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"6635:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3591,"src":"6635:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:18","typeDescriptions":{}}},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3791,"id":3835,"nodeType":"Return","src":"6615:62:18"}]}},{"expression":{"components":[{"id":3838,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6706:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3839,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"6714:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3590,"src":"6714:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:18","typeDescriptions":{}}},"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3791,"id":3846,"nodeType":"Return","src":"6698:49:18"}]},"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"5073:125:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:18","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"hash","nameLocation":"5240:4:18","nodeType":"VariableDeclaration","scope":3848,"src":"5232:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"v","nameLocation":"5260:1:18","nodeType":"VariableDeclaration","scope":3848,"src":"5254:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3777,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"r","nameLocation":"5279:1:18","nodeType":"VariableDeclaration","scope":3848,"src":"5271:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"s","nameLocation":"5298:1:18","nodeType":"VariableDeclaration","scope":3848,"src":"5290:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:18"},"returnParameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:18","nodeType":"VariableDeclaration","scope":3848,"src":"5329:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"err","nameLocation":"5361:3:18","nodeType":"VariableDeclaration","scope":3848,"src":"5348:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3787,"nodeType":"UserDefinedTypeName","pathNode":{"id":3786,"name":"RecoverError","nameLocations":["5348:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"5348:12:18"},"referencedDeclaration":3594,"src":"5348:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:18","nodeType":"VariableDeclaration","scope":3848,"src":"5366:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:18"},"scope":3934,"src":"5203:1551:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3883,"nodeType":"Block","src":"6981:166:18","statements":[{"assignments":[3863,3866,3868],"declarations":[{"constant":false,"id":3863,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:18","nodeType":"VariableDeclaration","scope":3883,"src":"6992:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3862,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"error","nameLocation":"7024:5:18","nodeType":"VariableDeclaration","scope":3883,"src":"7011:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3865,"nodeType":"UserDefinedTypeName","pathNode":{"id":3864,"name":"RecoverError","nameLocations":["7011:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"7011:12:18"},"referencedDeclaration":3594,"src":"7011:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:18","nodeType":"VariableDeclaration","scope":3883,"src":"7031:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3875,"initialValue":{"arguments":[{"id":3870,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"7062:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3871,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"7068:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3872,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"7071:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3873,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7074:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3869,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3660,3740,3848],"referencedDeclaration":3848,"src":"7051:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3594_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:18"},{"expression":{"arguments":[{"id":3877,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"7098:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},{"id":3878,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"7105:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3876,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"7086:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3594_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3880,"nodeType":"ExpressionStatement","src":"7086:28:18"},{"expression":{"id":3881,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"7131:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3861,"id":3882,"nodeType":"Return","src":"7124:16:18"}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"6760:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:18","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"hash","nameLocation":"6912:4:18","nodeType":"VariableDeclaration","scope":3884,"src":"6904:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"v","nameLocation":"6924:1:18","nodeType":"VariableDeclaration","scope":3884,"src":"6918:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3852,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3855,"mutability":"mutable","name":"r","nameLocation":"6935:1:18","nodeType":"VariableDeclaration","scope":3884,"src":"6927:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"s","nameLocation":"6946:1:18","nodeType":"VariableDeclaration","scope":3884,"src":"6938:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:18"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3884,"src":"6972:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:18"},"scope":3934,"src":"6887:260:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3932,"nodeType":"Block","src":"7352:460:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7366:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3894,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7375:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3590,"src":"7375:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7462:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3900,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7471:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3591,"src":"7471:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3907,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7567:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3908,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7576:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3592,"src":"7576:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7701:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3920,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7710:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3594_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3593,"src":"7710:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"IfStatement","src":"7697:109:18","trueBody":{"id":3927,"nodeType":"Block","src":"7742:64:18","statements":[{"errorCall":{"arguments":[{"id":3924,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"7786:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3923,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"7763:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3926,"nodeType":"RevertStatement","src":"7756:39:18"}]}},"id":3929,"nodeType":"IfStatement","src":"7563:243:18","trueBody":{"id":3918,"nodeType":"Block","src":"7613:78:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3914,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"7670:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:18","typeDescriptions":{}}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3911,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"7634:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3917,"nodeType":"RevertStatement","src":"7627:53:18"}]}},"id":3930,"nodeType":"IfStatement","src":"7458:348:18","trueBody":{"id":3906,"nodeType":"Block","src":"7502:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3903,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"7523:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3905,"nodeType":"RevertStatement","src":"7516:30:18"}]}},"id":3931,"nodeType":"IfStatement","src":"7362:444:18","trueBody":{"id":3898,"nodeType":"Block","src":"7397:55:18","statements":[{"functionReturnParameters":3892,"id":3897,"nodeType":"Return","src":"7411:7:18"}]}}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"7153:122:18","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:18","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"error","nameLocation":"7314:5:18","nodeType":"VariableDeclaration","scope":3933,"src":"7301:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3887,"nodeType":"UserDefinedTypeName","pathNode":{"id":3886,"name":"RecoverError","nameLocations":["7301:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"7301:12:18"},"referencedDeclaration":3594,"src":"7301:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3594","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:18","nodeType":"VariableDeclaration","scope":3933,"src":"7321:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:18"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[],"src":"7352:0:18"},"scope":3934,"src":"7280:532:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3935,"src":"344:7470:18","usedErrors":[3597,3602,3607],"usedEvents":[]}],"src":"112:7703:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4161],"IERC5267":[200],"MessageHashUtils":[4247],"ShortString":[1849],"ShortStrings":[2060]},"id":4162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3936,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4162,"sourceUnit":4248,"src":"139:56:19","symbolAliases":[{"foreign":{"id":3937,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"147:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4162,"sourceUnit":2061,"src":"196:62:19","symbolAliases":[{"foreign":{"id":3939,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"204:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3940,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"218:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4162,"sourceUnit":201,"src":"259:55:19","symbolAliases":[{"foreign":{"id":3942,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"267:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3945,"name":"IERC5267","nameLocations":["1988:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":200,"src":"1988:8:19"},"id":3946,"nodeType":"InheritanceSpecifier","src":"1988:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"316:1643:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4161,"linearizedBaseContracts":[4161,200],"name":"EIP712","nameLocation":"1978:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3948,"libraryName":{"id":3947,"name":"ShortStrings","nameLocations":["2009:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2060,"src":"2009:12:19"},"nodeType":"UsingForDirective","src":"2003:25:19"},{"constant":true,"id":3953,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:19","nodeType":"VariableDeclaration","scope":4161,"src":"2034:140:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3950,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3955,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:19","nodeType":"VariableDeclaration","scope":4161,"src":"2373:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3957,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:19","nodeType":"VariableDeclaration","scope":4161,"src":"2427:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3959,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:19","nodeType":"VariableDeclaration","scope":4161,"src":"2473:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3958,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3961,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:19","nodeType":"VariableDeclaration","scope":4161,"src":"2517:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3963,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:19","nodeType":"VariableDeclaration","scope":4161,"src":"2560:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3966,"mutability":"immutable","name":"_name","nameLocation":"2637:5:19","nodeType":"VariableDeclaration","scope":4161,"src":"2607:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":3965,"nodeType":"UserDefinedTypeName","pathNode":{"id":3964,"name":"ShortString","nameLocations":["2607:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"2607:11:19"},"referencedDeclaration":1849,"src":"2607:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3969,"mutability":"immutable","name":"_version","nameLocation":"2678:8:19","nodeType":"VariableDeclaration","scope":4161,"src":"2648:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"},"typeName":{"id":3968,"nodeType":"UserDefinedTypeName","pathNode":{"id":3967,"name":"ShortString","nameLocations":["2648:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1849,"src":"2648:11:19"},"referencedDeclaration":1849,"src":"2648:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3971,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:19","nodeType":"VariableDeclaration","scope":4161,"src":"2742:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3970,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3973,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:19","nodeType":"VariableDeclaration","scope":4161,"src":"2826:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3972,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4030,"nodeType":"Block","src":"3483:376:19","statements":[{"expression":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"3493:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3984,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3532:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3982,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3501:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2001,"src":"3501:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1849_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"src":"3493:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"id":3987,"nodeType":"ExpressionStatement","src":"3493:53:19"},{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"3556:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3991,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"3601:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3989,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3567:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2001,"src":"3567:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1849_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"src":"3556:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"id":3994,"nodeType":"ExpressionStatement","src":"3556:62:19"},{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"3628:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3999,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"3658:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3997,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:19","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3996,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4003,"nodeType":"ExpressionStatement","src":"3628:36:19"},{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4004,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"3674:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4008,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"3707:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:19","typeDescriptions":{}}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4005,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4012,"nodeType":"ExpressionStatement","src":"3674:42:19"},{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"3727:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4014,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"3727:30:19"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"3767:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4019,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"3792:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4022,"nodeType":"ExpressionStatement","src":"3767:48:19"},{"expression":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"3825:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4026,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}],"id":4025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4024,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{}}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4029,"nodeType":"ExpressionStatement","src":"3825:27:19"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"2864:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4031,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"name","nameLocation":"3454:4:19","nodeType":"VariableDeclaration","scope":4031,"src":"3440:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3975,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"version","nameLocation":"3474:7:19","nodeType":"VariableDeclaration","scope":4031,"src":"3460:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3977,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:19"},"returnParameters":{"id":3980,"nodeType":"ParameterList","parameters":[],"src":"3483:0:19"},"scope":4161,"src":"3428:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4056,"nodeType":"Block","src":"4007:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4039,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}],"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4037,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:19","typeDescriptions":{}}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4041,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4038:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4043,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4045,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"4070:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4054,"nodeType":"Block","src":"4146:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4051,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"4167:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4036,"id":4053,"nodeType":"Return","src":"4160:30:19"}]},"id":4055,"nodeType":"IfStatement","src":"4017:184:19","trueBody":{"id":4050,"nodeType":"Block","src":"4086:54:19","statements":[{"expression":{"id":4048,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4107:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4036,"id":4049,"nodeType":"Return","src":"4100:29:19"}]}}]},"documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"3865:75:19","text":" @dev Returns the domain separator for the current chain."},"id":4057,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:19","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[],"src":"3972:2:19"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4057,"src":"3998:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:19"},"scope":4161,"src":"3945:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"4277:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":4065,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"4315:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4066,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"4326:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4067,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"4339:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4068,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4072,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}],"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4070,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:19","typeDescriptions":{}}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4063,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4062,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4061,"id":4076,"nodeType":"Return","src":"4287:98:19"}]},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:19","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[],"src":"4243:2:19"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"4268:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:19"},"scope":4161,"src":"4213:179:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4093,"nodeType":"Block","src":"5103:90:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4088,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"5153:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4090,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"5175:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4086,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"5120:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4247_$","typeString":"type(library MessageHashUtils)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4246,"src":"5120:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4085,"id":4092,"nodeType":"Return","src":"5113:73:19"}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"4398:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:19","nodeType":"FunctionDefinition","parameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:19","nodeType":"VariableDeclaration","scope":4094,"src":"5043:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:19"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4094,"src":"5094:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:19"},"scope":4161,"src":"5017:176:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[199],"body":{"id":4135,"nodeType":"Block","src":"5556:229:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4114,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"5617:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4116,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"5644:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4122,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4161","typeString":"contract EIP712"}],"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4120,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:19","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:19","typeDescriptions":{}}},"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ArrayTypeName","src":"5756:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4112,"id":4134,"nodeType":"Return","src":"5566:212:19"}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"5199:24:19","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:19","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[],"src":"5249:2:19"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"fields","nameLocation":"5333:6:19","nodeType":"VariableDeclaration","scope":4136,"src":"5326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4097,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"name","nameLocation":"5367:4:19","nodeType":"VariableDeclaration","scope":4136,"src":"5353:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4099,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"version","nameLocation":"5399:7:19","nodeType":"VariableDeclaration","scope":4136,"src":"5385:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4101,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:19","nodeType":"VariableDeclaration","scope":4136,"src":"5420:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:19","nodeType":"VariableDeclaration","scope":4136,"src":"5449:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"salt","nameLocation":"5496:4:19","nodeType":"VariableDeclaration","scope":4136,"src":"5488:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:19","nodeType":"VariableDeclaration","scope":4136,"src":"5514:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ArrayTypeName","src":"5514:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:19"},"scope":4161,"src":"5228:557:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4147,"nodeType":"Block","src":"6166:65:19","statements":[{"expression":{"arguments":[{"id":4144,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"6210:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4142,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"6183:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"6183:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1849_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4141,"id":4146,"nodeType":"Return","src":"6176:48:19"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"5791:256:19","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:19","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[],"src":"6125:2:19"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"6151:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4139,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:19"},"scope":4161,"src":"6105:126:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"6621:71:19","statements":[{"expression":{"arguments":[{"id":4156,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"6668:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4154,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"6638:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1849","typeString":"ShortString"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"6638:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1849_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1849_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4153,"id":4158,"nodeType":"Return","src":"6631:54:19"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"6237:262:19","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:19","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[],"src":"6580:2:19"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4160,"src":"6606:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4151,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:19"},"scope":4161,"src":"6557:135:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4162,"src":"1960:4734:19","usedErrors":[1857,1859],"usedEvents":[180]}],"src":"113:6582:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4247],"Strings":[3586]},"id":4248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4163,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4248,"sourceUnit":3587,"src":"149:39:20","symbolAliases":[{"foreign":{"id":4164,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4247,"linearizedBaseContracts":[4247],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4175,"nodeType":"Block","src":"1339:341:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:20"},"nodeType":"YulFunctionCall","src":"1388:48:20"},"nodeType":"YulExpressionStatement","src":"1388:48:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:20","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:20"},"nodeType":"YulFunctionCall","src":"1490:25:20"},"nodeType":"YulExpressionStatement","src":"1490:25:20"},{"nodeType":"YulAssignment","src":"1569:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:20"},"nodeType":"YulFunctionCall","src":"1579:21:20"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4172,"isOffset":false,"isSlot":false,"src":"1569:6:20","valueSize":1},{"declaration":4169,"isOffset":false,"isSlot":false,"src":"1503:11:20","valueSize":1}],"flags":["memory-safe"],"id":4174,"nodeType":"InlineAssembly","src":"1349:325:20"}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"552:690:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:20","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:20","nodeType":"VariableDeclaration","scope":4176,"src":"1279:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:20"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"digest","nameLocation":"1331:6:20","nodeType":"VariableDeclaration","scope":4176,"src":"1323:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:20"},"scope":4247,"src":"1247:433:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4201,"nodeType":"Block","src":"2257:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4193,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"2366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:20","memberName":"length","nodeType":"MemberAccess","src":"2366:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4191,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"2349:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3586_$","typeString":"type(library Strings)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"2349:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4189,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:20","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4197,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"2384:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4185,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:20","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4184,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4183,"id":4200,"nodeType":"Return","src":"2267:126:20"}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"1686:480:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:20","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"message","nameLocation":"2216:7:20","nodeType":"VariableDeclaration","scope":4202,"src":"2203:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4178,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:20"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4202,"src":"2248:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:20"},"scope":4247,"src":"2171:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"2854:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4216,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"2910:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4217,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"2921:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4213,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4211,"id":4220,"nodeType":"Return","src":"2864:63:20"}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"2406:332:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:20","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"validator","nameLocation":"2792:9:20","nodeType":"VariableDeclaration","scope":4222,"src":"2784:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4204,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"data","nameLocation":"2816:4:20","nodeType":"VariableDeclaration","scope":4222,"src":"2803:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4206,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:20"},"returnParameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"2845:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:20"},"scope":4247,"src":"2743:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4233,"nodeType":"Block","src":"3216:216:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:20","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:20","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:20"},"nodeType":"YulFunctionCall","src":"3265:24:20"},"nodeType":"YulExpressionStatement","src":"3265:24:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:20","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:20","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:20"},"nodeType":"YulFunctionCall","src":"3315:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:20"},"nodeType":"YulFunctionCall","src":"3302:32:20"},"nodeType":"YulExpressionStatement","src":"3302:32:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:20","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:20"},"nodeType":"YulFunctionCall","src":"3347:25:20"},"nodeType":"YulExpressionStatement","src":"3347:25:20"},{"nodeType":"YulAssignment","src":"3385:31:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:20","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:20"},"nodeType":"YulFunctionCall","src":"3395:21:20"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4230,"isOffset":false,"isSlot":false,"src":"3385:6:20","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"3360:11:20","valueSize":1},{"declaration":4225,"isOffset":false,"isSlot":false,"src":"3323:9:20","valueSize":1}],"flags":["memory-safe"],"id":4232,"nodeType":"InlineAssembly","src":"3226:200:20"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"2940:129:20","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4234,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:20","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"validator","nameLocation":"3132:9:20","nodeType":"VariableDeclaration","scope":4234,"src":"3124:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4224,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:20","nodeType":"VariableDeclaration","scope":4234,"src":"3151:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:20"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"digest","nameLocation":"3208:6:20","nodeType":"VariableDeclaration","scope":4234,"src":"3200:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:20"},"scope":4247,"src":"3074:358:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"3983:265:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:20"},"nodeType":"YulFunctionCall","src":"4043:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:20"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:20"},"nodeType":"YulFunctionCall","src":"4067:23:20"},"nodeType":"YulExpressionStatement","src":"4067:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:20"},"nodeType":"YulFunctionCall","src":"4110:14:20"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:20"},"nodeType":"YulFunctionCall","src":"4103:39:20"},"nodeType":"YulExpressionStatement","src":"4103:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:20"},"nodeType":"YulFunctionCall","src":"4162:14:20"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:20"},"nodeType":"YulFunctionCall","src":"4155:34:20"},"nodeType":"YulExpressionStatement","src":"4155:34:20"},{"nodeType":"YulAssignment","src":"4202:30:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:20"},"nodeType":"YulFunctionCall","src":"4212:20:20"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4242,"isOffset":false,"isSlot":false,"src":"4202:6:20","valueSize":1},{"declaration":4237,"isOffset":false,"isSlot":false,"src":"4126:15:20","valueSize":1},{"declaration":4239,"isOffset":false,"isSlot":false,"src":"4178:10:20","valueSize":1}],"flags":["memory-safe"],"id":4244,"nodeType":"InlineAssembly","src":"3993:249:20"}]},"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"3438:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:20","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:20","nodeType":"VariableDeclaration","scope":4246,"src":"3899:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:20","nodeType":"VariableDeclaration","scope":4246,"src":"3924:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:20"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"digest","nameLocation":"3975:6:20","nodeType":"VariableDeclaration","scope":4246,"src":"3967:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:20"},"scope":4247,"src":"3874:374:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4248,"src":"521:3729:20","usedErrors":[],"usedEvents":[]}],"src":"123:4128:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4271],"IERC165":[4283]},"id":4272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4272,"sourceUnit":4284,"src":"140:38:21","symbolAliases":[{"foreign":{"id":4250,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"148:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4253,"name":"IERC165","nameLocations":["688:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4283,"src":"688:7:21"},"id":4254,"nodeType":"InheritanceSpecifier","src":"688:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"180:479:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4271,"linearizedBaseContracts":[4271,4283],"name":"ERC165","nameLocation":"678:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4282],"body":{"id":4269,"nodeType":"Block","src":"812:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"829:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4264,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4283_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4283_$","typeString":"type(contract IERC165)"}],"id":4263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4283","typeString":"type(contract IERC165)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4261,"id":4268,"nodeType":"Return","src":"822:47:21"}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"702:23:21","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:21","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:21","nodeType":"VariableDeclaration","scope":4270,"src":"757:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4256,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:21"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"806:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4259,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:21"},"scope":4271,"src":"730:146:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4272,"src":"660:218:21","usedErrors":[],"usedEvents":[]}],"src":"114:765:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4283]},"id":4284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4273,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"142:280:22","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4283,"linearizedBaseContracts":[4283],"name":"IERC165","nameLocation":"433:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"447:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4282,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:22","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:22","nodeType":"VariableDeclaration","scope":4282,"src":"819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4276,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:22"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"862:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4279,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:22"},"scope":4283,"src":"792:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4284,"src":"423:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:756:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5904],"Panic":[1843],"SafeCast":[7669]},"id":5905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4285,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5905,"sourceUnit":1844,"src":"129:35:23","symbolAliases":[{"foreign":{"id":4286,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5905,"sourceUnit":7670,"src":"165:40:23","symbolAliases":[{"foreign":{"id":4288,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5904,"linearizedBaseContracts":[5904],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4295,"members":[{"id":4291,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":4292,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":4293,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":4294,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":4308,"nodeType":"Block","src":"731:112:23","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:23","statements":[{"nodeType":"YulAssignment","src":"780:16:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:23"},"nodeType":"YulFunctionCall","src":"787:9:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:23"}]},{"nodeType":"YulAssignment","src":"809:18:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:23"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:23"},"nodeType":"YulFunctionCall","src":"817:10:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4298,"isOffset":false,"isSlot":false,"src":"791:1:23","valueSize":1},{"declaration":4298,"isOffset":false,"isSlot":false,"src":"825:1:23","valueSize":1},{"declaration":4300,"isOffset":false,"isSlot":false,"src":"794:1:23","valueSize":1},{"declaration":4303,"isOffset":false,"isSlot":false,"src":"809:4:23","valueSize":1},{"declaration":4305,"isOffset":false,"isSlot":false,"src":"780:3:23","valueSize":1},{"declaration":4305,"isOffset":false,"isSlot":false,"src":"820:3:23","valueSize":1}],"flags":["memory-safe"],"id":4307,"nodeType":"InlineAssembly","src":"741:96:23"}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"475:163:23","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:23","nodeType":"FunctionDefinition","parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"a","nameLocation":"667:1:23","nodeType":"VariableDeclaration","scope":4309,"src":"659:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"b","nameLocation":"678:1:23","nodeType":"VariableDeclaration","scope":4309,"src":"670:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:23"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"high","nameLocation":"712:4:23","nodeType":"VariableDeclaration","scope":4309,"src":"704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"low","nameLocation":"726:3:23","nodeType":"VariableDeclaration","scope":4309,"src":"718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:23"},"scope":5904,"src":"643:200:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4322,"nodeType":"Block","src":"1115:462:23","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:23"},"nodeType":"YulFunctionCall","src":"1474:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:23"},"nodeType":"YulFunctionCall","src":"1461:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:23","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:23"},"nodeType":"YulFunctionCall","src":"1501:9:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:23"}]},{"nodeType":"YulAssignment","src":"1523:38:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:23"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:23"},"nodeType":"YulFunctionCall","src":"1535:12:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:23"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:23"},"nodeType":"YulFunctionCall","src":"1549:11:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:23"},"nodeType":"YulFunctionCall","src":"1531:30:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4312,"isOffset":false,"isSlot":false,"src":"1468:1:23","valueSize":1},{"declaration":4312,"isOffset":false,"isSlot":false,"src":"1505:1:23","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"1471:1:23","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"1508:1:23","valueSize":1},{"declaration":4317,"isOffset":false,"isSlot":false,"src":"1523:4:23","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"1494:3:23","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"1543:3:23","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"1556:3:23","valueSize":1}],"flags":["memory-safe"],"id":4321,"nodeType":"InlineAssembly","src":"1412:159:23"}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"849:173:23","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4323,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:23","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"a","nameLocation":"1051:1:23","nodeType":"VariableDeclaration","scope":4323,"src":"1043:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"b","nameLocation":"1062:1:23","nodeType":"VariableDeclaration","scope":4323,"src":"1054:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:23"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"high","nameLocation":"1096:4:23","nodeType":"VariableDeclaration","scope":4323,"src":"1088:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"low","nameLocation":"1110:3:23","nodeType":"VariableDeclaration","scope":4323,"src":"1102:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:23"},"scope":5904,"src":"1027:550:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"1784:149:23","statements":[{"id":4356,"nodeType":"UncheckedBlock","src":"1794:133:23","statements":[{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"c","nameLocation":"1826:1:23","nodeType":"VariableDeclaration","scope":4356,"src":"1818:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"1830:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4338,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"1834:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:23"},{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"1849:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"1859:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"1864:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4346,"nodeType":"ExpressionStatement","src":"1849:16:23"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"1879:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"1888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4351,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"1908:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4349,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"1892:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"1892:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"1879:37:23"}]}]},"documentation":{"id":4324,"nodeType":"StructuredDocumentation","src":"1583:105:23","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:23","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"a","nameLocation":"1717:1:23","nodeType":"VariableDeclaration","scope":4358,"src":"1709:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"b","nameLocation":"1728:1:23","nodeType":"VariableDeclaration","scope":4358,"src":"1720:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:23"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"success","nameLocation":"1759:7:23","nodeType":"VariableDeclaration","scope":4358,"src":"1754:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4330,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"result","nameLocation":"1776:6:23","nodeType":"VariableDeclaration","scope":4358,"src":"1768:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:23"},"scope":5904,"src":"1693:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4392,"nodeType":"Block","src":"2143:149:23","statements":[{"id":4391,"nodeType":"UncheckedBlock","src":"2153:133:23","statements":[{"assignments":[4371],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"c","nameLocation":"2185:1:23","nodeType":"VariableDeclaration","scope":4391,"src":"2177:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4375,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"2189:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2193:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:23"},{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"2218:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"2223:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"ExpressionStatement","src":"2208:16:23"},{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"2238:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"2247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4386,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"2267:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2251:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"2251:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"2238:37:23"}]}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"1939:108:23","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4393,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:23","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"a","nameLocation":"2076:1:23","nodeType":"VariableDeclaration","scope":4393,"src":"2068:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"b","nameLocation":"2087:1:23","nodeType":"VariableDeclaration","scope":4393,"src":"2079:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:23"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"success","nameLocation":"2118:7:23","nodeType":"VariableDeclaration","scope":4393,"src":"2113:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4365,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"result","nameLocation":"2135:6:23","nodeType":"VariableDeclaration","scope":4393,"src":"2127:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:23"},"scope":5904,"src":"2052:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4422,"nodeType":"Block","src":"2505:391:23","statements":[{"id":4421,"nodeType":"UncheckedBlock","src":"2515:375:23","statements":[{"assignments":[4406],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"c","nameLocation":"2547:1:23","nodeType":"VariableDeclaration","scope":4421,"src":"2539:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"2551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4408,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"2555:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:23"},{"AST":{"nodeType":"YulBlock","src":"2595:188:23","statements":[{"nodeType":"YulAssignment","src":"2727:42:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:23"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:23"},"nodeType":"YulFunctionCall","src":"2744:9:23"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:23"},"nodeType":"YulFunctionCall","src":"2741:16:23"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:23"},"nodeType":"YulFunctionCall","src":"2759:9:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:23"},"nodeType":"YulFunctionCall","src":"2738:31:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4396,"isOffset":false,"isSlot":false,"src":"2751:1:23","valueSize":1},{"declaration":4396,"isOffset":false,"isSlot":false,"src":"2766:1:23","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"2755:1:23","valueSize":1},{"declaration":4406,"isOffset":false,"isSlot":false,"src":"2748:1:23","valueSize":1},{"declaration":4401,"isOffset":false,"isSlot":false,"src":"2727:7:23","valueSize":1}],"flags":["memory-safe"],"id":4411,"nodeType":"InlineAssembly","src":"2570:213:23"},{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"2842:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"2851:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4416,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"2871:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4414,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"2855:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"2855:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4420,"nodeType":"ExpressionStatement","src":"2842:37:23"}]}]},"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"2298:111:23","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4423,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"a","nameLocation":"2438:1:23","nodeType":"VariableDeclaration","scope":4423,"src":"2430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"b","nameLocation":"2449:1:23","nodeType":"VariableDeclaration","scope":4423,"src":"2441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:23"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"success","nameLocation":"2480:7:23","nodeType":"VariableDeclaration","scope":4423,"src":"2475:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4400,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"result","nameLocation":"2497:6:23","nodeType":"VariableDeclaration","scope":4423,"src":"2489:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:23"},"scope":5904,"src":"2414:482:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"3111:231:23","statements":[{"id":4442,"nodeType":"UncheckedBlock","src":"3121:215:23","statements":[{"expression":{"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"3145:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"3155:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4440,"nodeType":"ExpressionStatement","src":"3145:15:23"},{"AST":{"nodeType":"YulBlock","src":"3199:127:23","statements":[{"nodeType":"YulAssignment","src":"3293:19:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:23"},"nodeType":"YulFunctionCall","src":"3303:9:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4426,"isOffset":false,"isSlot":false,"src":"3307:1:23","valueSize":1},{"declaration":4428,"isOffset":false,"isSlot":false,"src":"3310:1:23","valueSize":1},{"declaration":4433,"isOffset":false,"isSlot":false,"src":"3293:6:23","valueSize":1}],"flags":["memory-safe"],"id":4441,"nodeType":"InlineAssembly","src":"3174:152:23"}]}]},"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"2902:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:23","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"a","nameLocation":"3044:1:23","nodeType":"VariableDeclaration","scope":4444,"src":"3036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4428,"mutability":"mutable","name":"b","nameLocation":"3055:1:23","nodeType":"VariableDeclaration","scope":4444,"src":"3047:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:23"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"success","nameLocation":"3086:7:23","nodeType":"VariableDeclaration","scope":4444,"src":"3081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4430,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4433,"mutability":"mutable","name":"result","nameLocation":"3103:6:23","nodeType":"VariableDeclaration","scope":4444,"src":"3095:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:23"},"scope":5904,"src":"3020:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4464,"nodeType":"Block","src":"3567:231:23","statements":[{"id":4463,"nodeType":"UncheckedBlock","src":"3577:215:23","statements":[{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"3601:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"3611:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4461,"nodeType":"ExpressionStatement","src":"3601:15:23"},{"AST":{"nodeType":"YulBlock","src":"3655:127:23","statements":[{"nodeType":"YulAssignment","src":"3749:19:23","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:23"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:23"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:23"},"nodeType":"YulFunctionCall","src":"3759:9:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4447,"isOffset":false,"isSlot":false,"src":"3763:1:23","valueSize":1},{"declaration":4449,"isOffset":false,"isSlot":false,"src":"3766:1:23","valueSize":1},{"declaration":4454,"isOffset":false,"isSlot":false,"src":"3749:6:23","valueSize":1}],"flags":["memory-safe"],"id":4462,"nodeType":"InlineAssembly","src":"3630:152:23"}]}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"3348:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4465,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:23","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"a","nameLocation":"3500:1:23","nodeType":"VariableDeclaration","scope":4465,"src":"3492:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"b","nameLocation":"3511:1:23","nodeType":"VariableDeclaration","scope":4465,"src":"3503:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:23"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"success","nameLocation":"3542:7:23","nodeType":"VariableDeclaration","scope":4465,"src":"3537:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4451,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"result","nameLocation":"3559:6:23","nodeType":"VariableDeclaration","scope":4465,"src":"3551:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:23"},"scope":5904,"src":"3476:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"3989:122:23","statements":[{"assignments":[4476,4478],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"success","nameLocation":"4005:7:23","nodeType":"VariableDeclaration","scope":4494,"src":"4000:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4475,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"result","nameLocation":"4022:6:23","nodeType":"VariableDeclaration","scope":4494,"src":"4014:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4483,"initialValue":{"arguments":[{"id":4480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"4039:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4481,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"4042:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"4032:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:23"},{"expression":{"arguments":[{"id":4485,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"4069:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"4078:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:23","memberName":"max","nodeType":"MemberAccess","src":"4086:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4484,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4061:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4474,"id":4493,"nodeType":"Return","src":"4054:50:23"}]},"documentation":{"id":4466,"nodeType":"StructuredDocumentation","src":"3804:103:23","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:23","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"a","nameLocation":"3943:1:23","nodeType":"VariableDeclaration","scope":4495,"src":"3935:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"b","nameLocation":"3954:1:23","nodeType":"VariableDeclaration","scope":4495,"src":"3946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:23"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4495,"src":"3980:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:23"},"scope":5904,"src":"3912:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"4294:73:23","statements":[{"assignments":[null,4506],"declarations":[null,{"constant":false,"id":4506,"mutability":"mutable","name":"result","nameLocation":"4315:6:23","nodeType":"VariableDeclaration","scope":4514,"src":"4307:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4511,"initialValue":{"arguments":[{"id":4508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4332:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"4335:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4325:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:23"},{"expression":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"4354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4504,"id":4513,"nodeType":"Return","src":"4347:13:23"}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"4117:95:23","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:23","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"a","nameLocation":"4248:1:23","nodeType":"VariableDeclaration","scope":4515,"src":"4240:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"b","nameLocation":"4259:1:23","nodeType":"VariableDeclaration","scope":4515,"src":"4251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:23"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"4285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:23"},"scope":5904,"src":"4217:150:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4544,"nodeType":"Block","src":"4564:122:23","statements":[{"assignments":[4526,4528],"declarations":[{"constant":false,"id":4526,"mutability":"mutable","name":"success","nameLocation":"4580:7:23","nodeType":"VariableDeclaration","scope":4544,"src":"4575:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4525,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4528,"mutability":"mutable","name":"result","nameLocation":"4597:6:23","nodeType":"VariableDeclaration","scope":4544,"src":"4589:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4533,"initialValue":{"arguments":[{"id":4530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"4614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"4617:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4529,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"4607:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:23"},{"expression":{"arguments":[{"id":4535,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"4644:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"4653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4537,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:23","memberName":"max","nodeType":"MemberAccess","src":"4661:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4636:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4524,"id":4543,"nodeType":"Return","src":"4629:50:23"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"4373:109:23","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4545,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:23","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"a","nameLocation":"4518:1:23","nodeType":"VariableDeclaration","scope":4545,"src":"4510:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4520,"mutability":"mutable","name":"b","nameLocation":"4529:1:23","nodeType":"VariableDeclaration","scope":4545,"src":"4521:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:23"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4545,"src":"4555:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:23"},"scope":5904,"src":"4487:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4571,"nodeType":"Block","src":"5158:207:23","statements":[{"id":4570,"nodeType":"UncheckedBlock","src":"5168:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"5306:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"5312:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"5316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4564,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"5337:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4562,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5321:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"5321:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4556,"id":4569,"nodeType":"Return","src":"5299:49:23"}]}]},"documentation":{"id":4546,"nodeType":"StructuredDocumentation","src":"4692:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4572,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:23","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"condition","nameLocation":"5093:9:23","nodeType":"VariableDeclaration","scope":4572,"src":"5088:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4547,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"a","nameLocation":"5112:1:23","nodeType":"VariableDeclaration","scope":4572,"src":"5104:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"b","nameLocation":"5123:1:23","nodeType":"VariableDeclaration","scope":4572,"src":"5115:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:23"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4572,"src":"5149:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:23"},"scope":5904,"src":"5071:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"5502:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"5527:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"5531:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"5534:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"5537:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4582,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"5519:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4581,"id":4589,"nodeType":"Return","src":"5512:27:23"}]},"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"5371:59:23","text":" @dev Returns the largest of two numbers."},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:23","nodeType":"FunctionDefinition","parameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"a","nameLocation":"5456:1:23","nodeType":"VariableDeclaration","scope":4591,"src":"5448:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4577,"mutability":"mutable","name":"b","nameLocation":"5467:1:23","nodeType":"VariableDeclaration","scope":4591,"src":"5459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:23"},"returnParameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4591,"src":"5493:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:23"},"scope":5904,"src":"5435:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4609,"nodeType":"Block","src":"5684:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"5709:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"5713:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"5716:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"5719:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"5701:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4600,"id":4608,"nodeType":"Return","src":"5694:27:23"}]},"documentation":{"id":4592,"nodeType":"StructuredDocumentation","src":"5552:60:23","text":" @dev Returns the smallest of two numbers."},"id":4610,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:23","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"a","nameLocation":"5638:1:23","nodeType":"VariableDeclaration","scope":4610,"src":"5630:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"mutability":"mutable","name":"b","nameLocation":"5649:1:23","nodeType":"VariableDeclaration","scope":4610,"src":"5641:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:23"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4610,"src":"5675:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:23"},"scope":5904,"src":"5617:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4632,"nodeType":"Block","src":"5912:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5967:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"5971:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"5977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"5981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4619,"id":4631,"nodeType":"Return","src":"5959:28:23"}]},"documentation":{"id":4611,"nodeType":"StructuredDocumentation","src":"5734:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:23","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"a","nameLocation":"5866:1:23","nodeType":"VariableDeclaration","scope":4633,"src":"5858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"b","nameLocation":"5877:1:23","nodeType":"VariableDeclaration","scope":4633,"src":"5869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:23"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"5903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:23"},"scope":5904,"src":"5841:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4673,"nodeType":"Block","src":"6286:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"6300:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4654,"nodeType":"IfStatement","src":"6296:150:23","trueBody":{"id":4653,"nodeType":"Block","src":"6308:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":4649,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"6412:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"6412:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4646,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"6400:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"6400:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4652,"nodeType":"ExpressionStatement","src":"6400:35:23"}]}},{"id":4672,"nodeType":"UncheckedBlock","src":"6829:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6876:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4655,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"6860:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"6860:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6887:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"6896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4642,"id":4671,"nodeType":"Return","src":"6853:49:23"}]}]},"documentation":{"id":4634,"nodeType":"StructuredDocumentation","src":"6000:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:23","nodeType":"FunctionDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"a","nameLocation":"6240:1:23","nodeType":"VariableDeclaration","scope":4674,"src":"6232:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4638,"mutability":"mutable","name":"b","nameLocation":"6251:1:23","nodeType":"VariableDeclaration","scope":4674,"src":"6243:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:23"},"returnParameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4674,"src":"6277:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:23"},"scope":5904,"src":"6215:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4809,"nodeType":"Block","src":"7340:3585:23","statements":[{"id":4808,"nodeType":"UncheckedBlock","src":"7350:3569:23","statements":[{"assignments":[4687,4689],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"high","nameLocation":"7383:4:23","nodeType":"VariableDeclaration","scope":4808,"src":"7375:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"low","nameLocation":"7397:3:23","nodeType":"VariableDeclaration","scope":4808,"src":"7389:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4694,"initialValue":{"arguments":[{"id":4691,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"7411:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4692,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"7414:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4690,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"7404:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4703,"nodeType":"IfStatement","src":"7494:365:23","trueBody":{"id":4702,"nodeType":"Block","src":"7509:350:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7827:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4699,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"7833:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4685,"id":4701,"nodeType":"Return","src":"7820:24:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"7969:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4705,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"7984:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4722,"nodeType":"IfStatement","src":"7965:142:23","trueBody":{"id":4721,"nodeType":"Block","src":"7990:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"8028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4714,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"8046:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4716,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"8070:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1806,"src":"8070:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8020:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4707,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"8008:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"8008:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4720,"nodeType":"ExpressionStatement","src":"8008:84:23"}]}},{"assignments":[4724],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:23","nodeType":"VariableDeclaration","scope":4808,"src":"8359:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"nodeType":"VariableDeclarationStatement","src":"8359:17:23"},{"AST":{"nodeType":"YulBlock","src":"8415:283:23","statements":[{"nodeType":"YulAssignment","src":"8484:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:23"},"nodeType":"YulFunctionCall","src":"8497:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:23"}]},{"nodeType":"YulAssignment","src":"8604:37:23","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:23"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:23"},"nodeType":"YulFunctionCall","src":"8622:18:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:23"},"nodeType":"YulFunctionCall","src":"8612:29:23"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:23"}]},{"nodeType":"YulAssignment","src":"8658:26:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:23"},"nodeType":"YulFunctionCall","src":"8665:19:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4681,"isOffset":false,"isSlot":false,"src":"8510:11:23","valueSize":1},{"declaration":4687,"isOffset":false,"isSlot":false,"src":"8604:4:23","valueSize":1},{"declaration":4687,"isOffset":false,"isSlot":false,"src":"8616:4:23","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":false,"src":"8636:3:23","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":false,"src":"8658:3:23","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":false,"src":"8669:3:23","valueSize":1},{"declaration":4724,"isOffset":false,"isSlot":false,"src":"8484:9:23","valueSize":1},{"declaration":4724,"isOffset":false,"isSlot":false,"src":"8625:9:23","valueSize":1},{"declaration":4724,"isOffset":false,"isSlot":false,"src":"8674:9:23","valueSize":1},{"declaration":4677,"isOffset":false,"isSlot":false,"src":"8504:1:23","valueSize":1},{"declaration":4679,"isOffset":false,"isSlot":false,"src":"8507:1:23","valueSize":1}],"flags":["memory-safe"],"id":4726,"nodeType":"InlineAssembly","src":"8390:308:23"},{"assignments":[4728],"declarations":[{"constant":false,"id":4728,"mutability":"mutable","name":"twos","nameLocation":"8910:4:23","nodeType":"VariableDeclaration","scope":4808,"src":"8902:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"8917:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4731,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"8936:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:23"},{"AST":{"nodeType":"YulBlock","src":"8987:359:23","statements":[{"nodeType":"YulAssignment","src":"9052:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:23"},"nodeType":"YulFunctionCall","src":"9067:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:23"}]},{"nodeType":"YulAssignment","src":"9153:21:23","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:23"},"nodeType":"YulFunctionCall","src":"9160:14:23"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:23"}]},{"nodeType":"YulAssignment","src":"9293:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:23"},"nodeType":"YulFunctionCall","src":"9309:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:23"},"nodeType":"YulFunctionCall","src":"9305:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:23"},"nodeType":"YulFunctionCall","src":"9301:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4681,"isOffset":false,"isSlot":false,"src":"9052:11:23","valueSize":1},{"declaration":4681,"isOffset":false,"isSlot":false,"src":"9071:11:23","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":false,"src":"9153:3:23","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":false,"src":"9164:3:23","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"9084:4:23","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"9169:4:23","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"9293:4:23","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"9316:4:23","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"9323:4:23","valueSize":1}],"flags":["memory-safe"],"id":4736,"nodeType":"InlineAssembly","src":"8962:384:23"},{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4737,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"9409:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4738,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"9416:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4739,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9423:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4742,"nodeType":"ExpressionStatement","src":"9409:18:23"},{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:23","nodeType":"VariableDeclaration","scope":4808,"src":"9762:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4746,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"9785:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:23"},{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10018:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10033:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4755,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"10018:36:23"},{"expression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4760,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10103:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4763,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10117:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4767,"nodeType":"ExpressionStatement","src":"10088:36:23"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10175:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4771,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10189:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"10160:36:23"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10231:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10246:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4779,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"10231:36:23"},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10304:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10319:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4787,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"10304:36:23"},{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"10393:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4795,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10407:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"nodeType":"ExpressionStatement","src":"10378:36:23"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10859:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"10868:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4802,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"10874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"10859:22:23"},{"expression":{"id":4806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10902:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4685,"id":4807,"nodeType":"Return","src":"10895:13:23"}]}]},"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"6925:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:23","nodeType":"FunctionDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"x","nameLocation":"7266:1:23","nodeType":"VariableDeclaration","scope":4810,"src":"7258:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"y","nameLocation":"7277:1:23","nodeType":"VariableDeclaration","scope":4810,"src":"7269:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:23","nodeType":"VariableDeclaration","scope":4810,"src":"7280:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:23"},"returnParameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"result","nameLocation":"7332:6:23","nodeType":"VariableDeclaration","scope":4810,"src":"7324:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:23"},"scope":5904,"src":"7242:3683:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4846,"nodeType":"Block","src":"11164:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4826,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"11188:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4827,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"11191:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4828,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11194:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4825,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4810,4847],"referencedDeclaration":4810,"src":"11181:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4833,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"11242:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":4832,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"11225:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"11262:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4837,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"11265:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"11268:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4835,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4830,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"11209:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"11209:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4824,"id":4845,"nodeType":"Return","src":"11174:111:23"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"10931:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4847,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:23","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"x","nameLocation":"11078:1:23","nodeType":"VariableDeclaration","scope":4847,"src":"11070:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4815,"mutability":"mutable","name":"y","nameLocation":"11089:1:23","nodeType":"VariableDeclaration","scope":4847,"src":"11081:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4814,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4817,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:23","nodeType":"VariableDeclaration","scope":4847,"src":"11092:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:23","nodeType":"VariableDeclaration","scope":4847,"src":"11113:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":4819,"nodeType":"UserDefinedTypeName","pathNode":{"id":4818,"name":"Rounding","nameLocations":["11113:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"11113:8:23"},"referencedDeclaration":4295,"src":"11113:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:23"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4847,"src":"11155:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:23"},"scope":5904,"src":"11054:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4896,"nodeType":"Block","src":"11500:245:23","statements":[{"id":4895,"nodeType":"UncheckedBlock","src":"11510:229:23","statements":[{"assignments":[4860,4862],"declarations":[{"constant":false,"id":4860,"mutability":"mutable","name":"high","nameLocation":"11543:4:23","nodeType":"VariableDeclaration","scope":4895,"src":"11535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"low","nameLocation":"11557:3:23","nodeType":"VariableDeclaration","scope":4895,"src":"11549:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"initialValue":{"arguments":[{"id":4864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"11571:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4865,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4863,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"11564:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"11594:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4870,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"11607:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4881,"nodeType":"IfStatement","src":"11590:86:23","trueBody":{"id":4880,"nodeType":"Block","src":"11610:66:23","statements":[{"expression":{"arguments":[{"expression":{"id":4876,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"11640:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1806,"src":"11640:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4873,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"11628:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"11628:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4879,"nodeType":"ExpressionStatement","src":"11628:33:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"11697:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4884,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"11712:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"11719:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4890,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"11726:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4858,"id":4894,"nodeType":"Return","src":"11689:39:23"}]}]},"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"11298:111:23","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"x","nameLocation":"11438:1:23","nodeType":"VariableDeclaration","scope":4897,"src":"11430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4852,"mutability":"mutable","name":"y","nameLocation":"11449:1:23","nodeType":"VariableDeclaration","scope":4897,"src":"11441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4854,"mutability":"mutable","name":"n","nameLocation":"11458:1:23","nodeType":"VariableDeclaration","scope":4897,"src":"11452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4853,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:23"},"returnParameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"result","nameLocation":"11492:6:23","nodeType":"VariableDeclaration","scope":4897,"src":"11484:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:23"},"scope":5904,"src":"11414:331:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"11963:113:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4914,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4915,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"11993:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4912,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4897,4936],"referencedDeclaration":4897,"src":"11980:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4920,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"12031:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":4919,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"12014:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4923,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"12051:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4924,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"12054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4926,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"12062:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4922,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4917,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"11998:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"11998:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4911,"id":4934,"nodeType":"Return","src":"11973:96:23"}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"11751:109:23","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:23","nodeType":"FunctionDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"x","nameLocation":"11889:1:23","nodeType":"VariableDeclaration","scope":4936,"src":"11881:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4902,"mutability":"mutable","name":"y","nameLocation":"11900:1:23","nodeType":"VariableDeclaration","scope":4936,"src":"11892:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"n","nameLocation":"11909:1:23","nodeType":"VariableDeclaration","scope":4936,"src":"11903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4903,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:23","nodeType":"VariableDeclaration","scope":4936,"src":"11912:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":4906,"nodeType":"UserDefinedTypeName","pathNode":{"id":4905,"name":"Rounding","nameLocations":["11912:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"11912:8:23"},"referencedDeclaration":4295,"src":"11912:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:23"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"11954:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:23"},"scope":5904,"src":"11865:211:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"12710:1849:23","statements":[{"id":5031,"nodeType":"UncheckedBlock","src":"12720:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"12748:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"IfStatement","src":"12744:20:23","trueBody":{"expression":{"hexValue":"30","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4945,"id":4950,"nodeType":"Return","src":"12756:8:23"}},{"assignments":[4953],"declarations":[{"constant":false,"id":4953,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:23","nodeType":"VariableDeclaration","scope":5031,"src":"13235:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"13255:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4955,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"13259:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:23"},{"assignments":[4959],"declarations":[{"constant":false,"id":4959,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:23","nodeType":"VariableDeclaration","scope":5031,"src":"13274:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4961,"initialValue":{"id":4960,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"13288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:23"},{"assignments":[4963],"declarations":[{"constant":false,"id":4963,"mutability":"mutable","name":"x","nameLocation":"13432:1:23","nodeType":"VariableDeclaration","scope":5031,"src":"13425:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4962,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4965,"initialValue":{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:23"},{"assignments":[4967],"declarations":[{"constant":false,"id":4967,"mutability":"mutable","name":"y","nameLocation":"13458:1:23","nodeType":"VariableDeclaration","scope":5031,"src":"13451:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4966,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4969,"initialValue":{"hexValue":"31","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:23"},{"body":{"id":5006,"nodeType":"Block","src":"13501:882:23","statements":[{"assignments":[4974],"declarations":[{"constant":false,"id":4974,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:23","nodeType":"VariableDeclaration","scope":5006,"src":"13519:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4978,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"13538:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4976,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"13544:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:23"},{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4979,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"13573:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4980,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"13578:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4981,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4982,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"13678:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"13923:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"13929:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4985,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"13941:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4990,"nodeType":"ExpressionStatement","src":"13572:395:23"},{"expression":{"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"13987:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4992,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"13990:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4993,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4994,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"14072:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"14326:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"14330:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4999,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"14341:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4997,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:23","typeDescriptions":{}}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"ExpressionStatement","src":"13986:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"13485:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5007,"nodeType":"WhileStatement","src":"13478:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"14401:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"14397:22:23","trueBody":{"expression":{"hexValue":"30","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4945,"id":5012,"nodeType":"Return","src":"14411:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"14470:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"14477:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:23","subExpression":{"id":5021,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"14490:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:23","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5027,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"14502:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:23","typeDescriptions":{}}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5014,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"14462:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4945,"id":5030,"nodeType":"Return","src":"14455:50:23"}]}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"12082:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:23","nodeType":"FunctionDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"a","nameLocation":"12664:1:23","nodeType":"VariableDeclaration","scope":5033,"src":"12656:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4941,"mutability":"mutable","name":"n","nameLocation":"12675:1:23","nodeType":"VariableDeclaration","scope":5033,"src":"12667:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:23"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"12701:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:23"},"scope":5904,"src":"12640:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5053,"nodeType":"Block","src":"15159:82:23","statements":[{"id":5052,"nodeType":"UncheckedBlock","src":"15169:66:23","statements":[{"expression":{"arguments":[{"id":5045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"15212:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"15215:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5049,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"15222:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5043,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"15200:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5904_$","typeString":"type(library Math)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5090,"src":"15200:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5042,"id":5051,"nodeType":"Return","src":"15193:31:23"}]}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"14565:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5054,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:23","nodeType":"FunctionDefinition","parameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"a","nameLocation":"15113:1:23","nodeType":"VariableDeclaration","scope":5054,"src":"15105:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5038,"mutability":"mutable","name":"p","nameLocation":"15124:1:23","nodeType":"VariableDeclaration","scope":5054,"src":"15116:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:23"},"returnParameters":{"id":5042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5054,"src":"15150:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:23"},"scope":5904,"src":"15084:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"16011:174:23","statements":[{"assignments":[5067,5069],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"success","nameLocation":"16027:7:23","nodeType":"VariableDeclaration","scope":5089,"src":"16022:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5066,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"result","nameLocation":"16044:6:23","nodeType":"VariableDeclaration","scope":5089,"src":"16036:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5075,"initialValue":{"arguments":[{"id":5071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"16064:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5072,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"16067:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5073,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"16070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5114,5196],"referencedDeclaration":5114,"src":"16054:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:23"},{"condition":{"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:23","subExpression":{"id":5076,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"16087:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5086,"nodeType":"IfStatement","src":"16082:74:23","trueBody":{"id":5085,"nodeType":"Block","src":"16096:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5081,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"16122:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"16122:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5078,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"16110:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"16110:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5084,"nodeType":"ExpressionStatement","src":"16110:35:23"}]}},{"expression":{"id":5087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"16172:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5065,"id":5088,"nodeType":"Return","src":"16165:13:23"}]},"documentation":{"id":5055,"nodeType":"StructuredDocumentation","src":"15247:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:23","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"b","nameLocation":"15954:1:23","nodeType":"VariableDeclaration","scope":5090,"src":"15946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5059,"mutability":"mutable","name":"e","nameLocation":"15965:1:23","nodeType":"VariableDeclaration","scope":5090,"src":"15957:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5061,"mutability":"mutable","name":"m","nameLocation":"15976:1:23","nodeType":"VariableDeclaration","scope":5090,"src":"15968:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:23"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"16002:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:23"},"scope":5904,"src":"15930:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5113,"nodeType":"Block","src":"17039:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"17053:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"17049:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5103,"id":5110,"nodeType":"Return","src":"17061:17:23"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:23","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:23"},"nodeType":"YulFunctionCall","src":"17138:11:23"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:23"},"nodeType":"YulFunctionCall","src":"18050:17:23"},"nodeType":"YulExpressionStatement","src":"18050:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:23"},"nodeType":"YulFunctionCall","src":"18087:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:23"},"nodeType":"YulFunctionCall","src":"18080:28:23"},"nodeType":"YulExpressionStatement","src":"18080:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:23"},"nodeType":"YulFunctionCall","src":"18128:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:23"},"nodeType":"YulFunctionCall","src":"18121:28:23"},"nodeType":"YulExpressionStatement","src":"18121:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:23"},"nodeType":"YulFunctionCall","src":"18169:14:23"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:23"},"nodeType":"YulFunctionCall","src":"18162:25:23"},"nodeType":"YulExpressionStatement","src":"18162:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:23"},"nodeType":"YulFunctionCall","src":"18207:14:23"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:23"},"nodeType":"YulFunctionCall","src":"18200:25:23"},"nodeType":"YulExpressionStatement","src":"18200:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:23"},"nodeType":"YulFunctionCall","src":"18245:14:23"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:23"},"nodeType":"YulFunctionCall","src":"18238:25:23"},"nodeType":"YulExpressionStatement","src":"18238:25:23"},{"nodeType":"YulAssignment","src":"18425:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:23"},"nodeType":"YulFunctionCall","src":"18447:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:23","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:23","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:23","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:23"},"nodeType":"YulFunctionCall","src":"18436:46:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:23"}]},{"nodeType":"YulAssignment","src":"18495:21:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:23"},"nodeType":"YulFunctionCall","src":"18505:11:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5093,"isOffset":false,"isSlot":false,"src":"18185:1:23","valueSize":1},{"declaration":5095,"isOffset":false,"isSlot":false,"src":"18223:1:23","valueSize":1},{"declaration":5097,"isOffset":false,"isSlot":false,"src":"18261:1:23","valueSize":1},{"declaration":5102,"isOffset":false,"isSlot":false,"src":"18495:6:23","valueSize":1},{"declaration":5100,"isOffset":false,"isSlot":false,"src":"18425:7:23","valueSize":1}],"flags":["memory-safe"],"id":5112,"nodeType":"InlineAssembly","src":"17088:1438:23"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"16191:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5114,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:23","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"b","nameLocation":"16961:1:23","nodeType":"VariableDeclaration","scope":5114,"src":"16953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5095,"mutability":"mutable","name":"e","nameLocation":"16972:1:23","nodeType":"VariableDeclaration","scope":5114,"src":"16964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"m","nameLocation":"16983:1:23","nodeType":"VariableDeclaration","scope":5114,"src":"16975:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:23"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"success","nameLocation":"17014:7:23","nodeType":"VariableDeclaration","scope":5114,"src":"17009:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5099,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5102,"mutability":"mutable","name":"result","nameLocation":"17031:6:23","nodeType":"VariableDeclaration","scope":5114,"src":"17023:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:23"},"scope":5904,"src":"16934:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"18729:179:23","statements":[{"assignments":[5127,5129],"declarations":[{"constant":false,"id":5127,"mutability":"mutable","name":"success","nameLocation":"18745:7:23","nodeType":"VariableDeclaration","scope":5149,"src":"18740:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5126,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"result","nameLocation":"18767:6:23","nodeType":"VariableDeclaration","scope":5149,"src":"18754:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5128,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5135,"initialValue":{"arguments":[{"id":5131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"18787:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5132,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"18790:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5133,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"18793:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5130,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5114,5196],"referencedDeclaration":5196,"src":"18777:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:23"},{"condition":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:23","subExpression":{"id":5136,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"18810:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"nodeType":"IfStatement","src":"18805:74:23","trueBody":{"id":5145,"nodeType":"Block","src":"18819:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5141,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"18845:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1810,"src":"18845:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5138,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"18833:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1843_$","typeString":"type(library Panic)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"18833:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5144,"nodeType":"ExpressionStatement","src":"18833:35:23"}]}},{"expression":{"id":5147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"18895:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5125,"id":5148,"nodeType":"Return","src":"18888:13:23"}]},"documentation":{"id":5115,"nodeType":"StructuredDocumentation","src":"18538:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:23","nodeType":"FunctionDefinition","parameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"b","nameLocation":"18657:1:23","nodeType":"VariableDeclaration","scope":5150,"src":"18644:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5116,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5119,"mutability":"mutable","name":"e","nameLocation":"18673:1:23","nodeType":"VariableDeclaration","scope":5150,"src":"18660:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5118,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5121,"mutability":"mutable","name":"m","nameLocation":"18689:1:23","nodeType":"VariableDeclaration","scope":5150,"src":"18676:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5120,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:23"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"18715:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5123,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:23"},"scope":5904,"src":"18628:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5195,"nodeType":"Block","src":"19162:771:23","statements":[{"condition":{"arguments":[{"id":5165,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"19187:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5164,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"19176:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"19172:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5168,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5163,"id":5173,"nodeType":"Return","src":"19191:28:23"}},{"assignments":[5176],"declarations":[{"constant":false,"id":5176,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:23","nodeType":"VariableDeclaration","scope":5195,"src":"19230:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5179,"initialValue":{"expression":{"id":5177,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"19245:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:23","memberName":"length","nodeType":"MemberAccess","src":"19245:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:23"},{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"19335:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"19361:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:23","memberName":"length","nodeType":"MemberAccess","src":"19361:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5185,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"19371:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:23","memberName":"length","nodeType":"MemberAccess","src":"19371:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5187,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"19381:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"19387:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5189,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5190,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"19393:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5181,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5193,"nodeType":"ExpressionStatement","src":"19335:60:23"},{"AST":{"nodeType":"YulBlock","src":"19431:496:23","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:23","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:23"},"nodeType":"YulFunctionCall","src":"19460:17:23"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:23","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:23"},"nodeType":"YulFunctionCall","src":"19589:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:23","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:23"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:23"},"nodeType":"YulFunctionCall","src":"19611:13:23"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:23"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:23"},"nodeType":"YulFunctionCall","src":"19578:62:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:23"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:23"},"nodeType":"YulFunctionCall","src":"19789:20:23"},"nodeType":"YulExpressionStatement","src":"19789:20:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:23"},"nodeType":"YulFunctionCall","src":"19898:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:23"},"nodeType":"YulFunctionCall","src":"19885:32:23"},"nodeType":"YulExpressionStatement","src":"19885:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5176,"isOffset":false,"isSlot":false,"src":"19635:4:23","valueSize":1},{"declaration":5176,"isOffset":false,"isSlot":false,"src":"19804:4:23","valueSize":1},{"declaration":5176,"isOffset":false,"isSlot":false,"src":"19911:4:23","valueSize":1},{"declaration":5162,"isOffset":false,"isSlot":false,"src":"19464:6:23","valueSize":1},{"declaration":5162,"isOffset":false,"isSlot":false,"src":"19617:6:23","valueSize":1},{"declaration":5162,"isOffset":false,"isSlot":false,"src":"19796:6:23","valueSize":1},{"declaration":5160,"isOffset":false,"isSlot":false,"src":"19567:7:23","valueSize":1}],"flags":["memory-safe"],"id":5194,"nodeType":"InlineAssembly","src":"19406:521:23"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"18914:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5196,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:23","nodeType":"FunctionDefinition","parameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"b","nameLocation":"19048:1:23","nodeType":"VariableDeclaration","scope":5196,"src":"19035:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5152,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"e","nameLocation":"19072:1:23","nodeType":"VariableDeclaration","scope":5196,"src":"19059:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5154,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5157,"mutability":"mutable","name":"m","nameLocation":"19096:1:23","nodeType":"VariableDeclaration","scope":5196,"src":"19083:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5156,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:23"},"returnParameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5160,"mutability":"mutable","name":"success","nameLocation":"19132:7:23","nodeType":"VariableDeclaration","scope":5196,"src":"19127:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5159,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5162,"mutability":"mutable","name":"result","nameLocation":"19154:6:23","nodeType":"VariableDeclaration","scope":5196,"src":"19141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5161,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:23"},"scope":5904,"src":"19007:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"20088:176:23","statements":[{"body":{"id":5224,"nodeType":"Block","src":"20145:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5215,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"20163:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5217,"indexExpression":{"id":5216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"20173:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5223,"nodeType":"IfStatement","src":"20159:68:23","trueBody":{"id":5222,"nodeType":"Block","src":"20182:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5203,"id":5221,"nodeType":"Return","src":"20200:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"20118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5209,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"20122:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:23","memberName":"length","nodeType":"MemberAccess","src":"20122:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"initializationExpression":{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"i","nameLocation":"20111:1:23","nodeType":"VariableDeclaration","scope":5225,"src":"20103:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"hexValue":"30","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:23"},"loopExpression":{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:23","subExpression":{"id":5212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"20142:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"20140:3:23"},"nodeType":"ForStatement","src":"20098:139:23"},{"expression":{"hexValue":"74727565","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5203,"id":5227,"nodeType":"Return","src":"20246:11:23"}]},"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"19939:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:23","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:23","nodeType":"VariableDeclaration","scope":5229,"src":"20036:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5198,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:23"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"20082:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5201,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:23"},"scope":5904,"src":"20016:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5447,"nodeType":"Block","src":"20624:5124:23","statements":[{"id":5446,"nodeType":"UncheckedBlock","src":"20634:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"20728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"20724:53:23","trueBody":{"id":5242,"nodeType":"Block","src":"20736:41:23","statements":[{"expression":{"id":5240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"20761:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5236,"id":5241,"nodeType":"Return","src":"20754:8:23"}]}},{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"aa","nameLocation":"21712:2:23","nodeType":"VariableDeclaration","scope":5446,"src":"21704:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5247,"initialValue":{"id":5246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"21717:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:23"},{"assignments":[5249],"declarations":[{"constant":false,"id":5249,"mutability":"mutable","name":"xn","nameLocation":"21740:2:23","nodeType":"VariableDeclaration","scope":5446,"src":"21732:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5251,"initialValue":{"hexValue":"31","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21765:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5267,"nodeType":"IfStatement","src":"21761:92:23","trueBody":{"id":5266,"nodeType":"Block","src":"21783:70:23","statements":[{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5258,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21801:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"21801:10:23"},{"expression":{"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"21829:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5265,"nodeType":"ExpressionStatement","src":"21829:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21870:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5283,"nodeType":"IfStatement","src":"21866:90:23","trueBody":{"id":5282,"nodeType":"Block","src":"21887:69:23","statements":[{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21905:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"21905:9:23"},{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"21932:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5281,"nodeType":"ExpressionStatement","src":"21932:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21973:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"21969:90:23","trueBody":{"id":5298,"nodeType":"Block","src":"21990:69:23","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5290,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22008:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"22008:9:23"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22035:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5297,"nodeType":"ExpressionStatement","src":"22035:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22076:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5315,"nodeType":"IfStatement","src":"22072:89:23","trueBody":{"id":5314,"nodeType":"Block","src":"22093:68:23","statements":[{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5306,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22111:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"22111:9:23"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22138:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"22138:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22178:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5331,"nodeType":"IfStatement","src":"22174:87:23","trueBody":{"id":5330,"nodeType":"Block","src":"22194:67:23","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5322,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22212:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"nodeType":"ExpressionStatement","src":"22212:8:23"},{"expression":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22238:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ExpressionStatement","src":"22238:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"IfStatement","src":"22274:87:23","trueBody":{"id":5346,"nodeType":"Block","src":"22294:67:23","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22312:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"22312:8:23"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22338:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"22338:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5359,"nodeType":"IfStatement","src":"22374:61:23","trueBody":{"id":5358,"nodeType":"Block","src":"22394:41:23","statements":[{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22412:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"22412:8:23"}]}},{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22855:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5362,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"22865:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5368,"nodeType":"ExpressionStatement","src":"22855:18:23"},{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24760:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24766:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"24771:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24775:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5379,"nodeType":"ExpressionStatement","src":"24760:23:23"},{"expression":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24869:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24875:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"24880:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5383,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24884:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5390,"nodeType":"ExpressionStatement","src":"24869:23:23"},{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24980:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24986:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"24991:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5394,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"24995:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"24980:23:23"},{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25089:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25095:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"25100:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5405,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25104:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"25089:23:23"},{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25199:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25205:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"25210:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5416,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25214:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5423,"nodeType":"ExpressionStatement","src":"25199:23:23"},{"expression":{"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25309:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25315:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"25320:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5427,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25324:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5434,"nodeType":"ExpressionStatement","src":"25309:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25698:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5438,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25719:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"25724:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5440,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"25703:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"25703:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5236,"id":5445,"nodeType":"Return","src":"25691:40:23"}]}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"20270:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5448,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:23","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"a","nameLocation":"20589:1:23","nodeType":"VariableDeclaration","scope":5448,"src":"20581:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:23"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5448,"src":"20615:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:23"},"scope":5904,"src":"20567:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5481,"nodeType":"Block","src":"25921:171:23","statements":[{"id":5480,"nodeType":"UncheckedBlock","src":"25931:155:23","statements":[{"assignments":[5460],"declarations":[{"constant":false,"id":5460,"mutability":"mutable","name":"result","nameLocation":"25963:6:23","nodeType":"VariableDeclaration","scope":5480,"src":"25955:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5459,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5464,"initialValue":{"arguments":[{"id":5462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"25977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5448,5482],"referencedDeclaration":5448,"src":"25972:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"26000:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5469,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"26042:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":5468,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"26025:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"26055:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"26064:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5474,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26073:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5466,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26009:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26009:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5458,"id":5479,"nodeType":"Return","src":"25993:82:23"}]}]},"documentation":{"id":5449,"nodeType":"StructuredDocumentation","src":"25754:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5482,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:23","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"a","nameLocation":"25867:1:23","nodeType":"VariableDeclaration","scope":5482,"src":"25859:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5450,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:23","nodeType":"VariableDeclaration","scope":5482,"src":"25870:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":5453,"nodeType":"UserDefinedTypeName","pathNode":{"id":5452,"name":"Rounding","nameLocations":["25870:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"25870:8:23"},"referencedDeclaration":4295,"src":"25870:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:23"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5482,"src":"25912:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:23"},"scope":5904,"src":"25845:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"26281:2334:23","statements":[{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5490,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26363:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"26383:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26367:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26367:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5500,"nodeType":"ExpressionStatement","src":"26363:64:23"},{"expression":{"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5501,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26503:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"26525:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26530:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5502,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26508:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26508:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5514,"nodeType":"ExpressionStatement","src":"26503:56:23"},{"expression":{"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26634:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"26656:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5519,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26661:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5516,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26639:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26639:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5528,"nodeType":"ExpressionStatement","src":"26634:48:23"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26757:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"26779:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5533,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26784:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5530,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26762:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26762:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"26757:44:23"},{"expression":{"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26874:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"26896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5547,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26901:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5544,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26879:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26879:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5556,"nodeType":"ExpressionStatement","src":"26874:42:23"},{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5557,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"26988:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"27010:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5561,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"27015:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26993:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"26993:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5570,"nodeType":"ExpressionStatement","src":"26988:41:23"},{"AST":{"nodeType":"YulBlock","src":"28490:119:23","statements":[{"nodeType":"YulAssignment","src":"28504:95:23","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:23"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:23"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:23"},"nodeType":"YulFunctionCall","src":"28520:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:23","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:23"},"nodeType":"YulFunctionCall","src":"28515:83:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:23"},"nodeType":"YulFunctionCall","src":"28509:90:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5488,"isOffset":false,"isSlot":false,"src":"28504:1:23","valueSize":1},{"declaration":5488,"isOffset":false,"isSlot":false,"src":"28512:1:23","valueSize":1},{"declaration":5488,"isOffset":false,"isSlot":false,"src":"28524:1:23","valueSize":1},{"declaration":5485,"isOffset":false,"isSlot":false,"src":"28527:1:23","valueSize":1}],"flags":["memory-safe"],"id":5571,"nodeType":"InlineAssembly","src":"28465:144:23"}]},"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"26098:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5573,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:23","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"x","nameLocation":"26244:1:23","nodeType":"VariableDeclaration","scope":5573,"src":"26236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:23"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"r","nameLocation":"26278:1:23","nodeType":"VariableDeclaration","scope":5573,"src":"26270:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:23"},"scope":5904,"src":"26222:2393:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5606,"nodeType":"Block","src":"28848:175:23","statements":[{"id":5605,"nodeType":"UncheckedBlock","src":"28858:159:23","statements":[{"assignments":[5585],"declarations":[{"constant":false,"id":5585,"mutability":"mutable","name":"result","nameLocation":"28890:6:23","nodeType":"VariableDeclaration","scope":5605,"src":"28882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5589,"initialValue":{"arguments":[{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"28904:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5586,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5573,5607],"referencedDeclaration":5573,"src":"28899:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"28931:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5594,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"28973:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":5593,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"28956:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"28991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"29000:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5591,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"28940:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"28940:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5583,"id":5604,"nodeType":"Return","src":"28924:82:23"}]}]},"documentation":{"id":5574,"nodeType":"StructuredDocumentation","src":"28621:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5607,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:23","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"value","nameLocation":"28790:5:23","nodeType":"VariableDeclaration","scope":5607,"src":"28782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5579,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:23","nodeType":"VariableDeclaration","scope":5607,"src":"28797:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":5578,"nodeType":"UserDefinedTypeName","pathNode":{"id":5577,"name":"Rounding","nameLocations":["28797:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"28797:8:23"},"referencedDeclaration":4295,"src":"28797:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:23"},"returnParameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5607,"src":"28839:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:23"},"scope":5904,"src":"28768:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"29216:854:23","statements":[{"assignments":[5616],"declarations":[{"constant":false,"id":5616,"mutability":"mutable","name":"result","nameLocation":"29234:6:23","nodeType":"VariableDeclaration","scope":5735,"src":"29226:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5618,"initialValue":{"hexValue":"30","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:23"},{"id":5732,"nodeType":"UncheckedBlock","src":"29254:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29282:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5635,"nodeType":"IfStatement","src":"29278:103:23","trueBody":{"id":5634,"nodeType":"Block","src":"29301:80:23","statements":[{"expression":{"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29319:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5629,"nodeType":"ExpressionStatement","src":"29319:17:23"},{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5633,"nodeType":"ExpressionStatement","src":"29354:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"29394:103:23","trueBody":{"id":5651,"nodeType":"Block","src":"29417:80:23","statements":[{"expression":{"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29435:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5646,"nodeType":"ExpressionStatement","src":"29435:17:23"},{"expression":{"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29470:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5650,"nodeType":"ExpressionStatement","src":"29470:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29514:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5669,"nodeType":"IfStatement","src":"29510:103:23","trueBody":{"id":5668,"nodeType":"Block","src":"29533:80:23","statements":[{"expression":{"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5663,"nodeType":"ExpressionStatement","src":"29551:17:23"},{"expression":{"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29586:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5667,"nodeType":"ExpressionStatement","src":"29586:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29630:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5686,"nodeType":"IfStatement","src":"29626:100:23","trueBody":{"id":5685,"nodeType":"Block","src":"29648:78:23","statements":[{"expression":{"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5680,"nodeType":"ExpressionStatement","src":"29666:16:23"},{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29700:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5684,"nodeType":"ExpressionStatement","src":"29700:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5703,"nodeType":"IfStatement","src":"29739:100:23","trueBody":{"id":5702,"nodeType":"Block","src":"29761:78:23","statements":[{"expression":{"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29779:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5697,"nodeType":"ExpressionStatement","src":"29779:16:23"},{"expression":{"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5698,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29813:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5701,"nodeType":"ExpressionStatement","src":"29813:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29856:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5720,"nodeType":"IfStatement","src":"29852:100:23","trueBody":{"id":5719,"nodeType":"Block","src":"29874:78:23","statements":[{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29892:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5714,"nodeType":"ExpressionStatement","src":"29892:16:23"},{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"29926:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5718,"nodeType":"ExpressionStatement","src":"29926:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"29969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5731,"nodeType":"IfStatement","src":"29965:66:23","trueBody":{"id":5730,"nodeType":"Block","src":"29987:44:23","statements":[{"expression":{"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"30005:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5729,"nodeType":"ExpressionStatement","src":"30005:11:23"}]}}]},{"expression":{"id":5733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"30057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5614,"id":5734,"nodeType":"Return","src":"30050:13:23"}]},"documentation":{"id":5608,"nodeType":"StructuredDocumentation","src":"29029:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:23","nodeType":"FunctionDefinition","parameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"value","nameLocation":"29177:5:23","nodeType":"VariableDeclaration","scope":5736,"src":"29169:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:23"},"returnParameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"29207:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:23"},"scope":5904,"src":"29154:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5769,"nodeType":"Block","src":"30305:177:23","statements":[{"id":5768,"nodeType":"UncheckedBlock","src":"30315:161:23","statements":[{"assignments":[5748],"declarations":[{"constant":false,"id":5748,"mutability":"mutable","name":"result","nameLocation":"30347:6:23","nodeType":"VariableDeclaration","scope":5768,"src":"30339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5752,"initialValue":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5736,5770],"referencedDeclaration":5736,"src":"30356:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"30389:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5757,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"30431:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":5756,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"30414:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"30450:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"30459:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5754,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"30398:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"30398:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5746,"id":5767,"nodeType":"Return","src":"30382:83:23"}]}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"30076:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5770,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:23","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"value","nameLocation":"30247:5:23","nodeType":"VariableDeclaration","scope":5770,"src":"30239:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5742,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:23","nodeType":"VariableDeclaration","scope":5770,"src":"30254:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":5741,"nodeType":"UserDefinedTypeName","pathNode":{"id":5740,"name":"Rounding","nameLocations":["30254:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"30254:8:23"},"referencedDeclaration":4295,"src":"30254:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:23"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5770,"src":"30296:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:23"},"scope":5904,"src":"30224:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"30800:675:23","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5778,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"30882:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5781,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"30902:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"30886:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"30886:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"30882:64:23"},{"expression":{"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31044:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5793,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31049:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5790,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"31027:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"31027:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5802,"nodeType":"ExpressionStatement","src":"31022:56:23"},{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5803,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31153:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31175:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5807,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31180:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"31158:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"31158:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5816,"nodeType":"ExpressionStatement","src":"31153:48:23"},{"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31276:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5820,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31298:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5821,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31303:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5818,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"31281:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"31281:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5830,"nodeType":"ExpressionStatement","src":"31276:44:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31426:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5837,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"31453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5838,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31458:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"31436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"31436:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5777,"id":5845,"nodeType":"Return","src":"31418:50:23"}]},"documentation":{"id":5771,"nodeType":"StructuredDocumentation","src":"30488:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:23","nodeType":"FunctionDefinition","parameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5773,"mutability":"mutable","name":"x","nameLocation":"30763:1:23","nodeType":"VariableDeclaration","scope":5847,"src":"30755:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:23"},"returnParameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"r","nameLocation":"30797:1:23","nodeType":"VariableDeclaration","scope":5847,"src":"30789:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:23"},"scope":5904,"src":"30739:736:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5883,"nodeType":"Block","src":"31712:184:23","statements":[{"id":5882,"nodeType":"UncheckedBlock","src":"31722:168:23","statements":[{"assignments":[5859],"declarations":[{"constant":false,"id":5859,"mutability":"mutable","name":"result","nameLocation":"31754:6:23","nodeType":"VariableDeclaration","scope":5882,"src":"31746:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5863,"initialValue":{"arguments":[{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"31770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5860,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5847,5884],"referencedDeclaration":5847,"src":"31763:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"31797:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5868,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"31839:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":5867,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"31822:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4295_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"31873:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5865,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"31806:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"31806:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5857,"id":5881,"nodeType":"Return","src":"31790:89:23"}]}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"31481:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5884,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:23","nodeType":"FunctionDefinition","parameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"31654:5:23","nodeType":"VariableDeclaration","scope":5884,"src":"31646:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5853,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:23","nodeType":"VariableDeclaration","scope":5884,"src":"31661:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":5852,"nodeType":"UserDefinedTypeName","pathNode":{"id":5851,"name":"Rounding","nameLocations":["31661:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"31661:8:23"},"referencedDeclaration":4295,"src":"31661:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:23"},"returnParameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5884,"src":"31703:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:23"},"scope":5904,"src":"31630:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"32094:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5895,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"32117:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5893,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:23","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5892,"id":5901,"nodeType":"Return","src":"32104:31:23"}]},"documentation":{"id":5885,"nodeType":"StructuredDocumentation","src":"31902:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:23","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:23","nodeType":"VariableDeclaration","scope":5903,"src":"32046:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"},"typeName":{"id":5887,"nodeType":"UserDefinedTypeName","pathNode":{"id":5886,"name":"Rounding","nameLocations":["32046:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4295,"src":"32046:8:23"},"referencedDeclaration":4295,"src":"32046:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4295","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:23"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"32088:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5890,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:23"},"scope":5904,"src":"32020:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5905,"src":"281:31863:23","usedErrors":[],"usedEvents":[]}],"src":"103:32042:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7669]},"id":7670,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5906,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5907,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7669,"linearizedBaseContracts":[7669],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5914,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":5914,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5909,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":5914,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5919,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":5919,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5916,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5926,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":5926,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5921,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":5926,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5923,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5931,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":5931,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":5958,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5941,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":5951,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5950,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5953,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":5959,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5936,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":7669,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5969,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5980,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":5979,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5974,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5978,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5981,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5966,"id":5985,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":5987,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5987,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5964,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":7669,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6014,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5997,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":6007,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6002,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6009,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5994,"id":6013,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6015,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":6015,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6015,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5992,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":7669,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6025,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6036,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":6035,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6037,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6022,"id":6041,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":6016,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":6043,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6043,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6020,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":7669,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6053,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6064,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":6063,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6062,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6065,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6050,"id":6069,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":6071,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6071,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6048,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":7669,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6081,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6080,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":6091,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6086,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6093,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6078,"id":6097,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":6099,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6099,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6076,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":7669,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6109,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":6119,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6114,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6118,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6121,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6106,"id":6125,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":6127,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6127,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6104,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":7669,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6154,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6137,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":6147,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6149,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6134,"id":6153,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6155,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":6155,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6155,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6132,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":7669,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6165,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6164,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6176,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":6175,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6170,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6177,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6162,"id":6181,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":6156,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":6183,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6183,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6160,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":7669,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6193,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":6203,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6202,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6205,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6190,"id":6209,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":6211,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6211,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6188,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":7669,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6238,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6221,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":6231,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6230,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6233,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6218,"id":6237,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":6239,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6239,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6216,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":7669,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6266,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6249,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6260,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":6259,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6254,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6261,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6246,"id":6265,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":6240,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":6267,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6241,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6267,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6244,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":7669,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6294,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6277,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6288,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":6287,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6282,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6286,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6289,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6274,"id":6293,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":6268,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6295,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":6295,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6269,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6295,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6272,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":7669,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6305,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6304,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6316,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":6315,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6310,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6317,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6302,"id":6321,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":6296,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":6323,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6323,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6300,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":7669,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6350,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6333,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":6343,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6345,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6330,"id":6349,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6351,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":6351,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6351,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6328,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":7669,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6378,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6361,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6372,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":6371,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6366,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6370,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6373,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6358,"id":6377,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":6352,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6379,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":6379,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6379,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6356,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":7669,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6389,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6388,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6400,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":6399,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6394,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6398,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6401,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6386,"id":6405,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":6380,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":6407,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6407,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6384,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":7669,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6417,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6416,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6428,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":6427,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6422,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6426,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6429,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6414,"id":6433,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":6435,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6435,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6412,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":7669,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6462,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6445,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6456,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":6455,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6450,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6454,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6457,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6442,"id":6461,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6463,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":6463,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6463,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6440,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":7669,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6490,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6473,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":6483,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6478,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6482,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6485,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6470,"id":6489,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":6464,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":6491,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":6470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6491,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6468,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":7669,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6518,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6501,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6500,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6512,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":6511,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6506,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6510,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6513,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6498,"id":6517,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6519,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":6519,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6519,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6496,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":7669,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6546,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6529,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6528,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6540,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":6539,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6534,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6538,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6541,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6526,"id":6545,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6547,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":6547,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":6526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6547,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6524,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":7669,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6574,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6557,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6568,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":6567,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6562,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6566,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6569,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6554,"id":6573,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":6548,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6575,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":6575,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6575,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6552,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":7669,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6602,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6585,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6596,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":6595,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6590,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6594,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6597,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6582,"id":6601,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":6576,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6603,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":6603,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6577,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6603,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6580,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":7669,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6630,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6613,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6624,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":6623,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6618,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6625,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6610,"id":6629,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":6604,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6631,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":6631,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6631,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6608,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":7669,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6658,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6641,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6652,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":6651,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6646,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6650,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6653,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6638,"id":6657,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":6632,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6659,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":6659,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6659,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6636,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":7669,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6686,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6669,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6668,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6680,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":6679,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6674,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6678,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6681,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6666,"id":6685,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":6660,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":6687,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6687,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6664,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":7669,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6714,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6697,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6708,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":6707,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6706,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6709,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6694,"id":6713,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":6688,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6715,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":6715,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6715,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6692,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":7669,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6742,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6725,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6736,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":6735,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6734,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6737,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6722,"id":6741,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":6716,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":6743,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6717,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6743,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6720,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":7669,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6770,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6753,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6764,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":6763,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6762,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6765,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6750,"id":6769,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":6744,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6771,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6746,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":6771,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6745,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6771,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6748,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":7669,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6798,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6781,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":6791,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6790,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6793,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6778,"id":6797,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":6772,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":6799,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6799,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6776,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":7669,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6821,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6815,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":6814,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6813,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6806,"id":6820,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6822,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":6822,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6822,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":7669,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6847,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6830,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6831,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6836,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":6845,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6840,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":6823,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6848,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":6848,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6824,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":6848,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6827,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":7669,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6856,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6857,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6862,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":6871,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6866,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6870,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":6849,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":6874,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6850,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":6874,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6853,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":7669,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6899,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6883,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6888,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6898,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":6897,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6892,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6896,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6900,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":6900,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6876,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":6900,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6879,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":7669,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6925,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6909,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6914,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":6923,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6918,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":6901,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":6926,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6902,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":6926,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6905,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":7669,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6951,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6935,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6940,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":6949,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6944,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6948,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":6927,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":6952,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6928,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":6952,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6931,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":7669,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6961,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6966,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6976,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":6975,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6970,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6974,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":6978,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":6978,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6957,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":7669,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7003,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6987,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6992,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7002,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":7001,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6996,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":7004,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6980,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":7004,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6983,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":7669,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7029,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7013,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7018,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7028,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":7027,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":7005,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":7030,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7006,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":7030,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7009,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":7669,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7055,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7039,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7044,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7054,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":7053,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7048,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":7056,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7032,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":7056,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7035,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":7669,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7065,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7070,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7080,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":7079,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7078,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":7082,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7058,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":7082,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7061,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":7669,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7107,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7091,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7096,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7106,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":7105,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7104,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":7108,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7084,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":7108,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7087,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":7669,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7133,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7117,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7122,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7132,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":7131,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7130,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":7109,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":7134,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7110,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":7134,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7113,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":7669,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7159,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7143,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7148,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7158,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":7157,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7156,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":7160,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7136,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":7160,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7139,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":7669,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7185,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7169,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7174,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7184,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":7183,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7178,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7182,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":7161,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7186,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7163,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":7186,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7162,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":7186,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7165,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":7669,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7211,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7195,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7200,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":7209,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7204,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7208,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":7187,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":7212,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7188,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":7212,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7191,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":7669,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7221,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7226,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7236,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":7235,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7230,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7234,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":7213,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":7238,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7214,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":7238,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7217,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":7669,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7263,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7247,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7252,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7262,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":7261,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7260,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":7264,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7240,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":7264,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7243,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":7669,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7289,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7273,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7278,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7288,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":7287,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7286,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":7265,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":7290,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7266,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7270,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":7290,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7269,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":7669,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7315,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7299,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7304,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7314,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":7313,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7312,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7293,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":7316,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7292,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":7316,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7295,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":7669,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7341,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7325,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7330,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7340,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":7339,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7338,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":7342,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7318,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":7342,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7321,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":7669,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7367,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7351,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7356,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7366,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":7365,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7364,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":7368,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7344,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":7349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":7368,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7347,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":7669,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7393,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7377,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7382,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7392,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":7391,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7390,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":7369,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":7394,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7370,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":7375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":7394,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7373,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":7669,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7419,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7403,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7408,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7418,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":7417,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7416,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":7395,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":7420,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7396,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":7420,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7399,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":7669,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7445,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7429,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7434,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7444,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":7443,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7442,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":7421,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":7424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7423,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":7446,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7422,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":7427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7426,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":7446,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7425,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":7669,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7471,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7455,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7460,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7470,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":7469,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7468,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":7447,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":7450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7449,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":7472,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7448,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":7453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":7472,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7451,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":7669,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7497,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7481,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7486,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":7495,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7494,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":7473,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7475,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":7498,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7474,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":7479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7478,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":7498,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7477,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":7669,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7523,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7507,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7512,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7522,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":7521,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7520,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":7499,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":7524,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7500,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":7505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":7524,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7503,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":7669,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7549,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7533,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7538,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7548,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":7547,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7546,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":7525,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":7528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":7550,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7526,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":7531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7530,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":7550,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7529,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":7669,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7575,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7559,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7564,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7556,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7574,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":7573,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7572,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":7551,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":7554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7553,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":7576,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7552,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":7576,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7555,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":7669,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7601,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7585,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7590,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7600,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":7599,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7598,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":7577,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":7602,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7578,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":7602,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7581,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":7669,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7627,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7611,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7616,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7626,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":7625,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7624,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":7603,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":7628,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7604,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7608,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":7628,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7607,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":7669,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7657,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7640,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7637,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7651,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":7650,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":7647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7646,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7649,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":7654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7652,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7635,"id":7656,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":7629,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7658,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":7658,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7658,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7633,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":7669,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:24","statements":[{"nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:24"},"nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:24"},"nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7661,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":7664,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":7666,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":7659,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":7662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":7668,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7660,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":7665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7664,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":7668,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7663,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":7669,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7670,"src":"769:34173:24","usedErrors":[5914,5919,5926,5931],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7669],"SignedMath":[7813]},"id":7814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7671,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7814,"sourceUnit":7670,"src":"135:40:25","symbolAliases":[{"foreign":{"id":7672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7674,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7813,"linearizedBaseContracts":[7813],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":7703,"nodeType":"Block","src":"746:215:25","statements":[{"id":7702,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7688,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7695,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7693,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7669_$","typeString":"type(library SafeCast)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7668,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7691,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7685,"id":7701,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":7675,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7704,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":7682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":7704,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7676,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7679,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":7704,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7678,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7681,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":7704,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7680,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7704,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7683,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":7813,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7722,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7714,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7713,"id":7721,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":7705,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":7723,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7707,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":7723,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7706,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7709,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":7723,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7708,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7723,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7711,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":7813,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7741,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7733,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7732,"id":7740,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":7742,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":7742,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7725,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7728,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":7742,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7727,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":7732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7742,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7730,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":7813,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7785,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[7753],"declarations":[{"constant":false,"id":7753,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":7785,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7752,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7766,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7772,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7778,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7751,"id":7784,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":7743,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7786,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":7786,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7744,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7747,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":7786,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7746,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7786,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7749,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":7813,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7811,"nodeType":"Block","src":"1843:767:25","statements":[{"id":7810,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[7795],"declarations":[{"constant":false,"id":7795,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":7810,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7794,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7799,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7796,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7802,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7803,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7806,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7793,"id":7809,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":7787,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7812,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":7812,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7788,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":7793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7812,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":7813,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7814,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"contracts/PerformanceAgreementNFT.sol":{"ast":{"absolutePath":"contracts/PerformanceAgreementNFT.sol","exportedSymbols":{"Base64":[1761],"Context":[1791],"ECDSA":[3934],"EIP712":[4161],"ERC721":[1298],"ERC721URIStorage":[1561],"IERC165":[4283],"IERC4906":[175],"IERC5267":[200],"IERC721Metadata":[1589],"Math":[5904],"MessageHashUtils":[4247],"Ownable":[147],"PerformanceAgreementNFT":[8702],"SafeCast":[7669],"ShortString":[1849],"ShortStrings":[2060],"SignedMath":[7813],"Strings":[3586]},"id":8703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7815,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":1562,"src":"58:78:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":148,"src":"137:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":7818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":4162,"src":"190:63:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":3935,"src":"254:62:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":3587,"src":"317:51:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":7821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8703,"sourceUnit":1762,"src":"369:50:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7823,"name":"ERC721URIStorage","nameLocations":["673:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":1561,"src":"673:16:26"},"id":7824,"nodeType":"InheritanceSpecifier","src":"673:16:26"},{"baseName":{"id":7825,"name":"Ownable","nameLocations":["691:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"691:7:26"},"id":7826,"nodeType":"InheritanceSpecifier","src":"691:7:26"},{"baseName":{"id":7827,"name":"EIP712","nameLocations":["700:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"700:6:26"},"id":7828,"nodeType":"InheritanceSpecifier","src":"700:6:26"}],"canonicalName":"PerformanceAgreementNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":7822,"nodeType":"StructuredDocumentation","src":"421:216:26","text":"@title PerformanceAgreementNFT\n @notice ERC721 token representing a performance agreement between an artist and a venue.\n @dev Each token stores agreement metadata on-chain and can produce a JSON tokenURI."},"fullyImplemented":true,"id":8702,"linearizedBaseContracts":[8702,4161,200,147,1561,1298,294,1589,175,1415,4271,4283,1791],"name":"PerformanceAgreementNFT","nameLocation":"646:23:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7831,"libraryName":{"id":7829,"name":"Strings","nameLocations":["719:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":3586,"src":"719:7:26"},"nodeType":"UsingForDirective","src":"713:26:26","typeName":{"id":7830,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"PerformanceAgreementNFT.Agreement","id":7855,"members":[{"constant":false,"id":7833,"mutability":"mutable","name":"venueName","nameLocation":"779:9:26","nodeType":"VariableDeclaration","scope":7855,"src":"772:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7832,"name":"string","nodeType":"ElementaryTypeName","src":"772:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7835,"mutability":"mutable","name":"venueAddress","nameLocation":"805:12:26","nodeType":"VariableDeclaration","scope":7855,"src":"798:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7834,"name":"string","nodeType":"ElementaryTypeName","src":"798:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7837,"mutability":"mutable","name":"startTime","nameLocation":"854:9:26","nodeType":"VariableDeclaration","scope":7855,"src":"847:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7836,"name":"uint64","nodeType":"ElementaryTypeName","src":"847:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7839,"mutability":"mutable","name":"durationMinutes","nameLocation":"913:15:26","nodeType":"VariableDeclaration","scope":7855,"src":"906:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7838,"name":"uint32","nodeType":"ElementaryTypeName","src":"906:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7841,"mutability":"mutable","name":"artistSocialHandle","nameLocation":"968:18:26","nodeType":"VariableDeclaration","scope":7855,"src":"961:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7840,"name":"string","nodeType":"ElementaryTypeName","src":"961:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7843,"mutability":"mutable","name":"venueSocialHandle","nameLocation":"1027:17:26","nodeType":"VariableDeclaration","scope":7855,"src":"1020:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7842,"name":"string","nodeType":"ElementaryTypeName","src":"1020:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7845,"mutability":"mutable","name":"artistWallet","nameLocation":"1085:12:26","nodeType":"VariableDeclaration","scope":7855,"src":"1077:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7844,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7847,"mutability":"mutable","name":"venueWallet","nameLocation":"1115:11:26","nodeType":"VariableDeclaration","scope":7855,"src":"1107:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7846,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7849,"mutability":"mutable","name":"paymentAmountUsdCents","nameLocation":"1144:21:26","nodeType":"VariableDeclaration","scope":7855,"src":"1136:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7852,"mutability":"mutable","name":"status","nameLocation":"1213:6:26","nodeType":"VariableDeclaration","scope":7855,"src":"1206:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":7851,"nodeType":"UserDefinedTypeName","pathNode":{"id":7850,"name":"Status","nameLocations":["1206:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"1206:6:26"},"referencedDeclaration":7860,"src":"1206:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"},{"constant":false,"id":7854,"mutability":"mutable","name":"paymentRecorded","nameLocation":"1254:15:26","nodeType":"VariableDeclaration","scope":7855,"src":"1249:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7853,"name":"bool","nodeType":"ElementaryTypeName","src":"1249:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Agreement","nameLocation":"752:9:26","nodeType":"StructDefinition","scope":8702,"src":"745:565:26","visibility":"public"},{"canonicalName":"PerformanceAgreementNFT.Status","id":7860,"members":[{"id":7856,"name":"Scheduled","nameLocation":"1330:9:26","nodeType":"EnumValue","src":"1330:9:26"},{"id":7857,"name":"Completed","nameLocation":"1341:9:26","nodeType":"EnumValue","src":"1341:9:26"},{"id":7858,"name":"Disputed","nameLocation":"1352:8:26","nodeType":"EnumValue","src":"1352:8:26"},{"id":7859,"name":"Resolved","nameLocation":"1362:8:26","nodeType":"EnumValue","src":"1362:8:26"}],"name":"Status","nameLocation":"1321:6:26","nodeType":"EnumDefinition","src":"1316:56:26"},{"canonicalName":"PerformanceAgreementNFT.AgreementInput","id":7879,"members":[{"constant":false,"id":7862,"mutability":"mutable","name":"venueName","nameLocation":"1417:9:26","nodeType":"VariableDeclaration","scope":7879,"src":"1410:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7861,"name":"string","nodeType":"ElementaryTypeName","src":"1410:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7864,"mutability":"mutable","name":"venueAddress","nameLocation":"1443:12:26","nodeType":"VariableDeclaration","scope":7879,"src":"1436:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7863,"name":"string","nodeType":"ElementaryTypeName","src":"1436:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7866,"mutability":"mutable","name":"startTime","nameLocation":"1472:9:26","nodeType":"VariableDeclaration","scope":7879,"src":"1465:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7865,"name":"uint64","nodeType":"ElementaryTypeName","src":"1465:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7868,"mutability":"mutable","name":"durationMinutes","nameLocation":"1498:15:26","nodeType":"VariableDeclaration","scope":7879,"src":"1491:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7867,"name":"uint32","nodeType":"ElementaryTypeName","src":"1491:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7870,"mutability":"mutable","name":"artistSocialHandle","nameLocation":"1530:18:26","nodeType":"VariableDeclaration","scope":7879,"src":"1523:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7869,"name":"string","nodeType":"ElementaryTypeName","src":"1523:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7872,"mutability":"mutable","name":"venueSocialHandle","nameLocation":"1565:17:26","nodeType":"VariableDeclaration","scope":7879,"src":"1558:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7871,"name":"string","nodeType":"ElementaryTypeName","src":"1558:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7874,"mutability":"mutable","name":"artistWallet","nameLocation":"1600:12:26","nodeType":"VariableDeclaration","scope":7879,"src":"1592:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7873,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7876,"mutability":"mutable","name":"venueWallet","nameLocation":"1630:11:26","nodeType":"VariableDeclaration","scope":7879,"src":"1622:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7875,"name":"address","nodeType":"ElementaryTypeName","src":"1622:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7878,"mutability":"mutable","name":"paymentAmountUsdCents","nameLocation":"1659:21:26","nodeType":"VariableDeclaration","scope":7879,"src":"1651:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AgreementInput","nameLocation":"1385:14:26","nodeType":"StructDefinition","scope":8702,"src":"1378:309:26","visibility":"public"},{"constant":true,"id":7884,"mutability":"constant","name":"AGREEMENT_TYPEHASH","nameLocation":"1718:18:26","nodeType":"VariableDeclaration","scope":8702,"src":"1693:287:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41677265656d656e74496e70757428737472696e672076656e75654e616d652c737472696e672076656e7565416464726573732c75696e74363420737461727454696d652c75696e743332206475726174696f6e4d696e757465732c737472696e6720617274697374536f6369616c48616e646c652c737472696e672076656e7565536f6369616c48616e646c652c616464726573732061727469737457616c6c65742c616464726573732076656e756557616c6c65742c75696e74323536207061796d656e74416d6f756e7455736443656e747329","id":7882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1758:216:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0a878e5693a37f578742a15a4cb856f692aae1e9fd056facc2c1eda5a985619","typeString":"literal_string \"AgreementInput(string venueName,string venueAddress,uint64 startTime,uint32 durationMinutes,string artistSocialHandle,string venueSocialHandle,address artistWallet,address venueWallet,uint256 paymentAmountUsdCents)\""},"value":"AgreementInput(string venueName,string venueAddress,uint64 startTime,uint32 durationMinutes,string artistSocialHandle,string venueSocialHandle,address artistWallet,address venueWallet,uint256 paymentAmountUsdCents)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a0a878e5693a37f578742a15a4cb856f692aae1e9fd056facc2c1eda5a985619","typeString":"literal_string \"AgreementInput(string venueName,string venueAddress,uint64 startTime,uint32 durationMinutes,string artistSocialHandle,string venueSocialHandle,address artistWallet,address venueWallet,uint256 paymentAmountUsdCents)\""}],"id":7881,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1739:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1739:241:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7889,"mutability":"mutable","name":"_agreements","nameLocation":"2053:11:26","nodeType":"VariableDeclaration","scope":8702,"src":"2015:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement)"},"typeName":{"id":7888,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2015:29:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7887,"nodeType":"UserDefinedTypeName","pathNode":{"id":7886,"name":"Agreement","nameLocations":["2034:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"2034:9:26"},"referencedDeclaration":7855,"src":"2034:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}}},"visibility":"private"},{"constant":false,"id":7892,"mutability":"mutable","name":"_nextId","nameLocation":"2086:7:26","nodeType":"VariableDeclaration","scope":8702,"src":"2070:27:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2070:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2096:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"0763e2255b3b46191fc14c005e2188d8639d751a03006384eafac51fd64e910f","id":7906,"name":"AgreementCreated","nameLocation":"2110:16:26","nodeType":"EventDefinition","parameters":{"id":7905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7894,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2152:7:26","nodeType":"VariableDeclaration","scope":7906,"src":"2136:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2136:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7896,"indexed":true,"mutability":"mutable","name":"artistWallet","nameLocation":"2185:12:26","nodeType":"VariableDeclaration","scope":7906,"src":"2169:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7895,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7898,"indexed":true,"mutability":"mutable","name":"venueWallet","nameLocation":"2223:11:26","nodeType":"VariableDeclaration","scope":7906,"src":"2207:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7897,"name":"address","nodeType":"ElementaryTypeName","src":"2207:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7900,"indexed":false,"mutability":"mutable","name":"venueName","nameLocation":"2251:9:26","nodeType":"VariableDeclaration","scope":7906,"src":"2244:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7899,"name":"string","nodeType":"ElementaryTypeName","src":"2244:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7902,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2277:9:26","nodeType":"VariableDeclaration","scope":7906,"src":"2270:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7901,"name":"uint64","nodeType":"ElementaryTypeName","src":"2270:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7904,"indexed":false,"mutability":"mutable","name":"paymentAmountUsdCents","nameLocation":"2304:21:26","nodeType":"VariableDeclaration","scope":7906,"src":"2296:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2126:205:26"},"src":"2104:228:26"},{"anonymous":false,"eventSelector":"9fbbd042184db7e95eaea0fdb4bb4a737167f1aaccd0d365742157ece5453102","id":7914,"name":"AgreementSignedAndMinted","nameLocation":"2343:24:26","nodeType":"EventDefinition","parameters":{"id":7913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2384:7:26","nodeType":"VariableDeclaration","scope":7914,"src":"2368:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7910,"indexed":true,"mutability":"mutable","name":"venueWallet","nameLocation":"2409:11:26","nodeType":"VariableDeclaration","scope":7914,"src":"2393:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7909,"name":"address","nodeType":"ElementaryTypeName","src":"2393:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7912,"indexed":true,"mutability":"mutable","name":"artistWallet","nameLocation":"2438:12:26","nodeType":"VariableDeclaration","scope":7914,"src":"2422:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7911,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2367:84:26"},"src":"2337:115:26"},{"anonymous":false,"eventSelector":"be978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e","id":7926,"name":"StatusChanged","nameLocation":"2463:13:26","nodeType":"EventDefinition","parameters":{"id":7925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7916,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2493:7:26","nodeType":"VariableDeclaration","scope":7926,"src":"2477:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7919,"indexed":false,"mutability":"mutable","name":"previous","nameLocation":"2509:8:26","nodeType":"VariableDeclaration","scope":7926,"src":"2502:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":7918,"nodeType":"UserDefinedTypeName","pathNode":{"id":7917,"name":"Status","nameLocations":["2502:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"2502:6:26"},"referencedDeclaration":7860,"src":"2502:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"},{"constant":false,"id":7922,"indexed":false,"mutability":"mutable","name":"current","nameLocation":"2526:7:26","nodeType":"VariableDeclaration","scope":7926,"src":"2519:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":7921,"nodeType":"UserDefinedTypeName","pathNode":{"id":7920,"name":"Status","nameLocations":["2519:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"2519:6:26"},"referencedDeclaration":7860,"src":"2519:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"},{"constant":false,"id":7924,"indexed":false,"mutability":"mutable","name":"actor","nameLocation":"2543:5:26","nodeType":"VariableDeclaration","scope":7926,"src":"2535:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7923,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:73:26"},"src":"2457:93:26"},{"anonymous":false,"eventSelector":"eb79e24102009f0d7f1eb4227511a0c5c61db03f1560911df6ebc1710f0d82d1","id":7934,"name":"PaymentRecorded","nameLocation":"2561:15:26","nodeType":"EventDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7928,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2593:7:26","nodeType":"VariableDeclaration","scope":7934,"src":"2577:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7930,"indexed":false,"mutability":"mutable","name":"amountUsdCents","nameLocation":"2610:14:26","nodeType":"VariableDeclaration","scope":7934,"src":"2602:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7932,"indexed":false,"mutability":"mutable","name":"recorder","nameLocation":"2634:8:26","nodeType":"VariableDeclaration","scope":7934,"src":"2626:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7931,"name":"address","nodeType":"ElementaryTypeName","src":"2626:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2576:67:26"},"src":"2555:89:26"},{"body":{"id":7949,"nodeType":"Block","src":"2766:2:26","statements":[]},"id":7950,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"506572666f726d616e636541677265656d656e74","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2671:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7755994de561fe5dfad0fa5ae97d80a9b9f228c3f9ec3152cc45587930ebbcc7","typeString":"literal_string \"PerformanceAgreement\""},"value":"PerformanceAgreement"},{"hexValue":"504552464147524d","id":7938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2695:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce9f8e67b44f6d33e0cd7bd122824bc88c2f201ec345aed1d6601a2cc0a184cd","typeString":"literal_string \"PERFAGRM\""},"value":"PERFAGRM"}],"id":7939,"kind":"baseConstructorSpecifier","modifierName":{"id":7936,"name":"ERC721","nameLocations":["2664:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"2664:6:26"},"nodeType":"ModifierInvocation","src":"2664:42:26"},{"arguments":[{"expression":{"id":7941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2715:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2719:6:26","memberName":"sender","nodeType":"MemberAccess","src":"2715:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7943,"kind":"baseConstructorSpecifier","modifierName":{"id":7940,"name":"Ownable","nameLocations":["2707:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2707:7:26"},"nodeType":"ModifierInvocation","src":"2707:19:26"},{"arguments":[{"hexValue":"506572666f726d616e636541677265656d656e744e4654","id":7945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2734:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2642fa52ded185759ff0e17a4f9890a0943f925be3f73fd180a9d70010f83210","typeString":"literal_string \"PerformanceAgreementNFT\""},"value":"PerformanceAgreementNFT"},{"hexValue":"31","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2761:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":7947,"kind":"baseConstructorSpecifier","modifierName":{"id":7944,"name":"EIP712","nameLocations":["2727:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"2727:6:26"},"nodeType":"ModifierInvocation","src":"2727:38:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[],"src":"2661:2:26"},"returnParameters":{"id":7948,"nodeType":"ParameterList","parameters":[],"src":"2766:0:26"},"scope":8702,"src":"2650:118:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8063,"nodeType":"Block","src":"3212:1074:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7975,"name":"artistWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"3230:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3254:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3246:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7976,"name":"address","nodeType":"ElementaryTypeName","src":"3246:7:26","typeDescriptions":{}}},"id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3230:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172746973742077616c6c6574207a65726f","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3258:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_652d46a21359fb2c38bd18a34bfe4996d8c6a4ba6fe0ca231fcbc914348603e8","typeString":"literal_string \"Artist wallet zero\""},"value":"Artist wallet zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_652d46a21359fb2c38bd18a34bfe4996d8c6a4ba6fe0ca231fcbc914348603e8","typeString":"literal_string \"Artist wallet zero\""}],"id":7974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3222:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7983,"nodeType":"ExpressionStatement","src":"3222:57:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7985,"name":"venueWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"3297:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3320:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3312:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7986,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:26","typeDescriptions":{}}},"id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3312:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3297:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656e75652077616c6c6574207a65726f","id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3324:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e9128bdee6e28b7dd73de951b52a268eca29a0fe0c1d0ec4ae5b948c52cee15","typeString":"literal_string \"Venue wallet zero\""},"value":"Venue wallet zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e9128bdee6e28b7dd73de951b52a268eca29a0fe0c1d0ec4ae5b948c52cee15","typeString":"literal_string \"Venue wallet zero\""}],"id":7984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3289:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3289:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7993,"nodeType":"ExpressionStatement","src":"3289:55:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7995,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"3362:9:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7996,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3374:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3380:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"3374:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:6:26","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3374:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3362:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d6520746f6f206f6c64","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3400:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_630ec48c8bb5227ba9c712ad36126a261243834b92d354b892639c7c8e41a662","typeString":"literal_string \"Start time too old\""},"value":"Start time too old"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_630ec48c8bb5227ba9c712ad36126a261243834b92d354b892639c7c8e41a662","typeString":"literal_string \"Start time too old\""}],"id":7994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3354:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3354:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8003,"nodeType":"ExpressionStatement","src":"3354:67:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8005,"name":"durationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"3439:15:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3457:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3439:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8008,"name":"durationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"3462:15:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"},"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3234","id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3481:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3486:2:26","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"3481:7:26","typeDescriptions":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"}},"src":"3462:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3439:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206475726174696f6e","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3490:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""},"value":"Invalid duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""}],"id":8004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3431:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3431:78:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"ExpressionStatement","src":"3431:78:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8018,"name":"paymentAmountUsdCents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"3527:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3527:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74206d757374206265203e2030","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3554:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4247eb1b8cc8d994a344d1e335fb8334eea9ea094877f6966edcb0568d8a275","typeString":"literal_string \"Payment must be > 0\""},"value":"Payment must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4247eb1b8cc8d994a344d1e335fb8334eea9ea094877f6966edcb0568d8a275","typeString":"literal_string \"Payment must be > 0\""}],"id":8017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3519:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8023,"nodeType":"ExpressionStatement","src":"3519:57:26"},{"expression":{"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"3587:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3597:9:26","subExpression":{"id":8025,"name":"_nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"3597:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3587:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8028,"nodeType":"ExpressionStatement","src":"3587:19:26"},{"expression":{"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8029,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"3616:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8031,"indexExpression":{"id":8030,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"3628:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3616:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8033,"name":"venueName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"3674:9:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":8034,"name":"venueAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"3711:12:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":8035,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"3748:9:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":8036,"name":"durationMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"3788:15:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8037,"name":"artistSocialHandle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7961,"src":"3837:18:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":8038,"name":"venueSocialHandle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7963,"src":"3888:17:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":8039,"name":"artistWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"3933:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8040,"name":"venueWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"3972:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8041,"name":"paymentAmountUsdCents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4020:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8042,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"4063:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4070:9:26","memberName":"Scheduled","nodeType":"MemberAccess","referencedDeclaration":7856,"src":"4063:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"hexValue":"66616c7365","id":8044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8032,"name":"Agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"3639:9:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Agreement_$7855_storage_ptr_$","typeString":"type(struct PerformanceAgreementNFT.Agreement storage pointer)"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3663:9:26","3697:12:26","3737:9:26","3771:15:26","3817:18:26","3869:17:26","3919:12:26","3959:11:26","3997:21:26","4055:6:26","4093:15:26"],"names":["venueName","venueAddress","startTime","durationMinutes","artistSocialHandle","venueSocialHandle","artistWallet","venueWallet","paymentAmountUsdCents","status","paymentRecorded"],"nodeType":"FunctionCall","src":"3639:487:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"src":"3616:510:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"id":8047,"nodeType":"ExpressionStatement","src":"3616:510:26"},{"expression":{"arguments":[{"expression":{"id":8049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4147:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4151:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4147:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8051,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4159:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8048,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[976,1006],"referencedDeclaration":976,"src":"4137:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4137:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8053,"nodeType":"ExpressionStatement","src":"4137:30:26"},{"eventCall":{"arguments":[{"id":8055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4199:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8056,"name":"artistWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7965,"src":"4208:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8057,"name":"venueWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"4222:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8058,"name":"venueName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"4235:9:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":8059,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"4246:9:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":8060,"name":"paymentAmountUsdCents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"4257:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8054,"name":"AgreementCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"4182:16:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,string memory,uint64,uint256)"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:97:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8062,"nodeType":"EmitStatement","src":"4177:102:26"}]},"documentation":{"id":7951,"nodeType":"StructuredDocumentation","src":"2774:51:26","text":"@notice Create a new performance agreement NFT."},"functionSelector":"2b95da66","id":8064,"implemented":true,"kind":"function","modifiers":[],"name":"createAgreement","nameLocation":"2839:15:26","nodeType":"FunctionDefinition","parameters":{"id":7970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7953,"mutability":"mutable","name":"venueName","nameLocation":"2880:9:26","nodeType":"VariableDeclaration","scope":8064,"src":"2864:25:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7952,"name":"string","nodeType":"ElementaryTypeName","src":"2864:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7955,"mutability":"mutable","name":"venueAddress","nameLocation":"2915:12:26","nodeType":"VariableDeclaration","scope":8064,"src":"2899:28:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7954,"name":"string","nodeType":"ElementaryTypeName","src":"2899:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7957,"mutability":"mutable","name":"startTime","nameLocation":"2944:9:26","nodeType":"VariableDeclaration","scope":8064,"src":"2937:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7956,"name":"uint64","nodeType":"ElementaryTypeName","src":"2937:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7959,"mutability":"mutable","name":"durationMinutes","nameLocation":"2970:15:26","nodeType":"VariableDeclaration","scope":8064,"src":"2963:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7958,"name":"uint32","nodeType":"ElementaryTypeName","src":"2963:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7961,"mutability":"mutable","name":"artistSocialHandle","nameLocation":"3011:18:26","nodeType":"VariableDeclaration","scope":8064,"src":"2995:34:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7960,"name":"string","nodeType":"ElementaryTypeName","src":"2995:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7963,"mutability":"mutable","name":"venueSocialHandle","nameLocation":"3055:17:26","nodeType":"VariableDeclaration","scope":8064,"src":"3039:33:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7962,"name":"string","nodeType":"ElementaryTypeName","src":"3039:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7965,"mutability":"mutable","name":"artistWallet","nameLocation":"3090:12:26","nodeType":"VariableDeclaration","scope":8064,"src":"3082:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7964,"name":"address","nodeType":"ElementaryTypeName","src":"3082:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7967,"mutability":"mutable","name":"venueWallet","nameLocation":"3120:11:26","nodeType":"VariableDeclaration","scope":8064,"src":"3112:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7966,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7969,"mutability":"mutable","name":"paymentAmountUsdCents","nameLocation":"3149:21:26","nodeType":"VariableDeclaration","scope":8064,"src":"3141:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3141:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:322:26"},"returnParameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"tokenId","nameLocation":"3203:7:26","nodeType":"VariableDeclaration","scope":8064,"src":"3195:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3195:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3194:17:26"},"scope":8702,"src":"2830:1456:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8103,"nodeType":"Block","src":"4334:237:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8070,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"4361:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8069,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4352:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4352:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4381:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4373:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8072,"name":"address","nodeType":"ElementaryTypeName","src":"4373:7:26","typeDescriptions":{}}},"id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4352:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e6578697374656e7420746f6b656e","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4385:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""},"value":"Nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""}],"id":8068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4344:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4344:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8079,"nodeType":"ExpressionStatement","src":"4344:61:26"},{"assignments":[8082],"declarations":[{"constant":false,"id":8082,"mutability":"mutable","name":"a","nameLocation":"4432:1:26","nodeType":"VariableDeclaration","scope":8103,"src":"4415:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8081,"nodeType":"UserDefinedTypeName","pathNode":{"id":8080,"name":"Agreement","nameLocations":["4415:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"4415:9:26"},"referencedDeclaration":7855,"src":"4415:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8086,"initialValue":{"baseExpression":{"id":8083,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"4436:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8085,"indexExpression":{"id":8084,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"4448:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4436:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4415:41:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4474:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4478:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4474:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"4488:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4490:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7845,"src":"4488:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4474:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8093,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4506:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4510:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4506:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"4520:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4522:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7847,"src":"4520:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4506:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4474:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207061727469636970616e74","id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4535:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_714e680ade7c81a810b3cc1d070aab54ea1c2a860affd5a49579d6107821f7be","typeString":"literal_string \"Not participant\""},"value":"Not participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_714e680ade7c81a810b3cc1d070aab54ea1c2a860affd5a49579d6107821f7be","typeString":"literal_string \"Not participant\""}],"id":8087,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4466:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4466:87:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8101,"nodeType":"ExpressionStatement","src":"4466:87:26"},{"id":8102,"nodeType":"PlaceholderStatement","src":"4563:1:26"}]},"id":8104,"name":"onlyParticipant","nameLocation":"4301:15:26","nodeType":"ModifierDefinition","parameters":{"id":8067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8066,"mutability":"mutable","name":"tokenId","nameLocation":"4325:7:26","nodeType":"VariableDeclaration","scope":8104,"src":"4317:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8065,"name":"uint256","nodeType":"ElementaryTypeName","src":"4317:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4316:17:26"},"src":"4292:279:26","virtual":false,"visibility":"internal"},{"body":{"id":8150,"nodeType":"Block","src":"4651:262:26","statements":[{"assignments":[8114],"declarations":[{"constant":false,"id":8114,"mutability":"mutable","name":"a","nameLocation":"4679:1:26","nodeType":"VariableDeclaration","scope":8150,"src":"4661:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8113,"nodeType":"UserDefinedTypeName","pathNode":{"id":8112,"name":"Agreement","nameLocations":["4661:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"4661:9:26"},"referencedDeclaration":7855,"src":"4661:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8118,"initialValue":{"baseExpression":{"id":8115,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"4683:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8117,"indexExpression":{"id":8116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"4695:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4683:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4661:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"4721:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4723:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"4721:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8122,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"4733:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4740:9:26","memberName":"Scheduled","nodeType":"MemberAccess","referencedDeclaration":7856,"src":"4733:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"4721:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420737461747573","id":8125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4751:12:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_afdd187e3a32f260a5abfac08bd5effae36e8ea46f6a14e97b41fbe8492a1339","typeString":"literal_string \"Bad status\""},"value":"Bad status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afdd187e3a32f260a5abfac08bd5effae36e8ea46f6a14e97b41fbe8492a1339","typeString":"literal_string \"Bad status\""}],"id":8119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4713:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8127,"nodeType":"ExpressionStatement","src":"4713:51:26"},{"assignments":[8130],"declarations":[{"constant":false,"id":8130,"mutability":"mutable","name":"previous","nameLocation":"4781:8:26","nodeType":"VariableDeclaration","scope":8150,"src":"4774:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":8129,"nodeType":"UserDefinedTypeName","pathNode":{"id":8128,"name":"Status","nameLocations":["4774:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"4774:6:26"},"referencedDeclaration":7860,"src":"4774:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"}],"id":8133,"initialValue":{"expression":{"id":8131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"4792:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4794:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"4792:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"VariableDeclarationStatement","src":"4774:26:26"},{"expression":{"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"4810:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4812:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"4810:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8137,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"4821:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4828:9:26","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":7857,"src":"4821:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"4810:27:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"id":8140,"nodeType":"ExpressionStatement","src":"4810:27:26"},{"eventCall":{"arguments":[{"id":8142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"4866:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8143,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"4875:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"4885:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4887:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"4885:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8146,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4895:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4899:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4895:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8141,"name":"StatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"4852:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Status_$7860_$_t_enum$_Status_$7860_$_t_address_$returns$__$","typeString":"function (uint256,enum PerformanceAgreementNFT.Status,enum PerformanceAgreementNFT.Status,address)"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4852:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8149,"nodeType":"EmitStatement","src":"4847:59:26"}]},"functionSelector":"cac5c512","id":8151,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"4642:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8110,"kind":"modifierInvocation","modifierName":{"id":8108,"name":"onlyParticipant","nameLocations":["4626:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":8104,"src":"4626:15:26"},"nodeType":"ModifierInvocation","src":"4626:24:26"}],"name":"markCompleted","nameLocation":"4586:13:26","nodeType":"FunctionDefinition","parameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"tokenId","nameLocation":"4608:7:26","nodeType":"VariableDeclaration","scope":8151,"src":"4600:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4600:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4599:17:26"},"returnParameters":{"id":8111,"nodeType":"ParameterList","parameters":[],"src":"4651:0:26"},"scope":8702,"src":"4577:336:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8197,"nodeType":"Block","src":"4992:268:26","statements":[{"assignments":[8161],"declarations":[{"constant":false,"id":8161,"mutability":"mutable","name":"a","nameLocation":"5020:1:26","nodeType":"VariableDeclaration","scope":8197,"src":"5002:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8160,"nodeType":"UserDefinedTypeName","pathNode":{"id":8159,"name":"Agreement","nameLocations":["5002:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"5002:9:26"},"referencedDeclaration":7855,"src":"5002:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8165,"initialValue":{"baseExpression":{"id":8162,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"5024:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8164,"indexExpression":{"id":8163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"5036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5024:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5002:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"5062:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5064:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5062:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8169,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5074:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5081:9:26","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":7857,"src":"5074:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5062:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420626520636f6d706c65746564","id":8172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5092:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8354a548629a60bd6a20e2f1b6d55b916e060d53f9ebc24ec8596f77dfb8206","typeString":"literal_string \"Must be completed\""},"value":"Must be completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8354a548629a60bd6a20e2f1b6d55b916e060d53f9ebc24ec8596f77dfb8206","typeString":"literal_string \"Must be completed\""}],"id":8166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5054:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5054:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8174,"nodeType":"ExpressionStatement","src":"5054:58:26"},{"assignments":[8177],"declarations":[{"constant":false,"id":8177,"mutability":"mutable","name":"previous","nameLocation":"5129:8:26","nodeType":"VariableDeclaration","scope":8197,"src":"5122:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":8176,"nodeType":"UserDefinedTypeName","pathNode":{"id":8175,"name":"Status","nameLocations":["5122:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"5122:6:26"},"referencedDeclaration":7860,"src":"5122:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"}],"id":8180,"initialValue":{"expression":{"id":8178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"5140:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5142:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5140:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"VariableDeclarationStatement","src":"5122:26:26"},{"expression":{"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"5158:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5160:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5158:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8184,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5169:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5176:8:26","memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":7858,"src":"5169:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5158:26:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"id":8187,"nodeType":"ExpressionStatement","src":"5158:26:26"},{"eventCall":{"arguments":[{"id":8189,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"5213:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8190,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"5222:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"5232:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5234:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5232:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5242:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5246:6:26","memberName":"sender","nodeType":"MemberAccess","src":"5242:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8188,"name":"StatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"5199:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Status_$7860_$_t_enum$_Status_$7860_$_t_address_$returns$__$","typeString":"function (uint256,enum PerformanceAgreementNFT.Status,enum PerformanceAgreementNFT.Status,address)"}},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8196,"nodeType":"EmitStatement","src":"5194:59:26"}]},"functionSelector":"a5c1674e","id":8198,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"4983:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8157,"kind":"modifierInvocation","modifierName":{"id":8155,"name":"onlyParticipant","nameLocations":["4967:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":8104,"src":"4967:15:26"},"nodeType":"ModifierInvocation","src":"4967:24:26"}],"name":"raiseDispute","nameLocation":"4928:12:26","nodeType":"FunctionDefinition","parameters":{"id":8154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8153,"mutability":"mutable","name":"tokenId","nameLocation":"4949:7:26","nodeType":"VariableDeclaration","scope":8198,"src":"4941:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4941:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4940:17:26"},"returnParameters":{"id":8158,"nodeType":"ParameterList","parameters":[],"src":"4992:0:26"},"scope":8702,"src":"4919:341:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8243,"nodeType":"Block","src":"5326:262:26","statements":[{"assignments":[8207],"declarations":[{"constant":false,"id":8207,"mutability":"mutable","name":"a","nameLocation":"5354:1:26","nodeType":"VariableDeclaration","scope":8243,"src":"5336:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8206,"nodeType":"UserDefinedTypeName","pathNode":{"id":8205,"name":"Agreement","nameLocations":["5336:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"5336:9:26"},"referencedDeclaration":7855,"src":"5336:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8211,"initialValue":{"baseExpression":{"id":8208,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"5358:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8210,"indexExpression":{"id":8209,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"5370:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5358:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5336:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"5396:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5398:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5396:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8215,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5408:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5415:8:26","memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":7858,"src":"5408:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5396:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206469737075746564","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5425:14:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_99d1d855af229280127b4e533c67f687643327d2d19b724b6abcddba0507bdb3","typeString":"literal_string \"Not disputed\""},"value":"Not disputed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99d1d855af229280127b4e533c67f687643327d2d19b724b6abcddba0507bdb3","typeString":"literal_string \"Not disputed\""}],"id":8212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5388:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8220,"nodeType":"ExpressionStatement","src":"5388:52:26"},{"assignments":[8223],"declarations":[{"constant":false,"id":8223,"mutability":"mutable","name":"previous","nameLocation":"5457:8:26","nodeType":"VariableDeclaration","scope":8243,"src":"5450:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":8222,"nodeType":"UserDefinedTypeName","pathNode":{"id":8221,"name":"Status","nameLocations":["5450:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"5450:6:26"},"referencedDeclaration":7860,"src":"5450:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"}],"id":8226,"initialValue":{"expression":{"id":8224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"5468:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5470:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5468:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"VariableDeclarationStatement","src":"5450:26:26"},{"expression":{"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"5486:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5488:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5486:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8230,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5497:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5504:8:26","memberName":"Resolved","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"5497:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5486:26:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"id":8233,"nodeType":"ExpressionStatement","src":"5486:26:26"},{"eventCall":{"arguments":[{"id":8235,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"5541:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8236,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"5550:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"5560:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5562:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5560:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"expression":{"id":8239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5570:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5574:6:26","memberName":"sender","nodeType":"MemberAccess","src":"5570:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8234,"name":"StatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"5527:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Status_$7860_$_t_enum$_Status_$7860_$_t_address_$returns$__$","typeString":"function (uint256,enum PerformanceAgreementNFT.Status,enum PerformanceAgreementNFT.Status,address)"}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5527:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8242,"nodeType":"EmitStatement","src":"5522:59:26"}]},"functionSelector":"c2b7b868","id":8244,"implemented":true,"kind":"function","modifiers":[{"id":8203,"kind":"modifierInvocation","modifierName":{"id":8202,"name":"onlyOwner","nameLocations":["5316:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5316:9:26"},"nodeType":"ModifierInvocation","src":"5316:9:26"}],"name":"resolveDispute","nameLocation":"5275:14:26","nodeType":"FunctionDefinition","parameters":{"id":8201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8200,"mutability":"mutable","name":"tokenId","nameLocation":"5298:7:26","nodeType":"VariableDeclaration","scope":8244,"src":"5290:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5290:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5289:17:26"},"returnParameters":{"id":8204,"nodeType":"ParameterList","parameters":[],"src":"5326:0:26"},"scope":8702,"src":"5266:322:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8295,"nodeType":"Block","src":"5668:334:26","statements":[{"assignments":[8254],"declarations":[{"constant":false,"id":8254,"mutability":"mutable","name":"a","nameLocation":"5696:1:26","nodeType":"VariableDeclaration","scope":8295,"src":"5678:19:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8253,"nodeType":"UserDefinedTypeName","pathNode":{"id":8252,"name":"Agreement","nameLocations":["5678:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"5678:9:26"},"referencedDeclaration":7855,"src":"5678:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8258,"initialValue":{"baseExpression":{"id":8255,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"5700:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8257,"indexExpression":{"id":8256,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"5712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5700:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5678:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5738:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5740:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5738:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8262,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5750:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5757:9:26","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":7857,"src":"5750:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5738:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5770:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5772:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"5770:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8267,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"5782:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5789:8:26","memberName":"Resolved","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"5782:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"5770:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5738:59:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073746174757320666f72207061796d656e74","id":8271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5799:28:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5e4f98fc00911ca6cfd8790e5cd4aa67cb475b7b22d4f4ffe9aa5c467438609","typeString":"literal_string \"Invalid status for payment\""},"value":"Invalid status for payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5e4f98fc00911ca6cfd8790e5cd4aa67cb475b7b22d4f4ffe9aa5c467438609","typeString":"literal_string \"Invalid status for payment\""}],"id":8259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5730:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:98:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8273,"nodeType":"ExpressionStatement","src":"5730:98:26"},{"expression":{"arguments":[{"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5846:18:26","subExpression":{"expression":{"id":8275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5847:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5849:15:26","memberName":"paymentRecorded","nodeType":"MemberAccess","referencedDeclaration":7854,"src":"5847:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207265636f72646564","id":8278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5866:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5de40856f3de8bbad884c970d11894292faa674da342609699461d60bd7803b6","typeString":"literal_string \"Already recorded\""},"value":"Already recorded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5de40856f3de8bbad884c970d11894292faa674da342609699461d60bd7803b6","typeString":"literal_string \"Already recorded\""}],"id":8274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5838:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5838:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8280,"nodeType":"ExpressionStatement","src":"5838:47:26"},{"expression":{"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5895:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5897:15:26","memberName":"paymentRecorded","nodeType":"MemberAccess","referencedDeclaration":7854,"src":"5895:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5915:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5895:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8286,"nodeType":"ExpressionStatement","src":"5895:24:26"},{"eventCall":{"arguments":[{"id":8288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"5950:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"5959:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement storage pointer"}},"id":8290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5961:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7849,"src":"5959:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5984:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5988:6:26","memberName":"sender","nodeType":"MemberAccess","src":"5984:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8287,"name":"PaymentRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"5934:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8294,"nodeType":"EmitStatement","src":"5929:66:26"}]},"functionSelector":"fefa9291","id":8296,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8249,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"5659:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8250,"kind":"modifierInvocation","modifierName":{"id":8248,"name":"onlyParticipant","nameLocations":["5643:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":8104,"src":"5643:15:26"},"nodeType":"ModifierInvocation","src":"5643:24:26"}],"name":"recordPayment","nameLocation":"5603:13:26","nodeType":"FunctionDefinition","parameters":{"id":8247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8246,"mutability":"mutable","name":"tokenId","nameLocation":"5625:7:26","nodeType":"VariableDeclaration","scope":8296,"src":"5617:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5617:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5616:17:26"},"returnParameters":{"id":8251,"nodeType":"ParameterList","parameters":[],"src":"5668:0:26"},"scope":8702,"src":"5594:408:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8499,"nodeType":"Block","src":"6217:1986:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6235:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6235:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6249:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6255:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"6249:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6235:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206e6f742076656e75652077616c6c6574","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6268:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_393fa2ef622741b67672ca1bb5ae849c80a3e62d19eda345144a6c2972802678","typeString":"literal_string \"Caller not venue wallet\""},"value":"Caller not venue wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_393fa2ef622741b67672ca1bb5ae849c80a3e62d19eda345144a6c2972802678","typeString":"literal_string \"Caller not venue wallet\""}],"id":8307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6227:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8315,"nodeType":"ExpressionStatement","src":"6227:67:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8317,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6312:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6318:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"6312:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6342:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6334:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8319,"name":"address","nodeType":"ElementaryTypeName","src":"6334:7:26","typeDescriptions":{}}},"id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6334:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6312:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6348:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6354:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"6348:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6377:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6369:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8326,"name":"address","nodeType":"ElementaryTypeName","src":"6369:7:26","typeDescriptions":{}}},"id":8329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6369:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6348:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6312:67:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2061646472657373","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6381:14:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833","typeString":"literal_string \"Zero address\""},"value":"Zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833","typeString":"literal_string \"Zero address\""}],"id":8316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6304:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6304:92:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8334,"nodeType":"ExpressionStatement","src":"6304:92:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8336,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6414:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6420:9:26","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":7866,"src":"6414:15:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8338,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6432:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6438:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"6432:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:6:26","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"6432:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6414:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d6520746f6f206f6c64","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6458:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_630ec48c8bb5227ba9c712ad36126a261243834b92d354b892639c7c8e41a662","typeString":"literal_string \"Start time too old\""},"value":"Start time too old"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_630ec48c8bb5227ba9c712ad36126a261243834b92d354b892639c7c8e41a662","typeString":"literal_string \"Start time too old\""}],"id":8335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6406:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6406:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8345,"nodeType":"ExpressionStatement","src":"6406:73:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8347,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6497:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6503:15:26","memberName":"durationMinutes","nodeType":"MemberAccess","referencedDeclaration":7868,"src":"6497:21:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6521:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6497:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6526:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6532:15:26","memberName":"durationMinutes","nodeType":"MemberAccess","referencedDeclaration":7868,"src":"6526:21:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"},"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3234","id":8353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6551:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":8354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6556:2:26","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"6551:7:26","typeDescriptions":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"}},"src":"6526:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6497:61:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206475726174696f6e","id":8358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6560:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""},"value":"Invalid duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""}],"id":8346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6489:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6489:90:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8360,"nodeType":"ExpressionStatement","src":"6489:90:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8362,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6597:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6603:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7878,"src":"6597:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6597:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74206d757374206265203e2030","id":8366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6630:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4247eb1b8cc8d994a344d1e335fb8334eea9ea094877f6966edcb0568d8a275","typeString":"literal_string \"Payment must be > 0\""},"value":"Payment must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4247eb1b8cc8d994a344d1e335fb8334eea9ea094877f6966edcb0568d8a275","typeString":"literal_string \"Payment must be > 0\""}],"id":8361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6589:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8368,"nodeType":"ExpressionStatement","src":"6589:63:26"},{"assignments":[8370],"declarations":[{"constant":false,"id":8370,"mutability":"mutable","name":"structHash","nameLocation":"6671:10:26","nodeType":"VariableDeclaration","scope":8499,"src":"6663:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6663:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8415,"initialValue":{"arguments":[{"arguments":[{"id":8374,"name":"AGREEMENT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"6718:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":8378,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6766:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6772:9:26","memberName":"venueName","nodeType":"MemberAccess","referencedDeclaration":7862,"src":"6766:15:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6760:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8376,"name":"bytes","nodeType":"ElementaryTypeName","src":"6760:5:26","typeDescriptions":{}}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8375,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6750:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":8385,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6813:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6819:12:26","memberName":"venueAddress","nodeType":"MemberAccess","referencedDeclaration":7864,"src":"6813:18:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8383,"name":"bytes","nodeType":"ElementaryTypeName","src":"6807:5:26","typeDescriptions":{}}},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8382,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6797:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6797:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6847:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6853:9:26","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":7866,"src":"6847:15:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":8391,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6876:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6882:15:26","memberName":"durationMinutes","nodeType":"MemberAccess","referencedDeclaration":7868,"src":"6876:21:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"arguments":[{"expression":{"id":8396,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6927:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6933:18:26","memberName":"artistSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7870,"src":"6927:24:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6921:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8394,"name":"bytes","nodeType":"ElementaryTypeName","src":"6921:5:26","typeDescriptions":{}}},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6921:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8393,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6911:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":8403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"6983:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6989:17:26","memberName":"venueSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7872,"src":"6983:23:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":8402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6977:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8401,"name":"bytes","nodeType":"ElementaryTypeName","src":"6977:5:26","typeDescriptions":{}}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":8400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6967:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7022:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7028:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"7022:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7054:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7060:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"7054:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7085:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7091:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7878,"src":"7085:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8372,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6694:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6698:6:26","memberName":"encode","nodeType":"MemberAccess","src":"6694:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6694:428:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8371,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6684:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:439:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6663:460:26"},{"assignments":[8417],"declarations":[{"constant":false,"id":8417,"mutability":"mutable","name":"digest","nameLocation":"7141:6:26","nodeType":"VariableDeclaration","scope":8499,"src":"7133:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7133:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8421,"initialValue":{"arguments":[{"id":8419,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"7167:10:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8418,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"7150:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7150:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7133:45:26"},{"assignments":[8423],"declarations":[{"constant":false,"id":8423,"mutability":"mutable","name":"signer","nameLocation":"7196:6:26","nodeType":"VariableDeclaration","scope":8499,"src":"7188:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8422,"name":"address","nodeType":"ElementaryTypeName","src":"7188:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8429,"initialValue":{"arguments":[{"id":8426,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8417,"src":"7219:6:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8427,"name":"artistSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"7227:15:26","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8424,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"7205:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3934_$","typeString":"type(library ECDSA)"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7211:7:26","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3690,"src":"7205:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7188:55:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8431,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8423,"src":"7261:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7271:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7277:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"7271:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7261:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420617274697374207369676e6174757265","id":8435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7291:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_99163029afafccccf0f32a7b021a7498993b373069d0c3cb04e65ff334405012","typeString":"literal_string \"Bad artist signature\""},"value":"Bad artist signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99163029afafccccf0f32a7b021a7498993b373069d0c3cb04e65ff334405012","typeString":"literal_string \"Bad artist signature\""}],"id":8430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7253:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8437,"nodeType":"ExpressionStatement","src":"7253:61:26"},{"expression":{"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8438,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"7325:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7335:9:26","subExpression":{"id":8439,"name":"_nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"7335:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8442,"nodeType":"ExpressionStatement","src":"7325:19:26"},{"expression":{"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8443,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"7354:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8445,"indexExpression":{"id":8444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"7366:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7354:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8447,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7412:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7418:9:26","memberName":"venueName","nodeType":"MemberAccess","referencedDeclaration":7862,"src":"7412:15:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":8449,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7455:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7461:12:26","memberName":"venueAddress","nodeType":"MemberAccess","referencedDeclaration":7864,"src":"7455:18:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":8451,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7498:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7504:9:26","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":7866,"src":"7498:15:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":8453,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7544:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7550:15:26","memberName":"durationMinutes","nodeType":"MemberAccess","referencedDeclaration":7868,"src":"7544:21:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8455,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7599:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:18:26","memberName":"artistSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7870,"src":"7599:24:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":8457,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7656:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7662:17:26","memberName":"venueSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7872,"src":"7656:23:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":8459,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7707:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7713:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"7707:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8461,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7752:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7758:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"7752:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8463,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7806:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7812:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7878,"src":"7806:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8465,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"7855:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7862:9:26","memberName":"Scheduled","nodeType":"MemberAccess","referencedDeclaration":7856,"src":"7855:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},{"hexValue":"66616c7365","id":8467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7902:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8446,"name":"Agreement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7377:9:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Agreement_$7855_storage_ptr_$","typeString":"type(struct PerformanceAgreementNFT.Agreement storage pointer)"}},"id":8468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7401:9:26","7441:12:26","7487:9:26","7527:15:26","7579:18:26","7637:17:26","7693:12:26","7739:11:26","7783:21:26","7847:6:26","7885:15:26"],"names":["venueName","venueAddress","startTime","durationMinutes","artistSocialHandle","venueSocialHandle","artistWallet","venueWallet","paymentAmountUsdCents","status","paymentRecorded"],"nodeType":"FunctionCall","src":"7377:541:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"src":"7354:564:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"id":8470,"nodeType":"ExpressionStatement","src":"7354:564:26"},{"expression":{"arguments":[{"expression":{"id":8472,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"7939:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7945:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"7939:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"7959:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8471,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[976,1006],"referencedDeclaration":976,"src":"7929:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8476,"nodeType":"ExpressionStatement","src":"7929:38:26"},{"eventCall":{"arguments":[{"id":8478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"7999:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8479,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8008:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"8008:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8481,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8028:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8034:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"8028:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8483,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8047:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8053:9:26","memberName":"venueName","nodeType":"MemberAccess","referencedDeclaration":7862,"src":"8047:15:26","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":8485,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8064:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8070:9:26","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":7866,"src":"8064:15:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":8487,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8081:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8087:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7878,"src":"8081:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8477,"name":"AgreementCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7906,"src":"7982:16:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,string memory,uint64,uint256)"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7982:127:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8490,"nodeType":"EmitStatement","src":"7977:132:26"},{"eventCall":{"arguments":[{"id":8492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8305,"src":"8149:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8493,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8158:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8164:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7876,"src":"8158:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8495,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"8177:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput calldata"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8183:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7874,"src":"8177:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8491,"name":"AgreementSignedAndMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"8124:24:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8498,"nodeType":"EmitStatement","src":"8119:77:26"}]},"documentation":{"id":8297,"nodeType":"StructuredDocumentation","src":"6008:68:26","text":"@notice Creates agreement NFT after artist has signed off-chain."},"functionSelector":"5eb37a31","id":8500,"implemented":true,"kind":"function","modifiers":[],"name":"createAgreementWithArtistSig","nameLocation":"6090:28:26","nodeType":"FunctionDefinition","parameters":{"id":8303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"input","nameLocation":"6143:5:26","nodeType":"VariableDeclaration","scope":8500,"src":"6119:29:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_calldata_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput"},"typeName":{"id":8299,"nodeType":"UserDefinedTypeName","pathNode":{"id":8298,"name":"AgreementInput","nameLocations":["6119:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":7879,"src":"6119:14:26"},"referencedDeclaration":7879,"src":"6119:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_AgreementInput_$7879_storage_ptr","typeString":"struct PerformanceAgreementNFT.AgreementInput"}},"visibility":"internal"},{"constant":false,"id":8302,"mutability":"mutable","name":"artistSignature","nameLocation":"6165:15:26","nodeType":"VariableDeclaration","scope":8500,"src":"6150:30:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8301,"name":"bytes","nodeType":"ElementaryTypeName","src":"6150:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:63:26"},"returnParameters":{"id":8306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8305,"mutability":"mutable","name":"tokenId","nameLocation":"6208:7:26","nodeType":"VariableDeclaration","scope":8500,"src":"6200:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6200:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6199:17:26"},"scope":8702,"src":"6081:2122:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8524,"nodeType":"Block","src":"8289:115:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"8316:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8509,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8307:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8307:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8512,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:26","typeDescriptions":{}}},"id":8515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8307:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e6578697374656e7420746f6b656e","id":8517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8340:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""},"value":"Nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""}],"id":8508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8299:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8299:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8519,"nodeType":"ExpressionStatement","src":"8299:61:26"},{"expression":{"baseExpression":{"id":8520,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"8377:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8522,"indexExpression":{"id":8521,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"8389:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8377:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"functionReturnParameters":8507,"id":8523,"nodeType":"Return","src":"8370:27:26"}]},"functionSelector":"4f9f6fe6","id":8525,"implemented":true,"kind":"function","modifiers":[],"name":"getAgreement","nameLocation":"8218:12:26","nodeType":"FunctionDefinition","parameters":{"id":8503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8502,"mutability":"mutable","name":"tokenId","nameLocation":"8239:7:26","nodeType":"VariableDeclaration","scope":8525,"src":"8231:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8501,"name":"uint256","nodeType":"ElementaryTypeName","src":"8231:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8230:17:26"},"returnParameters":{"id":8507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8525,"src":"8271:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8505,"nodeType":"UserDefinedTypeName","pathNode":{"id":8504,"name":"Agreement","nameLocations":["8271:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"8271:9:26"},"referencedDeclaration":7855,"src":"8271:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"src":"8270:18:26"},"scope":8702,"src":"8209:195:26","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1541],"body":{"id":8648,"nodeType":"Block","src":"8490:1271:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"8517:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8534,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8508:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8508:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8537:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8529:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8537,"name":"address","nodeType":"ElementaryTypeName","src":"8529:7:26","typeDescriptions":{}}},"id":8540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8529:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8508:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e6578697374656e7420746f6b656e","id":8542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8541:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""},"value":"Nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7003d7428552fca483d8ae514dcdd858508b192cded55eb84b078a27247ab7e4","typeString":"literal_string \"Nonexistent token\""}],"id":8533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8500:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8544,"nodeType":"ExpressionStatement","src":"8500:61:26"},{"assignments":[8547],"declarations":[{"constant":false,"id":8547,"mutability":"mutable","name":"a","nameLocation":"8588:1:26","nodeType":"VariableDeclaration","scope":8648,"src":"8571:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"},"typeName":{"id":8546,"nodeType":"UserDefinedTypeName","pathNode":{"id":8545,"name":"Agreement","nameLocations":["8571:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":7855,"src":"8571:9:26"},"referencedDeclaration":7855,"src":"8571:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage_ptr","typeString":"struct PerformanceAgreementNFT.Agreement"}},"visibility":"internal"}],"id":8551,"initialValue":{"baseExpression":{"id":8548,"name":"_agreements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"8592:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Agreement_$7855_storage_$","typeString":"mapping(uint256 => struct PerformanceAgreementNFT.Agreement storage ref)"}},"id":8550,"indexExpression":{"id":8549,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"8604:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8592:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_storage","typeString":"struct PerformanceAgreementNFT.Agreement storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8571:41:26"},{"assignments":[8553],"declarations":[{"constant":false,"id":8553,"mutability":"mutable","name":"json","nameLocation":"8637:4:26","nodeType":"VariableDeclaration","scope":8648,"src":"8623:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8552,"name":"string","nodeType":"ElementaryTypeName","src":"8623:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8632,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7b","id":8558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8681:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a22506572666f726d616e63652041677265656d656e742023","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8702:33:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_99fcb6dc3274682f7db238fc7a12ec2adf2ebad8f4ddd4e2e553b26c7d79bf86","typeString":"literal_string \"\"name\":\"Performance Agreement #\""},"value":"\"name\":\"Performance Agreement #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8527,"src":"8737:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8745:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"8737:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8737:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8757:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a2241677265656d656e74206265747765656e2061727469737420616e642076656e756520666f72206120706572666f726d616e6365206576656e742e222c","id":8564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8779:78:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_337aee5fa8ea21f0600a3cd01770bda60d7e29b557196cb323356b0267dd589c","typeString":"literal_string \"\"description\":\"Agreement between artist and venue for a performance event.\",\""},"value":"\"description\":\"Agreement between artist and venue for a performance event.\","},{"hexValue":"2276656e75654e616d65223a22","id":8565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8875:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9822b4f9d41f7f922817014149e65939629bffd11b38f223d85035b6f02ed39a","typeString":"literal_string \"\"venueName\":\"\""},"value":"\"venueName\":\""},{"expression":{"id":8566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"8892:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8894:9:26","memberName":"venueName","nodeType":"MemberAccess","referencedDeclaration":7833,"src":"8892:11:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8905:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2276656e756541646472657373223a22","id":8569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8927:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc3b1796357bd529abc397f05a5c9a9688ff1da1a10b2113ce716a8ed04dfdbc","typeString":"literal_string \"\"venueAddress\":\"\""},"value":"\"venueAddress\":\""},{"expression":{"id":8570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"8947:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8949:12:26","memberName":"venueAddress","nodeType":"MemberAccess","referencedDeclaration":7835,"src":"8947:14:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8963:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22737461727454696d65223a","id":8573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8985:14:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b6b51c5823baf04234fa5f9df8ec191e17ef5815b16d7bf5cba4d5119a1f6d5","typeString":"literal_string \"\"startTime\":\""},"value":"\"startTime\":"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":8576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9009:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9011:9:26","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":7837,"src":"9009:11:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":8575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8574,"name":"uint256","nodeType":"ElementaryTypeName","src":"9001:7:26","typeDescriptions":{}}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9022:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"9001:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":8581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9034:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"hexValue":"226475726174696f6e4d696e75746573223a","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9055:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d452875d8c6b083c906dcdd6217176b4a211185649097e0444a1e073e8cbb053","typeString":"literal_string \"\"durationMinutes\":\""},"value":"\"durationMinutes\":"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":8585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9085:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9087:15:26","memberName":"durationMinutes","nodeType":"MemberAccess","referencedDeclaration":7839,"src":"9085:17:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8583,"name":"uint256","nodeType":"ElementaryTypeName","src":"9077:7:26","typeDescriptions":{}}},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9104:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"9077:35:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":8590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9116:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"hexValue":"22617274697374536f6369616c48616e646c65223a22","id":8591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9137:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e74193ad9cea2455424b4baef0ccc90e062c36eb1283566944b5c28bdc030959","typeString":"literal_string \"\"artistSocialHandle\":\"\""},"value":"\"artistSocialHandle\":\""},{"expression":{"id":8592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9163:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9165:18:26","memberName":"artistSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7841,"src":"9163:20:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9185:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2276656e7565536f6369616c48616e646c65223a22","id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9207:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb419359d77a5274f6c22bf24e8fba032627f6cd525a83abf3e70b029153006c","typeString":"literal_string \"\"venueSocialHandle\":\"\""},"value":"\"venueSocialHandle\":\""},{"expression":{"id":8596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9232:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9234:17:26","memberName":"venueSocialHandle","nodeType":"MemberAccess","referencedDeclaration":7843,"src":"9232:19:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9253:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2261727469737457616c6c6574223a22","id":8599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9275:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_63b20eabd0e3f5b5e315726fb6a92fe30191511140b5edef8d0b51b4dfc597ab","typeString":"literal_string \"\"artistWallet\":\"\""},"value":"\"artistWallet\":\""},{"arguments":[{"expression":{"id":8601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9308:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9310:12:26","memberName":"artistWallet","nodeType":"MemberAccess","referencedDeclaration":7845,"src":"9308:14:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8600,"name":"_toHexString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"9295:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9295:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9325:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2276656e756557616c6c6574223a22","id":8605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9347:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa5cb869927bc7157e27bbdf36bd644a76335100cc23f9765700ed568633c936","typeString":"literal_string \"\"venueWallet\":\"\""},"value":"\"venueWallet\":\""},{"arguments":[{"expression":{"id":8607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9379:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9381:11:26","memberName":"venueWallet","nodeType":"MemberAccess","referencedDeclaration":7847,"src":"9379:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8606,"name":"_toHexString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"9366:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9366:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9395:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"227061796d656e74416d6f756e7455736443656e7473223a","id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9417:26:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_40e1b071a7faec91695cac91088ec7834a7c97de122232a2a224937527dae6ad","typeString":"literal_string \"\"paymentAmountUsdCents\":\""},"value":"\"paymentAmountUsdCents\":"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9445:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9447:21:26","memberName":"paymentAmountUsdCents","nodeType":"MemberAccess","referencedDeclaration":7849,"src":"9445:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9469:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"9445:32:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9445:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":8616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"hexValue":"22737461747573223a22","id":8617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9502:12:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_eeb5a178225a7dcc2b031f4f3b1db4210d6900abb00b4f79c5a4954f699f6bf7","typeString":"literal_string \"\"status\":\"\""},"value":"\"status\":\""},{"arguments":[{"expression":{"id":8619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9532:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9534:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7852,"src":"9532:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}],"id":8618,"name":"_statusToString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8701,"src":"9516:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Status_$7860_$returns$_t_string_memory_ptr_$","typeString":"function (enum PerformanceAgreementNFT.Status) pure returns (string memory)"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":8622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9543:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"227061796d656e745265636f72646564223a","id":8623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9565:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ab995e724fa9e8624e771921c6d8ea0e5400e36985fccddd831e2de902c6566","typeString":"literal_string \"\"paymentRecorded\":\""},"value":"\"paymentRecorded\":"},{"condition":{"expression":{"id":8624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"9587:1:26","typeDescriptions":{"typeIdentifier":"t_struct$_Agreement_$7855_memory_ptr","typeString":"struct PerformanceAgreementNFT.Agreement memory"}},"id":8625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9589:15:26","memberName":"paymentRecorded","nodeType":"MemberAccess","referencedDeclaration":7854,"src":"9587:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9616:7:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a","typeString":"literal_string \"false\""},"value":"false"},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9587:36:26","trueExpression":{"hexValue":"74727565","id":8626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9607:6:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034","typeString":"literal_string \"true\""},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d","id":8629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9637:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_99fcb6dc3274682f7db238fc7a12ec2adf2ebad8f4ddd4e2e553b26c7d79bf86","typeString":"literal_string \"\"name\":\"Performance Agreement #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_337aee5fa8ea21f0600a3cd01770bda60d7e29b557196cb323356b0267dd589c","typeString":"literal_string \"\"description\":\"Agreement between artist and venue for a performance event.\",\""},{"typeIdentifier":"t_stringliteral_9822b4f9d41f7f922817014149e65939629bffd11b38f223d85035b6f02ed39a","typeString":"literal_string \"\"venueName\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_fc3b1796357bd529abc397f05a5c9a9688ff1da1a10b2113ce716a8ed04dfdbc","typeString":"literal_string \"\"venueAddress\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_6b6b51c5823baf04234fa5f9df8ec191e17ef5815b16d7bf5cba4d5119a1f6d5","typeString":"literal_string \"\"startTime\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_stringliteral_d452875d8c6b083c906dcdd6217176b4a211185649097e0444a1e073e8cbb053","typeString":"literal_string \"\"durationMinutes\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_stringliteral_e74193ad9cea2455424b4baef0ccc90e062c36eb1283566944b5c28bdc030959","typeString":"literal_string \"\"artistSocialHandle\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_fb419359d77a5274f6c22bf24e8fba032627f6cd525a83abf3e70b029153006c","typeString":"literal_string \"\"venueSocialHandle\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_63b20eabd0e3f5b5e315726fb6a92fe30191511140b5edef8d0b51b4dfc597ab","typeString":"literal_string \"\"artistWallet\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_fa5cb869927bc7157e27bbdf36bd644a76335100cc23f9765700ed568633c936","typeString":"literal_string \"\"venueWallet\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_40e1b071a7faec91695cac91088ec7834a7c97de122232a2a224937527dae6ad","typeString":"literal_string \"\"paymentAmountUsdCents\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_stringliteral_eeb5a178225a7dcc2b031f4f3b1db4210d6900abb00b4f79c5a4954f699f6bf7","typeString":"literal_string \"\"status\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_6ab995e724fa9e8624e771921c6d8ea0e5400e36985fccddd831e2de902c6566","typeString":"literal_string \"\"paymentRecorded\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":8556,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8651:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8655:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"8651:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8651:999:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8644:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8554,"name":"string","nodeType":"ElementaryTypeName","src":"8644:6:26","typeDescriptions":{}}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8644:1007:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8623:1028:26"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":8637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9693:31:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"arguments":[{"id":8642,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"9746:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9740:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8640,"name":"bytes","nodeType":"ElementaryTypeName","src":"9740:5:26","typeDescriptions":{}}},"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9740:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8638,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"9726:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1761_$","typeString":"type(library Base64)"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9733:6:26","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1691,"src":"9726:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8635,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9676:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9680:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"9676:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9676:77:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9669:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8633,"name":"string","nodeType":"ElementaryTypeName","src":"9669:6:26","typeDescriptions":{}}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9669:85:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8532,"id":8647,"nodeType":"Return","src":"9662:92:26"}]},"functionSelector":"c87b56dd","id":8649,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8419:8:26","nodeType":"FunctionDefinition","overrides":{"id":8529,"nodeType":"OverrideSpecifier","overrides":[],"src":"8457:8:26"},"parameters":{"id":8528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8527,"mutability":"mutable","name":"tokenId","nameLocation":"8436:7:26","nodeType":"VariableDeclaration","scope":8649,"src":"8428:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8526,"name":"uint256","nodeType":"ElementaryTypeName","src":"8428:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8427:17:26"},"returnParameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8649,"src":"8475:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8530,"name":"string","nodeType":"ElementaryTypeName","src":"8475:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8474:15:26"},"scope":8702,"src":"8410:1351:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8668,"nodeType":"Block","src":"9844:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":8662,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"9897:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9889:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8660,"name":"uint160","nodeType":"ElementaryTypeName","src":"9889:7:26","typeDescriptions":{}}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9889:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":8659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9881:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8658,"name":"uint256","nodeType":"ElementaryTypeName","src":"9881:7:26","typeDescriptions":{}}},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9881:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3230","id":8665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9908:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":8656,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"9861:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3586_$","typeString":"type(library Strings)"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9869:11:26","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"9861:19:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8655,"id":8667,"nodeType":"Return","src":"9854:57:26"}]},"id":8669,"implemented":true,"kind":"function","modifiers":[],"name":"_toHexString","nameLocation":"9776:12:26","nodeType":"FunctionDefinition","parameters":{"id":8652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8651,"mutability":"mutable","name":"account","nameLocation":"9797:7:26","nodeType":"VariableDeclaration","scope":8669,"src":"9789:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8650,"name":"address","nodeType":"ElementaryTypeName","src":"9789:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9788:17:26"},"returnParameters":{"id":8655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8669,"src":"9829:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8653,"name":"string","nodeType":"ElementaryTypeName","src":"9829:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9828:15:26"},"scope":8702,"src":"9767:151:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8700,"nodeType":"Block","src":"9997:197:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8677,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"10011:1:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8678,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"10016:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10023:9:26","memberName":"Scheduled","nodeType":"MemberAccess","referencedDeclaration":7856,"src":"10016:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"10011:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8683,"nodeType":"IfStatement","src":"10007:45:26","trueBody":{"expression":{"hexValue":"5363686564756c6564","id":8681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10041:11:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_63164d1e35679b91bc39cf05797f45e9c8ec350248c36e719d7dc8b4593b8d1c","typeString":"literal_string \"Scheduled\""},"value":"Scheduled"},"functionReturnParameters":8676,"id":8682,"nodeType":"Return","src":"10034:18:26"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8684,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"10066:1:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8685,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"10071:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10078:9:26","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":7857,"src":"10071:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"10066:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8690,"nodeType":"IfStatement","src":"10062:45:26","trueBody":{"expression":{"hexValue":"436f6d706c65746564","id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10096:11:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1bc3aded8cf8a7fe8c493c18a1eb650e5265f44b3b5ac7206f2c987acbd8d794","typeString":"literal_string \"Completed\""},"value":"Completed"},"functionReturnParameters":8676,"id":8689,"nodeType":"Return","src":"10089:18:26"}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8691,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"10121:1:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8692,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"10126:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7860_$","typeString":"type(enum PerformanceAgreementNFT.Status)"}},"id":8693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10133:8:26","memberName":"Disputed","nodeType":"MemberAccess","referencedDeclaration":7858,"src":"10126:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"src":"10121:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8697,"nodeType":"IfStatement","src":"10117:43:26","trueBody":{"expression":{"hexValue":"4469737075746564","id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10150:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0bc49ccd4e06a0cdb9b3c0a3fa1750d59a03b1443ba3f828bcac9d6b8d76b8c","typeString":"literal_string \"Disputed\""},"value":"Disputed"},"functionReturnParameters":8676,"id":8696,"nodeType":"Return","src":"10143:17:26"}},{"expression":{"hexValue":"5265736f6c766564","id":8698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10177:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_32f1bd89eac1c7d1bef86035f41d1e7c8a1b069d06d1c5b74d8326681fa0ac73","typeString":"literal_string \"Resolved\""},"value":"Resolved"},"functionReturnParameters":8676,"id":8699,"nodeType":"Return","src":"10170:17:26"}]},"id":8701,"implemented":true,"kind":"function","modifiers":[],"name":"_statusToString","nameLocation":"9933:15:26","nodeType":"FunctionDefinition","parameters":{"id":8673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8672,"mutability":"mutable","name":"s","nameLocation":"9956:1:26","nodeType":"VariableDeclaration","scope":8701,"src":"9949:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"},"typeName":{"id":8671,"nodeType":"UserDefinedTypeName","pathNode":{"id":8670,"name":"Status","nameLocations":["9949:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"9949:6:26"},"referencedDeclaration":7860,"src":"9949:6:26","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7860","typeString":"enum PerformanceAgreementNFT.Status"}},"visibility":"internal"}],"src":"9948:10:26"},"returnParameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8701,"src":"9982:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8674,"name":"string","nodeType":"ElementaryTypeName","src":"9982:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9981:15:26"},"scope":8702,"src":"9924:270:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8703,"src":"637:9559:26","usedErrors":[13,18,252,257,266,271,276,283,288,293,1857,1859,2244,3597,3602,3607],"usedEvents":[24,167,174,180,1314,1323,1332,7906,7914,7926,7934]}],"src":"32:10165:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220804edcef0cb0cb10dfc7e106656145bec1d5874044a7bd105e1c10cb2190c7ab64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0xDC 0xEF 0xC 0xB0 0xCB LT 0xDF 0xC7 0xE1 MOD PUSH6 0x6145BEC1D587 BLOCKHASH PREVRANDAO 0xA7 0xBD LT 0x5E SHR LT 0xCB 0x21 SWAP1 0xC7 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1490:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d55df5370b591eacb8df7018791975154da54aa7bfa55b7b0aa1d73cb4f1200d64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5D CREATE2 CALLDATACOPY SIGNEXTEND MSIZE 0x1E 0xAC 0xB8 0xDF PUSH17 0x18791975154DA54AA7BFA55B7B0AA1D73C 0xB4 CALL KECCAK256 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:4980:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d55df5370b591eacb8df7018791975154da54aa7bfa55b7b0aa1d73cb4f1200d64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5D CREATE2 CALLDATACOPY SIGNEXTEND MSIZE 0x1E 0xAC 0xB8 0xDF PUSH17 0x18791975154DA54AA7BFA55B7B0AA1D73C 0xB4 CALL KECCAK256 0xD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:4980:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220be38f9d217646f870120140167ee3868bb6453ebeb69dd60ff12eeb686a8166564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE CODESIZE 0xF9 0xD2 OR PUSH5 0x6F87012014 ADD PUSH8 0xEE3868BB6453EBEB PUSH10 0xDD60FF12EEB686A81665 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3046:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203e8e0ad7246559fff5b34c72d478db7484c3d0d90a7298ccbda668f54c10322a64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY DUP15 EXP 0xD7 0x24 PUSH6 0x59FFF5B34C72 0xD4 PUSH25 0xDB7484C3D0D90A7298CCBDA668F54C10322A64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203e8e0ad7246559fff5b34c72d478db7484c3d0d90a7298ccbda668f54c10322a64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY DUP15 EXP 0xD7 0x24 PUSH6 0x59FFF5B34C72 0xD4 PUSH25 0xDB7484C3D0D90A7298CCBDA668F54C10322A64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/PerformanceAgreementNFT.sol":{"PerformanceAgreementNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"artistWallet","type":"address"},{"indexed":true,"internalType":"address","name":"venueWallet","type":"address"},{"indexed":false,"internalType":"string","name":"venueName","type":"string"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"paymentAmountUsdCents","type":"uint256"}],"name":"AgreementCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"venueWallet","type":"address"},{"indexed":true,"internalType":"address","name":"artistWallet","type":"address"}],"name":"AgreementSignedAndMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountUsdCents","type":"uint256"},{"indexed":false,"internalType":"address","name":"recorder","type":"address"}],"name":"PaymentRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum PerformanceAgreementNFT.Status","name":"previous","type":"uint8"},{"indexed":false,"internalType":"enum PerformanceAgreementNFT.Status","name":"current","type":"uint8"},{"indexed":false,"internalType":"address","name":"actor","type":"address"}],"name":"StatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"venueName","type":"string"},{"internalType":"string","name":"venueAddress","type":"string"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint32","name":"durationMinutes","type":"uint32"},{"internalType":"string","name":"artistSocialHandle","type":"string"},{"internalType":"string","name":"venueSocialHandle","type":"string"},{"internalType":"address","name":"artistWallet","type":"address"},{"internalType":"address","name":"venueWallet","type":"address"},{"internalType":"uint256","name":"paymentAmountUsdCents","type":"uint256"}],"name":"createAgreement","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"venueName","type":"string"},{"internalType":"string","name":"venueAddress","type":"string"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint32","name":"durationMinutes","type":"uint32"},{"internalType":"string","name":"artistSocialHandle","type":"string"},{"internalType":"string","name":"venueSocialHandle","type":"string"},{"internalType":"address","name":"artistWallet","type":"address"},{"internalType":"address","name":"venueWallet","type":"address"},{"internalType":"uint256","name":"paymentAmountUsdCents","type":"uint256"}],"internalType":"struct PerformanceAgreementNFT.AgreementInput","name":"input","type":"tuple"},{"internalType":"bytes","name":"artistSignature","type":"bytes"}],"name":"createAgreementWithArtistSig","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAgreement","outputs":[{"components":[{"internalType":"string","name":"venueName","type":"string"},{"internalType":"string","name":"venueAddress","type":"string"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint32","name":"durationMinutes","type":"uint32"},{"internalType":"string","name":"artistSocialHandle","type":"string"},{"internalType":"string","name":"venueSocialHandle","type":"string"},{"internalType":"address","name":"artistWallet","type":"address"},{"internalType":"address","name":"venueWallet","type":"address"},{"internalType":"uint256","name":"paymentAmountUsdCents","type":"uint256"},{"internalType":"enum PerformanceAgreementNFT.Status","name":"status","type":"uint8"},{"internalType":"bool","name":"paymentRecorded","type":"bool"}],"internalType":"struct PerformanceAgreementNFT.Agreement","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"markCompleted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"raiseDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"recordPayment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"resolveDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"finalize_allocation":{"entryPoint":1246,"id":null,"parameterSlots":1,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":1729,"id":2001,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_6124":{"entryPoint":1274,"id":2001,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6040610160815234620004d95762000019610160620004de565b6017610160527f506572666f726d616e636541677265656d656e744e46540000000000000000006101805280516200005181620004de565b600181526020810191603160f81b83528051926200006f84620004de565b601484527f506572666f726d616e636541677265656d656e7400000000000000000000000060208501528151620000a681620004de565b6008815267504552464147524d60c01b602082015284516001600160401b038111620002d05760005495600187811c97168015620004ce575b6020881014620003c2578190601f9788811162000478575b50602090888311600114620003ef57600092620003e3575b50508160011b916000199060031b1c1916176000555b8051906001600160401b038211620002d057600154600181811c91168015620003d8575b6020821014620003c25786811162000377575b5060209582116001146200030a57948192939495600092620002fe575b50508160011b916000199060031b1c1916176001555b3315620002e65760078054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3620001e6610160620004fa565b610120908152620001f784620006c1565b916101409283526101605160206101600120948560e05251902093610100948086524660a05284519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528683015260608201524660808201523060a082015260a0815260c081019481861060018060401b03871117620002d0578590525190206080523060c0526001600b55613d4f93846200087a853960805184613824015260a051846138ef015260c051846137ee015260e0518461387301525183613899015251826110610152518161108a0152f35b634e487b7160e01b600052604160045260246000fd5b8151631e4fbdf760e01b815260006004820152602490fd5b01519050388062000179565b601f19821695600160005260206000209160005b8881106200035e5750836001959697981062000344575b505050811b016001556200018f565b015160001960f88460031b161c1916905538808062000335565b919260206001819286850151815501940192016200031e565b600160005260206000208780850160051c82019260208610620003b8575b0160051c01905b818110620003ab57506200015c565b600081556001016200039c565b9250819262000395565b634e487b7160e01b600052602260045260246000fd5b90607f169062000149565b0151905038806200010f565b60008080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b8181106200045f575090846001959493921062000445575b505050811b0160005562000125565b015160001960f88460031b161c1916905538808062000436565b929360206001819287860151815501950193016200041e565b9091506000805260206000208880850160051c82019260208610620004c4575b9085949392910160051c01905b818110620004b45750620000f7565b60008155849350600101620004a5565b9250819262000498565b96607f1696620000df565b600080fd5b604081019081106001600160401b03821117620002d057604052565b805160209081811015620005975750601f8251116200053657808251920151908083106200052757501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b8285106200057d575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000559565b906001600160401b038211620002d057600854926001938481811c91168015620006b6575b83821014620003c257601f81116200067c575b5081601f841160011462000610575092829391839260009462000604575b50501b916000199060031b1c19161760085560ff90565b015192503880620005ed565b919083601f198116600860005284600020946000905b8883831062000661575050501062000647575b505050811b0160085560ff90565b015160001960f88460031b161c1916905538808062000639565b85870151885590960195948501948793509081019062000626565b600860005284601f84600020920160051c820191601f860160051c015b828110620006a9575050620005cf565b6000815501859062000699565b90607f1690620005bc565b8051602090818110156200074f5750601f825111620006ee57808251920151908083106200052757501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b82851062000735575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935062000711565b906001600160401b038211620002d057600954926001938481811c911680156200086e575b83821014620003c257601f811162000834575b5081601f8411600114620007c85750928293918392600094620007bc575b50501b916000199060031b1c19161760095560ff90565b015192503880620007a5565b919083601f198116600960005284600020946000905b88838310620008195750505010620007ff575b505050811b0160095560ff90565b015160001960f88460031b161c19169055388080620007f1565b858701518855909601959485019487935090810190620007de565b600960005284601f84600020920160051c820191601f860160051c015b8281106200086157505062000787565b6000815501859062000851565b90607f16906200077456fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146129ee5750806306fdde031461294b578063081812fc1461290d578063095ea7b31461282657806323b872dd1461280f5780632b95da6614611fe057806342842e0e14611fb25780634f9f6fe614611d5b5780635eb37a31146112275780636352211e146111f757806370a082311461119e578063715018a61461114157806384b0196e146110485780638da5cb5b1461101f57806395d89b4114610f40578063a22cb46514610e9b578063a5c1674e14610dc0578063b88d4fde14610d53578063c2b7b86814610c8e578063c87b56dd1461064e578063cac5c51214610468578063e985e9c514610412578063f2fde38b146103895763fefa92911461012757600080fd5b34610384576020806003193601126103845760043590816000526002815260018060a01b0361015e816040600020541615156135ab565b82600052600a82526102656040600020916040519061017c82612b69565b6040516101948161018d8188612caf565b0382612bd6565b82526040516101aa8161018d8160018901612caf565b8583015263ffffffff60028501546001600160401b038116604085015260401c1660608301526040516101e48161018d8160038901612caf565b60808301526040516101fd8161018d8160048901612caf565b60a0830152808060058601541660c08401908152816006870154169360e0810194855261014060ff600860078a0154996101009a8b860152015481811661024381612b49565b61012085015260081c16151591015251163314918215610376575b50506135eb565b82600052600a82526040600020906008820190815460ff811661028781612b49565b60018114908115610362575b501561031d5760ff8160081c166102e55761ff001916179055600701546040805191825233928201929092527feb79e24102009f0d7f1eb4227511a0c5c61db03f1560911df6ebc1710f0d82d19190a2005b60405162461bcd60e51b815260048101869052601060248201526f105b1c9958591e481c9958dbdc99195960821b6044820152606490fd5b60405162461bcd60e51b815260048101869052601a60248201527f496e76616c69642073746174757320666f72207061796d656e740000000000006044820152606490fd5b6003915061036f81612b49565b1438610293565b90915051163314388061025e565b600080fd5b34610384576020366003190112610384576103a2612abb565b6103aa612c49565b6001600160a01b039081169081156103f957600754826001600160601b0360a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346103845760403660031901126103845761042b612abb565b610433612ad1565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b34610384576020806003193601126103845760043590816000526002815261059b60018060a01b036104a2816040600020541615156135ab565b83600052600a8352604060002090806040516104bd81612b69565b6040516104ce8161018d8188612caf565b81526040516104e48161018d8160018901612caf565b8682015263ffffffff60028501546001600160401b038116604084015260401c16606082015260405161051e8161018d8160038901612caf565b60808201526040516105378161018d8160048901612caf565b60a0820152816005850154169060c0810191825261014060ff6008856006890154169760e085019889526007810154610100860152015481811661057a81612b49565b61012085015260081c161515910152511633149182156106405750506135eb565b81600052600a815260086040600020019081549160ff8316926105bd84612b49565b8361060e576060927fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e94926001809360ff19161790556040519261060081612b49565b8352820152336040820152a2005b60405162461bcd60e51b815260048101849052600a6024820152694261642073746174757360b01b6044820152606490fd5b90915051163314848061025e565b3461038457602036600319011261038457600435600090815260026020526040902054610685906001600160a01b031615156135ab565b600435600052600a602052604060002060ff6008604051926106a684612b69565b6040516106b78161018d8185612caf565b84526040516106cd8161018d8160018601612caf565b602085015263ffffffff60028201546001600160401b038116604087015260401c1660608501526040516107088161018d8160038601612caf565b60808501526040516107218161018d8160048601612caf565b60a085015260058101546001600160a01b0390811660c086015260068201541660e08501526007810154610100850152015461075e828216612b49565b81811661012084015260081c16151561014082015261077e600435613a0d565b9080519160208201519261079e6001600160401b03604085015116613a0d565b926107b263ffffffff606083015116613a0d565b9460808201519560a0830151936107d460018060a01b0360c086015116613b50565b60e08501519091906107ee906001600160a01b0316613b50565b916107fd610100870151613a0d565b9861014061081861012089015161081381612b49565b613c54565b97015115610c6a5760405161082c81612ba0565b60048152637472756560e01b6020820152975b6040519b8c809b60208201607b60f81b9052602182017f226e616d65223a22506572666f726d616e63652041677265656d656e74202300905280516040819301916020019161088d92612a73565b61088b60f21b908c01604081018290527f226465736372697074696f6e223a2241677265656d656e74206265747765656e60428201527f2061727469737420616e642076656e756520666f72206120706572666f726d6160628201526b1b98d948195d995b9d0b888b60a21b60828201526c113b32b73ab2a730b6b2911d1160991b608e820152865191998a97889693919290610933908390609b840190602001612a73565b0185609b8201526f113b32b73ab2a0b2323932b9b9911d1160811b609d8201528151918260ad8301916020019161096992612a73565b018460ad8201526b1139ba30b93a2a34b6b2911d60a11b60af8201528151918260bb8301916020019161099b92612a73565b0196600b60fa1b978860bb8201527111323ab930ba34b7b726b4b73aba32b9911d60711b60bc8201528151918260ce830191602001916109da92612a73565b018760ce820152751130b93a34b9ba29b7b1b4b0b62430b7323632911d1160511b60cf8201528151918260e583019160200191610a1692612a73565b018260e582015274113b32b73ab2a9b7b1b4b0b62430b7323632911d1160591b60e78201528151918260fc83019160200191610a5192612a73565b018160fc8201526f1130b93a34b9ba2bb0b63632ba111d1160811b60fe82015282519061010e93828583019160200191610a8a92612a73565b01918201526e113b32b73ab2abb0b63632ba111d1160891b61011082015282519061011f93828583019160200191610ac192612a73565b019182015261012181017f227061796d656e74416d6f756e7455736443656e7473223a0000000000000000905286519061013997828983019160200191610b0792612a73565b019086820152691139ba30ba3ab9911d1160b11b61013a82015282519061014493828583019160200191610b3a92612a73565b019182015271113830bcb6b2b73a2932b1b7b93232b2111d60711b61014682015281519061015892828483019160200191610b7492612a73565b01908101607d60f81b905203908101825261015901610b939082612bd6565b604051610b9f81612bbb565b60408082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f90820152610bf891613915565b6040518091602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191610c3a92612a73565b810103601d81018252603d01610c509082612bd6565b60405180916020825260208201610c6691612a96565b0390f35b604051610c7681612ba0565b600581526466616c736560d81b60208201529761083f565b3461038457602036600319011261038457600435610caa612c49565b80600052600a6020526008604060002001805460ff8116610cca81612b49565b60028103610d1f577fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e92600360609360ff191617905560405190610d0d81612b49565b815260036020820152336040820152a2005b60405162461bcd60e51b815260206004820152600c60248201526b139bdd08191a5cdc1d5d195960a21b6044820152606490fd5b3461038457608036600319011261038457610d6c612abb565b610d74612ad1565b90604435606435926001600160401b038411610384573660238501121561038457610dac610dbe943690602481600401359101612c12565b92610db8838383612d45565b33612f1f565b005b346103845760208060031936011261038457600435908160005260028152610dfa60018060a01b036104a2816040600020541615156135ab565b81600052600a815260086040600020019081549160ff831692610e1c84612b49565b60018403610e62576060927fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e94926002809360ff19161790556040519261060081612b49565b60405162461bcd60e51b8152600481018490526011602482015270135d5cdd0818994818dbdb5c1b195d1959607a1b6044820152606490fd5b3461038457604036600319011261038457610eb4612abb565b60243590811515809203610384576001600160a01b0316908115610f2757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b346103845760003660031901126103845760405160006001805490610f6482612c75565b80855291818116908115610ff85750600114610f9f575b610c6684610f8b81860382612bd6565b604051918291602083526020830190612a96565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610fe0575050508101602001610f8b82610f7b565b80546020858701810191909152909301928101610fc8565b60ff191660208087019190915292151560051b85019092019250610f8b9150839050610f7b565b34610384576000366003190112610384576007546040516001600160a01b039091168152602090f35b34610384576000366003190112610384576110f16110857f000000000000000000000000000000000000000000000000000000000000000061306d565b6110ae7f0000000000000000000000000000000000000000000000000000000000000000613169565b90604051906110bc82612b85565b60008252604051938493600f60f81b85526110e360209360e08588015260e0870190612a96565b908582036040870152612a96565b466060850152306080850152600060a085015283810360c085015281808451928381520193019160005b82811061112a57505050500390f35b83518552869550938101939281019260010161111b565b346103845760003660031901126103845761115a612c49565b600780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610384576020366003190112610384576001600160a01b036111bf612abb565b1680156111de5760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b34610384576020366003190112610384576020611215600435612ee4565b6040516001600160a01b039091168152f35b3461038457600319604036820112610384576001600160401b0360043511610384576101209060043536030112610384576024356001600160401b03811161038457611277903690600401612b1c565b6001600160a01b0361128d60043560e401613629565b163303611d16576001600160a01b036112aa60043560c401613629565b16151580611cf7575b15611cc3576112c660446004350161363d565b906201517f194201428111611cad576114ab936112f361149c926001600160401b036114a2961611613255565b63ffffffff611306606460043501613651565b16151580611c89575b61131890613296565b61132a610104600435013515156132d5565b604261134461133d600480350180613662565b3691612c12565b6020815191012061136261133d602460043501600435600401613662565b6020815191012061137760446004350161363d565b611385606460043501613651565b61139c61133d608460043501600435600401613662565b602081519101206113ba61133d60a460043501600435600401613662565b602081519101209063ffffffff6113d560c460043501613629565b936001600160401b036113ec60e460043501613629565b966040519860208a019a7fa0a878e5693a37f578742a15a4cb856f692aae1e9fd056facc2c1eda5a9856198c5260408b015260608a01521660808801521660a086015260c085015260e084015260018060a01b031661010083015260018060a01b03166101208201526101046004350135610140820152610140815261147181612b69565b51902061147c6137eb565b906040519161190160f01b83526002830152602282015220923691612c12565b90613694565b90929192613760565b6001600160a01b036114c160043560c401613629565b166001600160a01b0390911603611c4d57600b546114de81613317565b600b556114ef600480350180613662565b919061150360048035602481019101613662565b9061151260446004350161363d565b611520606460043501613651565b61153260048035608481019101613662565b90916115466004803560a481019101613662565b94909560043560c40161155890613629565b9761156760e460043501613629565b996040519c6115758e612b69565b369061158092612c12565b8c52369061158d92612c12565b60208b01526001600160401b031660408a015263ffffffff16606089015236906115b692612c12565b608087015236906115c692612c12565b60a08501526001600160a01b0390811660c08501521660e08301526101046004350135610100830152600061012083018190526101408301819052818152600a6020526040902082518051909391906001600160401b038111611a025761162d8254612c75565b601f8111611c09575b506020601f8211600114611ba2578192939495600092611b97575b50508160011b916000199060031b1c19161781555b60208201519283516001600160401b038111611a02576116896001840154612c75565b601f8111611b50575b506020601f8211600114611ae1578192939495600092611ad6575b50508160011b916000199060031b1c19161760018301555b600282016001600160401b0360408501511681549063ffffffff60401b606087015160401b16916001600160601b0319161717905560808301519283516001600160401b038111611a025761171d6003850154612c75565b601f8111611a8f575b50602094601f8211600114611a2357948192939495600092611a18575b50508160011b916000199060031b1c19161760038401555b60a08101519283516001600160401b038111611a025761177e6004830154612c75565b94601f86116119bb575b602095508590601f8311600114611943579282610140936008936118419796600092611938575b50508160011b916000199060031b1c19161760048201555b60c08401516005820180546001600160a01b039283166001600160a01b03199182161790915560e08601516006840180549190931691161790556101008401516007820155610120840151910192906118299061182381612b49565b84613326565b0151815461ff00191690151560081b61ff0016179055565b6118588161185360c460043501613629565b61337d565b61186660c460043501613629565b61187460e460043501613629565b827f0763e2255b3b46191fc14c005e2188d8639d751a03006384eafac51fd64e910f6118a4600480350180613662565b936118dd6118b660446004350161363d565b6040516001600160a01b03938416989093169692938493600435610104013592918561333e565b0390a46118ee60e460043501613629565b906118fd60c460043501613629565b604051926001600160a01b039182169116827f9fbbd042184db7e95eaea0fdb4bb4a737167f1aaccd0d365742157ece5453102600080a48152f35b0151905089806117af565b9060048401600052866000209160005b601f19851681106119a457508360089361184197969360019361014097601f1981161061198b575b505050811b0160048201556117c7565b015160001960f88460031b161c1916905589808061197b565b919288600181928685015181550194019201611953565b600483016000526020600020601f830160051c8101602084106119fb575b601f880160051c820181106119ef575050611788565b600081556001016119d9565b50806119d9565b634e487b7160e01b600052604160045260246000fd5b015190508580611743565b601f198216956003860160005260206000209160005b888110611a7757508360019596979810611a5e575b505050811b01600384015561175b565b015160001960f88460031b161c19169055858080611a4e565b91926020600181928685015181550194019201611a39565b600385016000526020600020601f830160051c810160208410611acf575b601f830160051c82018110611ac3575050611726565b60008155600101611aad565b5080611aad565b0151905085806116ad565b6001840160005260206000209060005b601f1984168110611b38575060019394959683601f19811610611b1f575b505050811b0160018301556116c5565b015160001960f88460031b161c19169055858080611b0f565b9091602060018192858b015181550193019101611af1565b600184016000526020600020601f830160051c810160208410611b90575b601f830160051c82018110611b84575050611692565b60008155600101611b6e565b5080611b6e565b015190508580611651565b82600052602060002090600096601f198416975b888110611bf157508360019596979810611bd8575b505050811b018155611666565b015160001960f88460031b161c19169055858080611bcb565b91926020600181928685015181550194019201611bb6565b826000526020600020601f830160051c810160208410611c46575b601f830160051c82018110611c3a575050611636565b60008155600101611c24565b5080611c24565b60405162461bcd60e51b815260206004820152601460248201527342616420617274697374207369676e617475726560601b6044820152606490fd5b506113186105a063ffffffff611ca3606460043501613651565b161115905061130f565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b506001600160a01b03611d0e60043560e401613629565b1615156112b3565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206e6f742076656e75652077616c6c65740000000000000000006044820152606490fd5b34610384576020366003190112610384576004356000610140604051611d8081612b69565b606081526060602082015282604082015282606082015260606080820152606060a08201528260c08201528260e082015282610100820152826101208201520152806000526002602052611de260018060a01b036040600020541615156135ab565b600052600a602052604060002060ff600860405192611e0084612b69565b604051611e118161018d8185612caf565b8452604051611e278161018d8160018601612caf565b602085015263ffffffff60028201546001600160401b038116604087015260401c166060850152604051611e628161018d8160038601612caf565b6080850152604051611e7b8161018d8160048601612caf565b60a085015260058101546001600160a01b0390811660c086015260068201541660e085015260078101546101008501520154611eb8828216612b49565b81811661012084015260081c161515610140820152604051809160208252610140611f5f611ef483516101606020870152610180860190612a96565b611f4a611f13602086015192601f1993848983030160408a0152612a96565b6001600160401b03604087015116606088015263ffffffff60608701511660808801526080860151838883030160a0890152612a96565b9060a0850151908683030160c0870152612a96565b9160018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151610120850152610120810151611fa081612b49565b82850152015115156101608301520390f35b3461038457610dbe611fc336612ae7565b9060405192611fd184612b85565b60008452610db8838383612d45565b3461038457610120366003190112610384576004356001600160401b03811161038457612011903690600401612b1c565b906024356001600160401b03811161038457612031903690600401612b1c565b9290916001600160401b0360443516604435036103845760643563ffffffff81168103610384576084356001600160401b03811161038457612077903690600401612b1c565b9060a4356001600160401b03811161038457612097903690600401612b1c565b909390929060c4356001600160a01b03811690036103845760e4356001600160a01b03811690036103845760c4356001600160a01b0316156127d55760e4356001600160a01b03161561279c57426201517f19810111611cad5761210d426201517f19016044356001600160401b031611613255565b63ffffffff811615158061278a575b61212590613296565b6121336101043515156132d5565b600b549761214089613317565b600b55604051996121508b612b69565b61215b368a8a612c12565b8b52369061216892612c12565b60208a01526044356001600160401b031660408a015263ffffffff166060890152369061219492612c12565b608087015236906121a492612c12565b60a08501526001600160a01b0360c435811660c086015260e4351660e085015261010435610100850152600061012085018190526101408501819052838152600a6020526040902084518051919591906001600160401b038211611a0257819061220e8854612c75565b601f811161273a575b50602090601f83116001146126ce576000926126c3575b50508160011b916000199060031b1c19161785555b60208101518051906001600160401b038211611a025781906122686001890154612c75565b601f8111612670575b50602090601f83116001146125fe576000926125f3575b50508160011b916000199060031b1c19161760018601555b600285016001600160401b0360408301511681549063ffffffff60401b606085015160401b16916001600160601b0319161717905560808101518051906001600160401b038211611a025781906122fa6003890154612c75565b601f81116125a0575b50602090601f831160011461253357600092612528575b50508160011b916000199060031b1c19161760038601555b60a08101519485516001600160401b038111611a02576123556004830154612c75565b96601f88116124e1575b602097508790601f831160011461246a579282610140936008936123fa979660009261245f575050600019600383901b1c191660019190911b17600482015560c08401516005820180546001600160a01b039283166001600160a01b03199182161790915560e08601516006840180549190931691161790556101008401516007820155610120840151910192906118299061182381612b49565b612404833361337d565b827f0763e2255b3b46191fc14c005e2188d8639d751a03006384eafac51fd64e910f6040518061245460018060a01b0360e435169660018060a01b0360c43516966101043591604435918561333e565b0390a4604051908152f35b015190508b806117af565b9060048401600052886000209160005b601f19851681106124ca5750836008936123fa97969360019361014097601f198116106124b157505050811b0160048201556117c7565b015160001960f88460031b161c191690558b808061197b565b91928a60018192868501518155019401920161247a565b600483016000526020600020601f830160051c810160208410612521575b601f8a0160051c8201811061251557505061235f565b600081556001016124ff565b50806124ff565b01519050878061231a565b600389016000908152602081209350601f198516905b818110612588575090846001959493921061256f575b505050811b016003860155612332565b015160001960f88460031b161c1916905587808061255f565b92936020600181928786015181550195019301612549565b909150600388016000526020600020601f840160051c8101602085106125ec575b90849392915b601f830160051c820181106125dd575050612303565b600081558594506001016125c7565b50806125c1565b015190508780612288565b9250600188016000526020600020906000935b601f1984168510612655576001945083601f1981161061263c575b505050811b0160018601556122a0565b015160001960f88460031b161c1916905587808061262c565b81810151835560209485019460019093019290910190612611565b909150600188016000526020600020601f840160051c8101602085106126bc575b90849392915b601f830160051c820181106126ad575050612271565b60008155859450600101612697565b5080612691565b01519050878061222e565b9250876000526020600020906000935b601f198416851061271f576001945083601f19811610612706575b505050811b018555612243565b015160001960f88460031b161c191690558780806126f9565b818101518355602094850194600190930192909101906126de565b909150876000526020600020601f840160051c810160208510612783575b90849392915b601f830160051c82018110612774575050612217565b6000815585945060010161275e565b5080612758565b506105a063ffffffff8216111561211c565b60405162461bcd60e51b815260206004820152601160248201527056656e75652077616c6c6574207a65726f60781b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714172746973742077616c6c6574207a65726f60701b6044820152606490fd5b3461038457610dbe61282036612ae7565b91612d45565b346103845760403660031901126103845761283f612abb565b60243561284b81612ee4565b331515806128fa575b806128cd575b6128b5576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561285a565b506001600160a01b038116331415612854565b346103845760203660031901126103845760043561292a81612ee4565b506000526004602052602060018060a01b0360406000205416604051908152f35b34610384576000366003190112610384576040516000805461296c81612c75565b80845290600190818116908115610ff8575060011461299557610c6684610f8b81860382612bd6565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106129d6575050508101602001610f8b82610f7b565b805460208587018101919091529093019281016129be565b34610384576020366003190112610384576004359063ffffffff60e01b821680920361038457602091632483248360e11b8114908115612a30575b5015158152f35b6380ac58cd60e01b811491508115612a62575b8115612a51575b5083612a29565b6301ffc9a760e01b14905083612a4a565b635b5e139f60e01b81149150612a43565b60005b838110612a865750506000910152565b8181015183820152602001612a76565b90602091612aaf81518092818552858086019101612a73565b601f01601f1916010190565b600435906001600160a01b038216820361038457565b602435906001600160a01b038216820361038457565b6060906003190112610384576001600160a01b0390600435828116810361038457916024359081168103610384579060443590565b9181601f84011215610384578235916001600160401b038311610384576020838186019501011161038457565b60041115612b5357565b634e487b7160e01b600052602160045260246000fd5b61016081019081106001600160401b03821117611a0257604052565b602081019081106001600160401b03821117611a0257604052565b604081019081106001600160401b03821117611a0257604052565b606081019081106001600160401b03821117611a0257604052565b90601f801991011681019081106001600160401b03821117611a0257604052565b6001600160401b038111611a0257601f01601f191660200190565b929192612c1e82612bf7565b91612c2c6040519384612bd6565b829481845281830111610384578281602093846000960137010152565b6007546001600160a01b03163303612c5d57565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015612ca5575b6020831014612c8f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612c84565b9060009291805491612cc083612c75565b918282526001938481169081600014612d225750600114612ce2575b50505050565b90919394506000526020928360002092846000945b838610612d0e575050505001019038808080612cdc565b805485870183015294019385908201612cf7565b9294505050602093945060ff191683830152151560051b01019038808080612cdc565b6001600160a01b039182169290918315612ecb57600092828452826020956002875260409684888820541696879133151580612e35575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284612e02575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303612de15750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055612da8565b91939450915080612e8a575b15612e5157859291879138612d7c565b878688612e6e576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015612eaf575b80612e415750858252600481523385898420541614612e41565b5086825260058152878220338352815260ff8883205416612e95565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115612f07575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b612f31575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590612f7e906084830190612a96565b039483816000978189895af1869181613029575b50612ff3575050503d600014612fea573d612fac81612bf7565b90612fba6040519283612bd6565b81528093823d92013e5b82519283612fe557604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250612fc4565b919450915063ffffffff60e01b160361301157503880808080612f2a565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311613066575b6130418183612bd6565b8101031261306257516001600160e01b031981168103613062579038612f92565b8680fd5b503d613037565b60ff81146130ab5760ff811690601f8211613099576040519161308f83612ba0565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516008548160006130be83612c75565b8083529260019081811690811561314757506001146130e8575b506130e592500382612bd6565b90565b6008600090815291507ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b84831061312c57506130e59350508101602001386130d8565b81935090816020925483858901015201910190918492613113565b9050602092506130e594915060ff191682840152151560051b820101386130d8565b60ff811461318b5760ff811690601f8211613099576040519161308f83612ba0565b5060405160095481600061319e83612c75565b8083529260019081811690811561314757506001146131c457506130e592500382612bd6565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061320857506130e59350508101602001386130d8565b819350908160209254838589010152019101909184926131ef565b9061322d82612bf7565b61323a6040519182612bd6565b828152809261324b601f1991612bf7565b0190602036910137565b1561325c57565b60405162461bcd60e51b815260206004820152601260248201527114dd185c9d081d1a5b59481d1bdbc81bdb1960721b6044820152606490fd5b1561329d57565b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b6044820152606490fd5b156132dc57565b60405162461bcd60e51b815260206004820152601360248201527205061796d656e74206d757374206265203e203606c1b6044820152606490fd5b6000198114611cad5760010190565b9061333081612b49565b60ff80198354169116179055565b906080836040946001600160401b03939897969860608652816060870152838601376000828286010152601f8019910116830101951660208201520152565b6040805161338a81612b85565b6000808252936001600160a01b038481169490929085156135935782875260209360028552858820541683878215159283613560575b818b5260038852888b2080546001019055828b5260028852888b2080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b80a4613548573b613421575b505050505050565b8261345f918596979894955180938192630a85bd0160e11b968784523360048501528c60248501526044840152608060648401526084830190612a96565b03818a8a5af1879181613504575b506134cd575050503d6000146134c4573d61348781612bf7565b9061349484519283612bd6565b81528094823d92013e5b835193846134be578251633250574960e11b815260048101859052602490fd5b84925001fd5b6060935061349e565b919550915063ffffffff60e01b16036134ed575050388080808080613419565b602492505190633250574960e11b82526004820152fd5b9091508481813d8311613541575b61351c8183612bd6565b8101031261353d57516001600160e01b03198116810361353d57903861346d565b8780fd5b503d613512565b84516339e3563760e11b815260048101889052602490fd5b600083815260046020526040902080546001600160a01b0319169055808b5260038852888b2080546000190190556133c0565b8451633250574960e11b815260048101889052602490fd5b156135b257565b60405162461bcd60e51b81526020600482015260116024820152702737b732bc34b9ba32b73a103a37b5b2b760791b6044820152606490fd5b156135f257565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081c185c9d1a58da5c185b9d608a1b6044820152606490fd5b356001600160a01b03811681036103845790565b356001600160401b03811681036103845790565b3563ffffffff811681036103845790565b903590601e198136030182121561038457018035906001600160401b0382116103845760200191813603831361038457565b81519190604183036136c5576136be92506020820151906060604084015193015160001a906136d0565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161375457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156137485780516001600160a01b0381161561373f57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b61376981612b49565b80613772575050565b61377b81612b49565b600181036137955760405163f645eedf60e01b8152600490fd5b61379e81612b49565b600281036137bf5760405163fce698f760e01b815260048101839052602490fd5b806137cb600392612b49565b146137d35750565b602490604051906335e2f38360e21b82526004820152fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806138ec575b15613846577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c081018181106001600160401b03821117611a025760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461381d565b8051156139f8578051600291828201809211611cad576003918290046001600160fe1b0381168103611cad5761394e908495941b613223565b936020850193829183518401906020820192835194600085525b8381106139a757505050505251068060011461399457600214613989575090565b603d90600019015390565b50603d9081600019820153600119015390565b87600491999293949901918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151898201530197929190613968565b5050604051613a0681612b85565b6000815290565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613b42575b506d04ee2d6d415b85acef810000000080831015613b33575b50662386f26fc1000080831015613b24575b506305f5e10080831015613b15575b5061271080831015613b06575b506064821015613af6575b600a80921015613aec575b600190816021613aa4828701613223565b95860101905b613ab6575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215613ae757919082613aaa565b613aaf565b9160010191613a93565b9190606460029104910191613a88565b60049193920491019138613a7d565b60089193920491019138613a70565b60109193920491019138613a61565b60209193920491019138613a4f565b604093508104915038613a36565b604051906001600160a01b031680613b6783612bbb565b602a835260208084016040368237845115613c3e5760309053835190600191821015613c3e5790607860218601536029915b818311613bca57505050613bab575090565b6044906040519063e22e27eb60e01b8252600482015260146024820152fd5b909192600f81166010811015613c29578651851015613c29576f181899199a1a9b1b9c1cb0b131b232b360811b901a86850183015360041c928015613c1457600019019190613b99565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b634e487b7160e01b600052603260045260246000fd5b613c5d81612b49565b8015613cf357613c6c81612b49565b60018114613ccd5780613c80600292612b49565b14613ca957604051613c9181612ba0565b600881526714995cdbdb1d995960c21b602082015290565b604051613cb581612ba0565b6008815267111a5cdc1d5d195960c21b602082015290565b50604051613cda81612ba0565b600981526810dbdb5c1b195d195960ba1b602082015290565b50604051613d0081612ba0565b600981526814d8da19591d5b195960ba1b60208201529056fea26469706673582212206d3fcae5af30056254185369b89aa80785c2ed92a43cf946fab3def444aad18564736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH2 0x160 DUP2 MSTORE CALLVALUE PUSH3 0x4D9 JUMPI PUSH3 0x19 PUSH2 0x160 PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x17 PUSH2 0x160 MSTORE PUSH32 0x506572666F726D616E636541677265656D656E744E4654000000000000000000 PUSH2 0x180 MSTORE DUP1 MLOAD PUSH3 0x51 DUP2 PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x31 PUSH1 0xF8 SHL DUP4 MSTORE DUP1 MLOAD SWAP3 PUSH3 0x6F DUP5 PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x14 DUP5 MSTORE PUSH32 0x506572666F726D616E636541677265656D656E74000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE DUP2 MLOAD PUSH3 0xA6 DUP2 PUSH3 0x4DE JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x504552464147524D PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x2D0 JUMPI PUSH1 0x0 SLOAD SWAP6 PUSH1 0x1 DUP8 DUP2 SHR SWAP8 AND DUP1 ISZERO PUSH3 0x4CE JUMPI JUMPDEST PUSH1 0x20 DUP9 LT EQ PUSH3 0x3C2 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP8 DUP9 DUP2 GT PUSH3 0x478 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH3 0x3EF JUMPI PUSH1 0x0 SWAP3 PUSH3 0x3E3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2D0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x3D8 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x3C2 JUMPI DUP7 DUP2 GT PUSH3 0x377 JUMPI JUMPDEST POP PUSH1 0x20 SWAP6 DUP3 GT PUSH1 0x1 EQ PUSH3 0x30A JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x2FE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x2E6 JUMPI PUSH1 0x7 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH3 0x1E6 PUSH2 0x160 PUSH3 0x4FA JUMP JUMPDEST PUSH2 0x120 SWAP1 DUP2 MSTORE PUSH3 0x1F7 DUP5 PUSH3 0x6C1 JUMP JUMPDEST SWAP2 PUSH2 0x140 SWAP3 DUP4 MSTORE PUSH2 0x160 MLOAD PUSH1 0x20 PUSH2 0x160 ADD KECCAK256 SWAP5 DUP6 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 SWAP4 PUSH2 0x100 SWAP5 DUP1 DUP7 MSTORE CHAINID PUSH1 0xA0 MSTORE DUP5 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE DUP7 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP5 DUP2 DUP7 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP8 GT OR PUSH3 0x2D0 JUMPI DUP6 SWAP1 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xB SSTORE PUSH2 0x3D4F SWAP4 DUP5 PUSH3 0x87A DUP6 CODECOPY PUSH1 0x80 MLOAD DUP5 PUSH2 0x3824 ADD MSTORE PUSH1 0xA0 MLOAD DUP5 PUSH2 0x38EF ADD MSTORE PUSH1 0xC0 MLOAD DUP5 PUSH2 0x37EE ADD MSTORE PUSH1 0xE0 MLOAD DUP5 PUSH2 0x3873 ADD MSTORE MLOAD DUP4 PUSH2 0x3899 ADD MSTORE MLOAD DUP3 PUSH2 0x1061 ADD MSTORE MLOAD DUP2 PUSH2 0x108A ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x179 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x35E JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x344 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 SSTORE PUSH3 0x18F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x335 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x31E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH3 0x3B8 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x3AB JUMPI POP PUSH3 0x15C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x39C JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x395 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x149 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x10F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x45F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x445 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE PUSH3 0x125 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x436 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x41E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH3 0x4C4 JUMPI JUMPDEST SWAP1 DUP6 SWAP5 SWAP4 SWAP3 SWAP2 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x4B4 JUMPI POP PUSH3 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x4A5 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x498 JUMP JUMPDEST SWAP7 PUSH1 0x7F AND SWAP7 PUSH3 0xDF JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x2D0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x597 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x536 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x527 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x57D JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x559 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2D0 JUMPI PUSH1 0x8 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x6B6 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3C2 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x67C JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x610 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x604 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x5ED JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x661 JUMPI POP POP POP LT PUSH3 0x647 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x639 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x626 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x6A9 JUMPI POP POP PUSH3 0x5CF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x699 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x5BC JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x74F JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x6EE JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x527 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH3 0x735 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH3 0x711 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x2D0 JUMPI PUSH1 0x9 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x86E JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x3C2 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x834 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x7C8 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x7BC JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x7A5 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x9 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x819 JUMPI POP POP POP LT PUSH3 0x7FF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7F1 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x7DE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x861 JUMPI POP POP PUSH3 0x787 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x851 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x774 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x29EE JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x294B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x290D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2826 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280F JUMPI DUP1 PUSH4 0x2B95DA66 EQ PUSH2 0x1FE0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FB2 JUMPI DUP1 PUSH4 0x4F9F6FE6 EQ PUSH2 0x1D5B JUMPI DUP1 PUSH4 0x5EB37A31 EQ PUSH2 0x1227 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x11F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1141 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1048 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF40 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xE9B JUMPI DUP1 PUSH4 0xA5C1674E EQ PUSH2 0xDC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xD53 JUMPI DUP1 PUSH4 0xC2B7B868 EQ PUSH2 0xC8E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xCAC5C512 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI PUSH4 0xFEFA9291 EQ PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x15E DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x265 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17C DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 DUP2 PUSH2 0x18D DUP2 DUP9 PUSH2 0x2CAF JUMP JUMPDEST SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AA DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST DUP6 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E4 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1FD DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE DUP1 DUP1 PUSH1 0x5 DUP7 ADD SLOAD AND PUSH1 0xC0 DUP5 ADD SWAP1 DUP2 MSTORE DUP2 PUSH1 0x6 DUP8 ADD SLOAD AND SWAP4 PUSH1 0xE0 DUP2 ADD SWAP5 DUP6 MSTORE PUSH2 0x140 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP11 ADD SLOAD SWAP10 PUSH2 0x100 SWAP11 DUP12 DUP7 ADD MSTORE ADD SLOAD DUP2 DUP2 AND PUSH2 0x243 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE MLOAD AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x376 JUMPI JUMPDEST POP POP PUSH2 0x35EB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x287 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x362 JUMPI JUMPDEST POP ISZERO PUSH2 0x31D JUMPI PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x2E5 JUMPI PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x7 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xEB79E24102009F0D7F1EB4227511A0C5C61DB03F1560911DF6EBC1710F0D82D1 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C9958DBDC991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746174757320666F72207061796D656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SWAP2 POP PUSH2 0x36F DUP2 PUSH2 0x2B49 JUMP JUMPDEST EQ CODESIZE PUSH2 0x293 JUMP JUMPDEST SWAP1 SWAP2 POP MLOAD AND CALLER EQ CODESIZE DUP1 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x3A2 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x7 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x42B PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x433 PUSH2 0x2AD1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x59B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x4A2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 PUSH1 0x40 MLOAD PUSH2 0x4BD DUP2 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE DUP2 PUSH2 0x18D DUP2 DUP9 PUSH2 0x2CAF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E4 DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST DUP7 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x51E DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x537 DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0x5 DUP6 ADD SLOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD SWAP2 DUP3 MSTORE PUSH2 0x140 PUSH1 0xFF PUSH1 0x8 DUP6 PUSH1 0x6 DUP10 ADD SLOAD AND SWAP8 PUSH1 0xE0 DUP6 ADD SWAP9 DUP10 MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD DUP2 DUP2 AND PUSH2 0x57A DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE MLOAD AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x640 JUMPI POP POP PUSH2 0x35EB JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP3 PUSH2 0x5BD DUP5 PUSH2 0x2B49 JUMP JUMPDEST DUP4 PUSH2 0x60E JUMPI PUSH1 0x60 SWAP3 PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP5 SWAP3 PUSH1 0x1 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x600 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP4 MSTORE DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x42616420737461747573 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP MLOAD AND CALLER EQ DUP5 DUP1 PUSH2 0x25E JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x685 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x6A6 DUP5 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 DUP2 PUSH2 0x18D DUP2 DUP6 PUSH2 0x2CAF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6CD DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x708 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x721 DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x75E DUP3 DUP3 AND PUSH2 0x2B49 JUMP JUMPDEST DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x77E PUSH1 0x4 CALLDATALOAD PUSH2 0x3A0D JUMP JUMPDEST SWAP1 DUP1 MLOAD SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP3 PUSH2 0x79E PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND PUSH2 0x3A0D JUMP JUMPDEST SWAP3 PUSH2 0x7B2 PUSH4 0xFFFFFFFF PUSH1 0x60 DUP4 ADD MLOAD AND PUSH2 0x3A0D JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP3 ADD MLOAD SWAP6 PUSH1 0xA0 DUP4 ADD MLOAD SWAP4 PUSH2 0x7D4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP7 ADD MLOAD AND PUSH2 0x3B50 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x7EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B50 JUMP JUMPDEST SWAP2 PUSH2 0x7FD PUSH2 0x100 DUP8 ADD MLOAD PUSH2 0x3A0D JUMP JUMPDEST SWAP9 PUSH2 0x140 PUSH2 0x818 PUSH2 0x120 DUP10 ADD MLOAD PUSH2 0x813 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x3C54 JUMP JUMPDEST SWAP8 ADD MLOAD ISZERO PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH2 0x82C DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP8 JUMPDEST PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP12 PUSH1 0x20 DUP3 ADD PUSH1 0x7B PUSH1 0xF8 SHL SWAP1 MSTORE PUSH1 0x21 DUP3 ADD PUSH32 0x226E616D65223A22506572666F726D616E63652041677265656D656E74202300 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x40 DUP2 SWAP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88D SWAP3 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL SWAP1 DUP13 ADD PUSH1 0x40 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x226465736372697074696F6E223A2241677265656D656E74206265747765656E PUSH1 0x42 DUP3 ADD MSTORE PUSH32 0x2061727469737420616E642076656E756520666F72206120706572666F726D61 PUSH1 0x62 DUP3 ADD MSTORE PUSH12 0x1B98D948195D995B9D0B888B PUSH1 0xA2 SHL PUSH1 0x82 DUP3 ADD MSTORE PUSH13 0x113B32B73AB2A730B6B2911D11 PUSH1 0x99 SHL PUSH1 0x8E DUP3 ADD MSTORE DUP7 MLOAD SWAP2 SWAP10 DUP11 SWAP8 DUP9 SWAP7 SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH1 0x9B DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2A73 JUMP JUMPDEST ADD DUP6 PUSH1 0x9B DUP3 ADD MSTORE PUSH16 0x113B32B73AB2A0B2323932B9B9911D11 PUSH1 0x81 SHL PUSH1 0x9D DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xAD DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP5 PUSH1 0xAD DUP3 ADD MSTORE PUSH12 0x1139BA30B93A2A34B6B2911D PUSH1 0xA1 SHL PUSH1 0xAF DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xBB DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP7 PUSH1 0xB PUSH1 0xFA SHL SWAP8 DUP9 PUSH1 0xBB DUP3 ADD MSTORE PUSH18 0x11323AB930BA34B7B726B4B73ABA32B9911D PUSH1 0x71 SHL PUSH1 0xBC DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xCE DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DA SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP8 PUSH1 0xCE DUP3 ADD MSTORE PUSH22 0x1130B93A34B9BA29B7B1B4B0B62430B7323632911D11 PUSH1 0x51 SHL PUSH1 0xCF DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xE5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA16 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP3 PUSH1 0xE5 DUP3 ADD MSTORE PUSH21 0x113B32B73AB2A9B7B1B4B0B62430B7323632911D11 PUSH1 0x59 SHL PUSH1 0xE7 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xFC DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA51 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP2 PUSH1 0xFC DUP3 ADD MSTORE PUSH16 0x1130B93A34B9BA2BB0B63632BA111D11 PUSH1 0x81 SHL PUSH1 0xFE DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x10E SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH15 0x113B32B73AB2ABB0B63632BA111D11 PUSH1 0x89 SHL PUSH2 0x110 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x11F SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC1 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x121 DUP2 ADD PUSH32 0x227061796D656E74416D6F756E7455736443656E7473223A0000000000000000 SWAP1 MSTORE DUP7 MLOAD SWAP1 PUSH2 0x139 SWAP8 DUP3 DUP10 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP1 DUP7 DUP3 ADD MSTORE PUSH10 0x1139BA30BA3AB9911D11 PUSH1 0xB1 SHL PUSH2 0x13A DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x144 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x113830BCB6B2B73A2932B1B7B93232B2111D PUSH1 0x71 SHL PUSH2 0x146 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x158 SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB74 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP1 DUP2 ADD PUSH1 0x7D PUSH1 0xF8 SHL SWAP1 MSTORE SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x159 ADD PUSH2 0xB93 SWAP1 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9F DUP2 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F SWAP1 DUP3 ADD MSTORE PUSH2 0xBF8 SWAP2 PUSH2 0x3915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP3 MSTORE PUSH1 0x3D ADD PUSH2 0xC50 SWAP1 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0xC66 SWAP2 PUSH2 0x2A96 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC76 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP8 PUSH2 0x83F JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCAA PUSH2 0x2C49 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xCCA DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xD1F JUMPI PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP3 PUSH1 0x3 PUSH1 0x60 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD0D DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD08191A5CDC1D5D1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0xD6C PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x2AD1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x384 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x384 JUMPI PUSH2 0xDAC PUSH2 0xDBE SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2C12 JUMP JUMPDEST SWAP3 PUSH2 0xDB8 DUP4 DUP4 DUP4 PUSH2 0x2D45 JUMP JUMPDEST CALLER PUSH2 0x2F1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0xDFA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x4A2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP3 PUSH2 0xE1C DUP5 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0xE62 JUMPI PUSH1 0x60 SWAP3 PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP5 SWAP3 PUSH1 0x2 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x600 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x135D5CDD0818994818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0xEB4 PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xF27 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xF64 DUP3 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFF8 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF9F JUMPI JUMPDEST PUSH2 0xC66 DUP5 PUSH2 0xF8B DUP2 DUP7 SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0xFE0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xF8B DUP3 PUSH2 0xF7B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xF8B SWAP2 POP DUP4 SWAP1 POP PUSH2 0xF7B JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x10F1 PUSH2 0x1085 PUSH32 0x0 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x10AE PUSH32 0x0 PUSH2 0x3169 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10BC DUP3 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0xF PUSH1 0xF8 SHL DUP6 MSTORE PUSH2 0x10E3 PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP2 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x112A JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x111B JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x115A PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11BF PUSH2 0x2ABB JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x20 PUSH2 0x1215 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x3 NOT PUSH1 0x40 CALLDATASIZE DUP3 ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD GT PUSH2 0x384 JUMPI PUSH2 0x120 SWAP1 PUSH1 0x4 CALLDATALOAD CALLDATASIZE SUB ADD SLT PUSH2 0x384 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x1277 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x128D PUSH1 0x4 CALLDATALOAD PUSH1 0xE4 ADD PUSH2 0x3629 JUMP JUMPDEST AND CALLER SUB PUSH2 0x1D16 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12AA PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x3629 JUMP JUMPDEST AND ISZERO ISZERO DUP1 PUSH2 0x1CF7 JUMPI JUMPDEST ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x12C6 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST SWAP1 PUSH3 0x1517F NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x1CAD JUMPI PUSH2 0x14AB SWAP4 PUSH2 0x12F3 PUSH2 0x149C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x14A2 SWAP7 AND GT PUSH2 0x3255 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x1306 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST AND ISZERO ISZERO DUP1 PUSH2 0x1C89 JUMPI JUMPDEST PUSH2 0x1318 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x32D5 JUMP JUMPDEST PUSH1 0x42 PUSH2 0x1344 PUSH2 0x133D PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1362 PUSH2 0x133D PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1377 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH2 0x1385 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x139C PUSH2 0x133D PUSH1 0x84 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x13BA PUSH2 0x133D PUSH1 0xA4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D5 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x13EC PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x20 DUP11 ADD SWAP11 PUSH32 0xA0A878E5693A37F578742A15A4CB856F692AAE1E9FD056FACC2C1EDA5A985619 DUP13 MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE AND PUSH1 0x80 DUP9 ADD MSTORE AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x140 DUP2 MSTORE PUSH2 0x1471 DUP2 PUSH2 0x2B69 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x147C PUSH2 0x37EB JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2C12 JUMP JUMPDEST SWAP1 PUSH2 0x3694 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14C1 PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x3629 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1C4D JUMPI PUSH1 0xB SLOAD PUSH2 0x14DE DUP2 PUSH2 0x3317 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x14EF PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1503 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x24 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP1 PUSH2 0x1512 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH2 0x1520 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1532 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x84 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1546 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0xA4 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x1558 SWAP1 PUSH2 0x3629 JUMP JUMPDEST SWAP8 PUSH2 0x1567 PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP10 PUSH1 0x40 MLOAD SWAP13 PUSH2 0x1575 DUP15 PUSH2 0x2B69 JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1580 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP1 PUSH2 0x158D SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x15B6 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x15C6 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP4 ADD DUP2 SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP1 SWAP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x162D DUP3 SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C09 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BA2 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1B97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x1689 PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B50 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1AE1 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1AD6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x40 SHL PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x40 SHL AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND OR OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x171D PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A8F JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1A18 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP5 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x177E PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST SWAP5 PUSH1 0x1F DUP7 GT PUSH2 0x19BB JUMPI JUMPDEST PUSH1 0x20 SWAP6 POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1943 JUMPI SWAP3 DUP3 PUSH2 0x140 SWAP4 PUSH1 0x8 SWAP4 PUSH2 0x1841 SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x1938 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x1829 SWAP1 PUSH2 0x1823 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP5 PUSH2 0x3326 JUMP JUMPDEST ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x1853 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH2 0x337D JUMP JUMPDEST PUSH2 0x1866 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH2 0x1874 PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST DUP3 PUSH32 0x763E2255B3B46191FC14C005E2188D8639D751A03006384EAFAC51FD64E910F PUSH2 0x18A4 PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST SWAP4 PUSH2 0x18DD PUSH2 0x18B6 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD PUSH2 0x104 ADD CALLDATALOAD SWAP3 SWAP2 DUP6 PUSH2 0x333E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18EE PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP1 PUSH2 0x18FD PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 PUSH32 0x9FBBD042184DB7E95EAEA0FDB4BB4A737167F1AACCD0D365742157ECE5453102 PUSH1 0x0 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x17AF JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19A4 JUMPI POP DUP4 PUSH1 0x8 SWAP4 PUSH2 0x1841 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x198B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x17C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP3 DUP9 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x19FB JUMPI JUMPDEST PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x19EF JUMPI POP POP PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19D9 JUMP JUMPDEST POP DUP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1A77 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1A5E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP5 ADD SSTORE PUSH2 0x175B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1ACF JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1AC3 JUMPI POP POP PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AAD JUMP JUMPDEST POP DUP1 PUSH2 0x1AAD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1B38 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1B1F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x16C5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1B90 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1B84 JUMPI POP POP PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B6E JUMP JUMPDEST POP DUP1 PUSH2 0x1B6E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1651 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP7 PUSH1 0x1F NOT DUP5 AND SWAP8 JUMPDEST DUP9 DUP2 LT PUSH2 0x1BF1 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1BD8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1666 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1BCB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1BB6 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1C46 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1C3A JUMPI POP POP PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C24 JUMP JUMPDEST POP DUP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42616420617274697374207369676E6174757265 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1318 PUSH2 0x5A0 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST AND GT ISZERO SWAP1 POP PUSH2 0x130F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D0E PUSH1 0x4 CALLDATALOAD PUSH1 0xE4 ADD PUSH2 0x3629 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206E6F742076656E75652077616C6C6574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x1D80 DUP2 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1DE2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E00 DUP5 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E11 DUP2 PUSH2 0x18D DUP2 DUP6 PUSH2 0x2CAF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E27 DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E62 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E7B DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x1EB8 DUP3 DUP3 AND PUSH2 0x2B49 JUMP JUMPDEST DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x140 PUSH2 0x1F5F PUSH2 0x1EF4 DUP4 MLOAD PUSH2 0x160 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x180 DUP7 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x1F4A PUSH2 0x1F13 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 PUSH1 0x1F NOT SWAP4 DUP5 DUP10 DUP4 SUB ADD PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP8 ADD MLOAD AND PUSH1 0x60 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x60 DUP8 ADD MLOAD AND PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD DUP4 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x1FA0 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0xDBE PUSH2 0x1FC3 CALLDATASIZE PUSH2 0x2AE7 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FD1 DUP5 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xDB8 DUP4 DUP4 DUP4 PUSH2 0x2D45 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2011 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2031 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x384 JUMPI PUSH1 0x64 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2077 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2097 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x384 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x384 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x27D5 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x279C JUMPI TIMESTAMP PUSH3 0x1517F NOT DUP2 ADD GT PUSH2 0x1CAD JUMPI PUSH2 0x210D TIMESTAMP PUSH3 0x1517F NOT ADD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x3255 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND ISZERO ISZERO DUP1 PUSH2 0x278A JUMPI JUMPDEST PUSH2 0x2125 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x104 CALLDATALOAD ISZERO ISZERO PUSH2 0x32D5 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP8 PUSH2 0x2140 DUP10 PUSH2 0x3317 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP10 PUSH2 0x2150 DUP12 PUSH2 0x2B69 JUMP JUMPDEST PUSH2 0x215B CALLDATASIZE DUP11 DUP11 PUSH2 0x2C12 JUMP JUMPDEST DUP12 MSTORE CALLDATASIZE SWAP1 PUSH2 0x2168 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x2194 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x21A4 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC4 CALLDATALOAD DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE4 CALLDATALOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP6 ADD DUP2 SWAP1 MSTORE DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 MLOAD DUP1 MLOAD SWAP2 SWAP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x220E DUP9 SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x273A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x26CE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x26C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x2268 PUSH1 0x1 DUP10 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2670 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25FE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x25F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP7 ADD SSTORE JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x40 SHL PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 SHL AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND OR OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x22FA PUSH1 0x3 DUP10 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x25A0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2533 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2528 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP7 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP5 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x2355 PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST SWAP7 PUSH1 0x1F DUP9 GT PUSH2 0x24E1 JUMPI JUMPDEST PUSH1 0x20 SWAP8 POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x246A JUMPI SWAP3 DUP3 PUSH2 0x140 SWAP4 PUSH1 0x8 SWAP4 PUSH2 0x23FA SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x245F JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x1829 SWAP1 PUSH2 0x1823 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x2404 DUP4 CALLER PUSH2 0x337D JUMP JUMPDEST DUP3 PUSH32 0x763E2255B3B46191FC14C005E2188D8639D751A03006384EAFAC51FD64E910F PUSH1 0x40 MLOAD DUP1 PUSH2 0x2454 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE4 CALLDATALOAD AND SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC4 CALLDATALOAD AND SWAP7 PUSH2 0x104 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 DUP6 PUSH2 0x333E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x17AF JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x24CA JUMPI POP DUP4 PUSH1 0x8 SWAP4 PUSH2 0x23FA SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x24B1 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x17C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP3 DUP11 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x247A JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x2521 JUMPI JUMPDEST PUSH1 0x1F DUP11 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2515 JUMPI POP POP PUSH2 0x235F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24FF JUMP JUMPDEST POP DUP1 PUSH2 0x24FF JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x231A JUMP JUMPDEST PUSH1 0x3 DUP10 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2588 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x256F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP7 ADD SSTORE PUSH2 0x2332 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x255F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2549 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x25EC JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x25DD JUMPI POP POP PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x25C7 JUMP JUMPDEST POP DUP1 PUSH2 0x25C1 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2655 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x263C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP7 ADD SSTORE PUSH2 0x22A0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2611 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x26BC JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x26AD JUMPI POP POP PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2697 JUMP JUMPDEST POP DUP1 PUSH2 0x2691 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x222E JUMP JUMPDEST SWAP3 POP DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x271F JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2706 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x2243 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x26F9 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x26DE JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2783 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2774 JUMPI POP POP PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x275E JUMP JUMPDEST POP DUP1 PUSH2 0x2758 JUMP JUMPDEST POP PUSH2 0x5A0 PUSH4 0xFFFFFFFF DUP3 AND GT ISZERO PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x56656E75652077616C6C6574207A65726F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4172746973742077616C6C6574207A65726F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0xDBE PUSH2 0x2820 CALLDATASIZE PUSH2 0x2AE7 JUMP JUMPDEST SWAP2 PUSH2 0x2D45 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x283F PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x284B DUP2 PUSH2 0x2EE4 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x28FA JUMPI JUMPDEST DUP1 PUSH2 0x28CD JUMPI JUMPDEST PUSH2 0x28B5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x285A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x2854 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x292A DUP2 PUSH2 0x2EE4 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x296C DUP2 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFF8 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2995 JUMPI PUSH2 0xC66 DUP5 PUSH2 0xF8B DUP2 DUP7 SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x29D6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xF8B DUP3 PUSH2 0xF7B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x29BE JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x384 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2A30 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2A62 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2A51 JUMPI JUMPDEST POP DUP4 PUSH2 0x2A29 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2A4A JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2A86 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A76 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2AAF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x384 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x384 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2B53 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2C1E DUP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 PUSH2 0x2C2C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x384 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2C5D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CA5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2C8F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C84 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x2CC0 DUP4 PUSH2 0x2C75 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2D22 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CE2 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x2D0E JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2CDC JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x2CF7 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0x2ECB JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x2E35 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x2E02 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x2DE1 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x2DA8 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x2E8A JUMPI JUMPDEST ISZERO PUSH2 0x2E51 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x2D7C JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x2E6E JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x2EAF JUMPI JUMPDEST DUP1 PUSH2 0x2E41 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x2E41 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2F07 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x2F31 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x2F7E SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x3029 JUMPI JUMPDEST POP PUSH2 0x2FF3 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x2FEA JUMPI RETURNDATASIZE PUSH2 0x2FAC DUP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2FBA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x2FE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x3011 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3066 JUMPI JUMPDEST PUSH2 0x3041 DUP2 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3062 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x3062 JUMPI SWAP1 CODESIZE PUSH2 0x2F92 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3037 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x30AB JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x3099 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x308F DUP4 PUSH2 0x2BA0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x30BE DUP4 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3147 JUMPI POP PUSH1 0x1 EQ PUSH2 0x30E8 JUMPI JUMPDEST POP PUSH2 0x30E5 SWAP3 POP SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 JUMPDEST DUP5 DUP4 LT PUSH2 0x312C JUMPI POP PUSH2 0x30E5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x30E5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x318B JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x3099 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x308F DUP4 PUSH2 0x2BA0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 SLOAD DUP2 PUSH1 0x0 PUSH2 0x319E DUP4 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3147 JUMPI POP PUSH1 0x1 EQ PUSH2 0x31C4 JUMPI POP PUSH2 0x30E5 SWAP3 POP SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x3208 JUMPI POP PUSH2 0x30E5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x31EF JUMP JUMPDEST SWAP1 PUSH2 0x322D DUP3 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x323A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x324B PUSH1 0x1F NOT SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST ISZERO PUSH2 0x325C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD185C9D081D1A5B59481D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x329D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210323AB930BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5061796D656E74206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CAD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3330 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP9 SWAP8 SWAP7 SWAP9 PUSH1 0x60 DUP7 MSTORE DUP2 PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP4 ADD ADD SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x338A DUP2 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP5 SWAP1 SWAP3 SWAP1 DUP6 ISZERO PUSH2 0x3593 JUMPI DUP3 DUP8 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE DUP6 DUP9 KECCAK256 SLOAD AND DUP4 DUP8 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x3560 JUMPI JUMPDEST DUP2 DUP12 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 DUP12 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP12 DUP1 LOG4 PUSH2 0x3548 JUMPI EXTCODESIZE PUSH2 0x3421 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x345F SWAP2 DUP6 SWAP7 SWAP8 SWAP9 SWAP5 SWAP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP7 DUP8 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP8 SWAP2 DUP2 PUSH2 0x3504 JUMPI JUMPDEST POP PUSH2 0x34CD JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x34C4 JUMPI RETURNDATASIZE PUSH2 0x3487 DUP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3494 DUP5 MLOAD SWAP3 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP5 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP4 MLOAD SWAP4 DUP5 PUSH2 0x34BE JUMPI DUP3 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP3 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP4 POP PUSH2 0x349E JUMP JUMPDEST SWAP2 SWAP6 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x34ED JUMPI POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3541 JUMPI JUMPDEST PUSH2 0x351C DUP2 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x353D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x353D JUMPI SWAP1 CODESIZE PUSH2 0x346D JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3512 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 DUP12 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x33C0 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x35B2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x35F2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081C185C9D1A58DA5C185B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x384 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x384 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x384 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x36C5 JUMPI PUSH2 0x36BE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x36D0 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3754 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x3748 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x373F JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3769 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP1 PUSH2 0x3772 JUMPI POP POP JUMP JUMPDEST PUSH2 0x377B DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x3795 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x379E DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x37BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x37CB PUSH1 0x3 SWAP3 PUSH2 0x2B49 JUMP JUMPDEST EQ PUSH2 0x37D3 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x38EC JUMPI JUMPDEST ISZERO PUSH2 0x3846 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x381D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x39F8 JUMPI DUP1 MLOAD PUSH1 0x2 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1CAD JUMPI PUSH1 0x3 SWAP2 DUP3 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1CAD JUMPI PUSH2 0x394E SWAP1 DUP5 SWAP6 SWAP5 SHL PUSH2 0x3223 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP4 DUP2 LT PUSH2 0x39A7 JUMPI POP POP POP POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x3994 JUMPI PUSH1 0x2 EQ PUSH2 0x3989 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP8 PUSH1 0x4 SWAP2 SWAP10 SWAP3 SWAP4 SWAP5 SWAP10 ADD SWAP2 DUP3 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD DUP9 DUP6 ADD MSTORE8 AND DUP6 ADD ADD MLOAD DUP10 DUP3 ADD MSTORE8 ADD SWAP8 SWAP3 SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x3A06 DUP2 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x3B42 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x3B33 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x3B24 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x3B15 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x3B06 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x3AF6 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x3AEC JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AA4 DUP3 DUP8 ADD PUSH2 0x3223 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x3AB6 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x3AE7 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x3AAF JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x3A93 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A70 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x3A36 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3B67 DUP4 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x2A DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x3C3E JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x3C3E JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 PUSH1 0x29 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x3BCA JUMPI POP POP POP PUSH2 0x3BAB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x3C29 JUMPI DUP7 MLOAD DUP6 LT ISZERO PUSH2 0x3C29 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP7 DUP6 ADD DUP4 ADD MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x3C14 JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 PUSH2 0x3B99 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3C5D DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF3 JUMPI PUSH2 0x3C6C DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x3CCD JUMPI DUP1 PUSH2 0x3C80 PUSH1 0x2 SWAP3 PUSH2 0x2B49 JUMP JUMPDEST EQ PUSH2 0x3CA9 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3C91 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x14995CDBDB1D9959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB5 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x111A5CDC1D5D1959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CDA DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x10DBDB5C1B195D1959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3D00 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x14D8DA19591D5B1959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x3FCAE5AF30056254185369B89AA8 SMOD DUP6 0xC2 0xED SWAP3 LOG4 EXTCODECOPY 0xF9 CHAINID STATICCALL 0xB3 0xDE DELEGATECALL PREVRANDAO 0xAA 0xD1 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"637:9559:26:-:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;;;-1:-1:-1;;;;;637:9559:26;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;2715:10;1273:26:0;1269:95;;3004:6;637:9559:26;;2715:10;-1:-1:-1;;;;;;637:9559:26;;;;;;;-1:-1:-1;;;;;637:9559:26;3052:40:0;-1:-1:-1;;3052:40:0;3501:45:19;637:9559:26;3501:45:19;:::i;:::-;3493:53;;;;3567:51;;;:::i;:::-;3556:62;;;;;637:9559:26;;;;;3642:22:19;3628:36;;;;637:9559:26;3691:25:19;;3674:42;;;;;;3744:13;637:9559:26;3727:30:19;637:9559:26;;4304:80:19;637:9559:26;4304:80:19;;2079:95;;;;;;;;;;;;3744:13;2079:95;;;;4378:4;637:9559:26;2079:95:19;;637:9559:26;;4304:80:19;;2079:95;637:9559:26;;;;;;;;;;;;;;;;;;;;4294:91:19;;2079:95;3767:48;4378:4;2079:95;3825:27;637:9559:26;2096:1;637:9559;;;;;;;2079:95:19;637:9559:26;;;;;;;;;;;2079:95:19;637:9559:26;;;;;3628:36:19;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;1269:95:0;637:9559:26;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;637:9559:26;;;1322:31:0;637:9559:26;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;2887:340:15:-;637:9559:26;;3032:2:15;;3010:24;;;3032:2;;;637:9559:26;1854:2:15;637:9559:26;;1840:16:15;1836:72;;637:9559:26;;;;;;;;;;;;1949:36:15;;3050:27;:::o;637:9559:26:-;;;;;;;;;;1949:36:15;3050:27;:::o;1836:72::-;637:9559:26;;;1879:18:15;;;;;;;;;;;637:9559:26;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;1854:2:15;637:9559:26;;;;;;;1879:18:15;;;;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;3006:215:15;637:9559:26;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;3006:215:15;637:9559:26;;;;;;;;;;;3006:215:15;637:9559:26;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;1390:66:15;3168:42;:::o;637:9559:26:-;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;1390:66:15;3168:42;:::o;637:9559:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;-1:-1:-1;637:9559:26;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;2887:340:15;637:9559:26;;3032:2:15;;3010:24;;;3032:2;;;637:9559:26;1854:2:15;637:9559:26;;1840:16:15;1836:72;;637:9559:26;;;;;;;;;;;;1949:36:15;;3050:27;:::o;1836:72::-;637:9559:26;;;1879:18:15;;;;;;;;;;;637:9559:26;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;1854:2:15;637:9559:26;;;;;;;1879:18:15;;;;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;3006:215:15;637:9559:26;-1:-1:-1;;;;;637:9559:26;;;;3601:16:19;637:9559:26;;;;;;;;;;;;;;3006:215:15;637:9559:26;;;;;;;;;;;3006:215:15;637:9559:26;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;3601:16:19;637:9559:26;1390:66:15;3168:42;:::o;637:9559:26:-;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;3601:16:19;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;3601:16:19;637:9559:26;1390:66:15;3168:42;:::o;637:9559:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;3601:16:19;-1:-1:-1;637:9559:26;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10961,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_36698":{"entryPoint":10939,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":10983,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":11282,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":11036,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":10902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata_uint64_uint256":{"entryPoint":13118,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":11439,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_string_calldata":{"entryPoint":13922,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_string":{"entryPoint":12835,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11255,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10867,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11381,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":11222,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_36703":{"entryPoint":11113,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_51291":{"entryPoint":11141,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_51296":{"entryPoint":11168,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_51298":{"entryPoint":11195,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1231,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":12063,"id":1665,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":11337,"id":84,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":14315,"id":4057,"parameterSlots":0,"returnSlots":1},"fun_encode":{"entryPoint":14613,"id":1760,"parameterSlots":2,"returnSlots":1},"fun_requireOwned":{"entryPoint":12004,"id":1297,"parameterSlots":1,"returnSlots":1},"fun_safeMint":{"entryPoint":13181,"id":976,"parameterSlots":2,"returnSlots":0},"fun_statusToString":{"entryPoint":15444,"id":8701,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":14176,"id":3933,"parameterSlots":2,"returnSlots":0},"fun_toHexString":{"entryPoint":15184,"id":8669,"parameterSlots":1,"returnSlots":1},"fun_toString":{"entryPoint":14861,"id":2298,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback":{"entryPoint":12397,"id":2028,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_36714":{"entryPoint":12649,"id":2028,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":11589,"id":658,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":14032,"id":3848,"parameterSlots":4,"returnSlots":3},"fun_tryRecover_3660":{"entryPoint":13972,"id":3660,"parameterSlots":2,"returnSlots":3},"increment_uint256":{"entryPoint":13079,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":13865,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint32":{"entryPoint":13905,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint64":{"entryPoint":13885,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12950,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_630e":{"entryPoint":12885,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7003":{"entryPoint":13739,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_714e":{"entryPoint":13803,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d424":{"entryPoint":13013,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_Status_to_enum_Status":{"entryPoint":13094,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_Status":{"entryPoint":11081,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"3955":[{"length":32,"start":14372}],"3957":[{"length":32,"start":14575}],"3959":[{"length":32,"start":14318}],"3961":[{"length":32,"start":14451}],"3963":[{"length":32,"start":14489}],"3966":[{"length":32,"start":4193}],"3969":[{"length":32,"start":4234}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146129ee5750806306fdde031461294b578063081812fc1461290d578063095ea7b31461282657806323b872dd1461280f5780632b95da6614611fe057806342842e0e14611fb25780634f9f6fe614611d5b5780635eb37a31146112275780636352211e146111f757806370a082311461119e578063715018a61461114157806384b0196e146110485780638da5cb5b1461101f57806395d89b4114610f40578063a22cb46514610e9b578063a5c1674e14610dc0578063b88d4fde14610d53578063c2b7b86814610c8e578063c87b56dd1461064e578063cac5c51214610468578063e985e9c514610412578063f2fde38b146103895763fefa92911461012757600080fd5b34610384576020806003193601126103845760043590816000526002815260018060a01b0361015e816040600020541615156135ab565b82600052600a82526102656040600020916040519061017c82612b69565b6040516101948161018d8188612caf565b0382612bd6565b82526040516101aa8161018d8160018901612caf565b8583015263ffffffff60028501546001600160401b038116604085015260401c1660608301526040516101e48161018d8160038901612caf565b60808301526040516101fd8161018d8160048901612caf565b60a0830152808060058601541660c08401908152816006870154169360e0810194855261014060ff600860078a0154996101009a8b860152015481811661024381612b49565b61012085015260081c16151591015251163314918215610376575b50506135eb565b82600052600a82526040600020906008820190815460ff811661028781612b49565b60018114908115610362575b501561031d5760ff8160081c166102e55761ff001916179055600701546040805191825233928201929092527feb79e24102009f0d7f1eb4227511a0c5c61db03f1560911df6ebc1710f0d82d19190a2005b60405162461bcd60e51b815260048101869052601060248201526f105b1c9958591e481c9958dbdc99195960821b6044820152606490fd5b60405162461bcd60e51b815260048101869052601a60248201527f496e76616c69642073746174757320666f72207061796d656e740000000000006044820152606490fd5b6003915061036f81612b49565b1438610293565b90915051163314388061025e565b600080fd5b34610384576020366003190112610384576103a2612abb565b6103aa612c49565b6001600160a01b039081169081156103f957600754826001600160601b0360a01b821617600755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346103845760403660031901126103845761042b612abb565b610433612ad1565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b34610384576020806003193601126103845760043590816000526002815261059b60018060a01b036104a2816040600020541615156135ab565b83600052600a8352604060002090806040516104bd81612b69565b6040516104ce8161018d8188612caf565b81526040516104e48161018d8160018901612caf565b8682015263ffffffff60028501546001600160401b038116604084015260401c16606082015260405161051e8161018d8160038901612caf565b60808201526040516105378161018d8160048901612caf565b60a0820152816005850154169060c0810191825261014060ff6008856006890154169760e085019889526007810154610100860152015481811661057a81612b49565b61012085015260081c161515910152511633149182156106405750506135eb565b81600052600a815260086040600020019081549160ff8316926105bd84612b49565b8361060e576060927fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e94926001809360ff19161790556040519261060081612b49565b8352820152336040820152a2005b60405162461bcd60e51b815260048101849052600a6024820152694261642073746174757360b01b6044820152606490fd5b90915051163314848061025e565b3461038457602036600319011261038457600435600090815260026020526040902054610685906001600160a01b031615156135ab565b600435600052600a602052604060002060ff6008604051926106a684612b69565b6040516106b78161018d8185612caf565b84526040516106cd8161018d8160018601612caf565b602085015263ffffffff60028201546001600160401b038116604087015260401c1660608501526040516107088161018d8160038601612caf565b60808501526040516107218161018d8160048601612caf565b60a085015260058101546001600160a01b0390811660c086015260068201541660e08501526007810154610100850152015461075e828216612b49565b81811661012084015260081c16151561014082015261077e600435613a0d565b9080519160208201519261079e6001600160401b03604085015116613a0d565b926107b263ffffffff606083015116613a0d565b9460808201519560a0830151936107d460018060a01b0360c086015116613b50565b60e08501519091906107ee906001600160a01b0316613b50565b916107fd610100870151613a0d565b9861014061081861012089015161081381612b49565b613c54565b97015115610c6a5760405161082c81612ba0565b60048152637472756560e01b6020820152975b6040519b8c809b60208201607b60f81b9052602182017f226e616d65223a22506572666f726d616e63652041677265656d656e74202300905280516040819301916020019161088d92612a73565b61088b60f21b908c01604081018290527f226465736372697074696f6e223a2241677265656d656e74206265747765656e60428201527f2061727469737420616e642076656e756520666f72206120706572666f726d6160628201526b1b98d948195d995b9d0b888b60a21b60828201526c113b32b73ab2a730b6b2911d1160991b608e820152865191998a97889693919290610933908390609b840190602001612a73565b0185609b8201526f113b32b73ab2a0b2323932b9b9911d1160811b609d8201528151918260ad8301916020019161096992612a73565b018460ad8201526b1139ba30b93a2a34b6b2911d60a11b60af8201528151918260bb8301916020019161099b92612a73565b0196600b60fa1b978860bb8201527111323ab930ba34b7b726b4b73aba32b9911d60711b60bc8201528151918260ce830191602001916109da92612a73565b018760ce820152751130b93a34b9ba29b7b1b4b0b62430b7323632911d1160511b60cf8201528151918260e583019160200191610a1692612a73565b018260e582015274113b32b73ab2a9b7b1b4b0b62430b7323632911d1160591b60e78201528151918260fc83019160200191610a5192612a73565b018160fc8201526f1130b93a34b9ba2bb0b63632ba111d1160811b60fe82015282519061010e93828583019160200191610a8a92612a73565b01918201526e113b32b73ab2abb0b63632ba111d1160891b61011082015282519061011f93828583019160200191610ac192612a73565b019182015261012181017f227061796d656e74416d6f756e7455736443656e7473223a0000000000000000905286519061013997828983019160200191610b0792612a73565b019086820152691139ba30ba3ab9911d1160b11b61013a82015282519061014493828583019160200191610b3a92612a73565b019182015271113830bcb6b2b73a2932b1b7b93232b2111d60711b61014682015281519061015892828483019160200191610b7492612a73565b01908101607d60f81b905203908101825261015901610b939082612bd6565b604051610b9f81612bbb565b60408082527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208301527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f90820152610bf891613915565b6040518091602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280519081603d84019160200191610c3a92612a73565b810103601d81018252603d01610c509082612bd6565b60405180916020825260208201610c6691612a96565b0390f35b604051610c7681612ba0565b600581526466616c736560d81b60208201529761083f565b3461038457602036600319011261038457600435610caa612c49565b80600052600a6020526008604060002001805460ff8116610cca81612b49565b60028103610d1f577fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e92600360609360ff191617905560405190610d0d81612b49565b815260036020820152336040820152a2005b60405162461bcd60e51b815260206004820152600c60248201526b139bdd08191a5cdc1d5d195960a21b6044820152606490fd5b3461038457608036600319011261038457610d6c612abb565b610d74612ad1565b90604435606435926001600160401b038411610384573660238501121561038457610dac610dbe943690602481600401359101612c12565b92610db8838383612d45565b33612f1f565b005b346103845760208060031936011261038457600435908160005260028152610dfa60018060a01b036104a2816040600020541615156135ab565b81600052600a815260086040600020019081549160ff831692610e1c84612b49565b60018403610e62576060927fbe978056736fa4b5d6ef48bade11edc88bb6fe9193a2efe99ed9e5b0b41ade9e94926002809360ff19161790556040519261060081612b49565b60405162461bcd60e51b8152600481018490526011602482015270135d5cdd0818994818dbdb5c1b195d1959607a1b6044820152606490fd5b3461038457604036600319011261038457610eb4612abb565b60243590811515809203610384576001600160a01b0316908115610f2757336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b346103845760003660031901126103845760405160006001805490610f6482612c75565b80855291818116908115610ff85750600114610f9f575b610c6684610f8b81860382612bd6565b604051918291602083526020830190612a96565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610fe0575050508101602001610f8b82610f7b565b80546020858701810191909152909301928101610fc8565b60ff191660208087019190915292151560051b85019092019250610f8b9150839050610f7b565b34610384576000366003190112610384576007546040516001600160a01b039091168152602090f35b34610384576000366003190112610384576110f16110857f000000000000000000000000000000000000000000000000000000000000000061306d565b6110ae7f0000000000000000000000000000000000000000000000000000000000000000613169565b90604051906110bc82612b85565b60008252604051938493600f60f81b85526110e360209360e08588015260e0870190612a96565b908582036040870152612a96565b466060850152306080850152600060a085015283810360c085015281808451928381520193019160005b82811061112a57505050500390f35b83518552869550938101939281019260010161111b565b346103845760003660031901126103845761115a612c49565b600780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610384576020366003190112610384576001600160a01b036111bf612abb565b1680156111de5760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b34610384576020366003190112610384576020611215600435612ee4565b6040516001600160a01b039091168152f35b3461038457600319604036820112610384576001600160401b0360043511610384576101209060043536030112610384576024356001600160401b03811161038457611277903690600401612b1c565b6001600160a01b0361128d60043560e401613629565b163303611d16576001600160a01b036112aa60043560c401613629565b16151580611cf7575b15611cc3576112c660446004350161363d565b906201517f194201428111611cad576114ab936112f361149c926001600160401b036114a2961611613255565b63ffffffff611306606460043501613651565b16151580611c89575b61131890613296565b61132a610104600435013515156132d5565b604261134461133d600480350180613662565b3691612c12565b6020815191012061136261133d602460043501600435600401613662565b6020815191012061137760446004350161363d565b611385606460043501613651565b61139c61133d608460043501600435600401613662565b602081519101206113ba61133d60a460043501600435600401613662565b602081519101209063ffffffff6113d560c460043501613629565b936001600160401b036113ec60e460043501613629565b966040519860208a019a7fa0a878e5693a37f578742a15a4cb856f692aae1e9fd056facc2c1eda5a9856198c5260408b015260608a01521660808801521660a086015260c085015260e084015260018060a01b031661010083015260018060a01b03166101208201526101046004350135610140820152610140815261147181612b69565b51902061147c6137eb565b906040519161190160f01b83526002830152602282015220923691612c12565b90613694565b90929192613760565b6001600160a01b036114c160043560c401613629565b166001600160a01b0390911603611c4d57600b546114de81613317565b600b556114ef600480350180613662565b919061150360048035602481019101613662565b9061151260446004350161363d565b611520606460043501613651565b61153260048035608481019101613662565b90916115466004803560a481019101613662565b94909560043560c40161155890613629565b9761156760e460043501613629565b996040519c6115758e612b69565b369061158092612c12565b8c52369061158d92612c12565b60208b01526001600160401b031660408a015263ffffffff16606089015236906115b692612c12565b608087015236906115c692612c12565b60a08501526001600160a01b0390811660c08501521660e08301526101046004350135610100830152600061012083018190526101408301819052818152600a6020526040902082518051909391906001600160401b038111611a025761162d8254612c75565b601f8111611c09575b506020601f8211600114611ba2578192939495600092611b97575b50508160011b916000199060031b1c19161781555b60208201519283516001600160401b038111611a02576116896001840154612c75565b601f8111611b50575b506020601f8211600114611ae1578192939495600092611ad6575b50508160011b916000199060031b1c19161760018301555b600282016001600160401b0360408501511681549063ffffffff60401b606087015160401b16916001600160601b0319161717905560808301519283516001600160401b038111611a025761171d6003850154612c75565b601f8111611a8f575b50602094601f8211600114611a2357948192939495600092611a18575b50508160011b916000199060031b1c19161760038401555b60a08101519283516001600160401b038111611a025761177e6004830154612c75565b94601f86116119bb575b602095508590601f8311600114611943579282610140936008936118419796600092611938575b50508160011b916000199060031b1c19161760048201555b60c08401516005820180546001600160a01b039283166001600160a01b03199182161790915560e08601516006840180549190931691161790556101008401516007820155610120840151910192906118299061182381612b49565b84613326565b0151815461ff00191690151560081b61ff0016179055565b6118588161185360c460043501613629565b61337d565b61186660c460043501613629565b61187460e460043501613629565b827f0763e2255b3b46191fc14c005e2188d8639d751a03006384eafac51fd64e910f6118a4600480350180613662565b936118dd6118b660446004350161363d565b6040516001600160a01b03938416989093169692938493600435610104013592918561333e565b0390a46118ee60e460043501613629565b906118fd60c460043501613629565b604051926001600160a01b039182169116827f9fbbd042184db7e95eaea0fdb4bb4a737167f1aaccd0d365742157ece5453102600080a48152f35b0151905089806117af565b9060048401600052866000209160005b601f19851681106119a457508360089361184197969360019361014097601f1981161061198b575b505050811b0160048201556117c7565b015160001960f88460031b161c1916905589808061197b565b919288600181928685015181550194019201611953565b600483016000526020600020601f830160051c8101602084106119fb575b601f880160051c820181106119ef575050611788565b600081556001016119d9565b50806119d9565b634e487b7160e01b600052604160045260246000fd5b015190508580611743565b601f198216956003860160005260206000209160005b888110611a7757508360019596979810611a5e575b505050811b01600384015561175b565b015160001960f88460031b161c19169055858080611a4e565b91926020600181928685015181550194019201611a39565b600385016000526020600020601f830160051c810160208410611acf575b601f830160051c82018110611ac3575050611726565b60008155600101611aad565b5080611aad565b0151905085806116ad565b6001840160005260206000209060005b601f1984168110611b38575060019394959683601f19811610611b1f575b505050811b0160018301556116c5565b015160001960f88460031b161c19169055858080611b0f565b9091602060018192858b015181550193019101611af1565b600184016000526020600020601f830160051c810160208410611b90575b601f830160051c82018110611b84575050611692565b60008155600101611b6e565b5080611b6e565b015190508580611651565b82600052602060002090600096601f198416975b888110611bf157508360019596979810611bd8575b505050811b018155611666565b015160001960f88460031b161c19169055858080611bcb565b91926020600181928685015181550194019201611bb6565b826000526020600020601f830160051c810160208410611c46575b601f830160051c82018110611c3a575050611636565b60008155600101611c24565b5080611c24565b60405162461bcd60e51b815260206004820152601460248201527342616420617274697374207369676e617475726560601b6044820152606490fd5b506113186105a063ffffffff611ca3606460043501613651565b161115905061130f565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b506001600160a01b03611d0e60043560e401613629565b1615156112b3565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206e6f742076656e75652077616c6c65740000000000000000006044820152606490fd5b34610384576020366003190112610384576004356000610140604051611d8081612b69565b606081526060602082015282604082015282606082015260606080820152606060a08201528260c08201528260e082015282610100820152826101208201520152806000526002602052611de260018060a01b036040600020541615156135ab565b600052600a602052604060002060ff600860405192611e0084612b69565b604051611e118161018d8185612caf565b8452604051611e278161018d8160018601612caf565b602085015263ffffffff60028201546001600160401b038116604087015260401c166060850152604051611e628161018d8160038601612caf565b6080850152604051611e7b8161018d8160048601612caf565b60a085015260058101546001600160a01b0390811660c086015260068201541660e085015260078101546101008501520154611eb8828216612b49565b81811661012084015260081c161515610140820152604051809160208252610140611f5f611ef483516101606020870152610180860190612a96565b611f4a611f13602086015192601f1993848983030160408a0152612a96565b6001600160401b03604087015116606088015263ffffffff60608701511660808801526080860151838883030160a0890152612a96565b9060a0850151908683030160c0870152612a96565b9160018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151610120850152610120810151611fa081612b49565b82850152015115156101608301520390f35b3461038457610dbe611fc336612ae7565b9060405192611fd184612b85565b60008452610db8838383612d45565b3461038457610120366003190112610384576004356001600160401b03811161038457612011903690600401612b1c565b906024356001600160401b03811161038457612031903690600401612b1c565b9290916001600160401b0360443516604435036103845760643563ffffffff81168103610384576084356001600160401b03811161038457612077903690600401612b1c565b9060a4356001600160401b03811161038457612097903690600401612b1c565b909390929060c4356001600160a01b03811690036103845760e4356001600160a01b03811690036103845760c4356001600160a01b0316156127d55760e4356001600160a01b03161561279c57426201517f19810111611cad5761210d426201517f19016044356001600160401b031611613255565b63ffffffff811615158061278a575b61212590613296565b6121336101043515156132d5565b600b549761214089613317565b600b55604051996121508b612b69565b61215b368a8a612c12565b8b52369061216892612c12565b60208a01526044356001600160401b031660408a015263ffffffff166060890152369061219492612c12565b608087015236906121a492612c12565b60a08501526001600160a01b0360c435811660c086015260e4351660e085015261010435610100850152600061012085018190526101408501819052838152600a6020526040902084518051919591906001600160401b038211611a0257819061220e8854612c75565b601f811161273a575b50602090601f83116001146126ce576000926126c3575b50508160011b916000199060031b1c19161785555b60208101518051906001600160401b038211611a025781906122686001890154612c75565b601f8111612670575b50602090601f83116001146125fe576000926125f3575b50508160011b916000199060031b1c19161760018601555b600285016001600160401b0360408301511681549063ffffffff60401b606085015160401b16916001600160601b0319161717905560808101518051906001600160401b038211611a025781906122fa6003890154612c75565b601f81116125a0575b50602090601f831160011461253357600092612528575b50508160011b916000199060031b1c19161760038601555b60a08101519485516001600160401b038111611a02576123556004830154612c75565b96601f88116124e1575b602097508790601f831160011461246a579282610140936008936123fa979660009261245f575050600019600383901b1c191660019190911b17600482015560c08401516005820180546001600160a01b039283166001600160a01b03199182161790915560e08601516006840180549190931691161790556101008401516007820155610120840151910192906118299061182381612b49565b612404833361337d565b827f0763e2255b3b46191fc14c005e2188d8639d751a03006384eafac51fd64e910f6040518061245460018060a01b0360e435169660018060a01b0360c43516966101043591604435918561333e565b0390a4604051908152f35b015190508b806117af565b9060048401600052886000209160005b601f19851681106124ca5750836008936123fa97969360019361014097601f198116106124b157505050811b0160048201556117c7565b015160001960f88460031b161c191690558b808061197b565b91928a60018192868501518155019401920161247a565b600483016000526020600020601f830160051c810160208410612521575b601f8a0160051c8201811061251557505061235f565b600081556001016124ff565b50806124ff565b01519050878061231a565b600389016000908152602081209350601f198516905b818110612588575090846001959493921061256f575b505050811b016003860155612332565b015160001960f88460031b161c1916905587808061255f565b92936020600181928786015181550195019301612549565b909150600388016000526020600020601f840160051c8101602085106125ec575b90849392915b601f830160051c820181106125dd575050612303565b600081558594506001016125c7565b50806125c1565b015190508780612288565b9250600188016000526020600020906000935b601f1984168510612655576001945083601f1981161061263c575b505050811b0160018601556122a0565b015160001960f88460031b161c1916905587808061262c565b81810151835560209485019460019093019290910190612611565b909150600188016000526020600020601f840160051c8101602085106126bc575b90849392915b601f830160051c820181106126ad575050612271565b60008155859450600101612697565b5080612691565b01519050878061222e565b9250876000526020600020906000935b601f198416851061271f576001945083601f19811610612706575b505050811b018555612243565b015160001960f88460031b161c191690558780806126f9565b818101518355602094850194600190930192909101906126de565b909150876000526020600020601f840160051c810160208510612783575b90849392915b601f830160051c82018110612774575050612217565b6000815585945060010161275e565b5080612758565b506105a063ffffffff8216111561211c565b60405162461bcd60e51b815260206004820152601160248201527056656e75652077616c6c6574207a65726f60781b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714172746973742077616c6c6574207a65726f60701b6044820152606490fd5b3461038457610dbe61282036612ae7565b91612d45565b346103845760403660031901126103845761283f612abb565b60243561284b81612ee4565b331515806128fa575b806128cd575b6128b5576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff604060002054161561285a565b506001600160a01b038116331415612854565b346103845760203660031901126103845760043561292a81612ee4565b506000526004602052602060018060a01b0360406000205416604051908152f35b34610384576000366003190112610384576040516000805461296c81612c75565b80845290600190818116908115610ff8575060011461299557610c6684610f8b81860382612bd6565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106129d6575050508101602001610f8b82610f7b565b805460208587018101919091529093019281016129be565b34610384576020366003190112610384576004359063ffffffff60e01b821680920361038457602091632483248360e11b8114908115612a30575b5015158152f35b6380ac58cd60e01b811491508115612a62575b8115612a51575b5083612a29565b6301ffc9a760e01b14905083612a4a565b635b5e139f60e01b81149150612a43565b60005b838110612a865750506000910152565b8181015183820152602001612a76565b90602091612aaf81518092818552858086019101612a73565b601f01601f1916010190565b600435906001600160a01b038216820361038457565b602435906001600160a01b038216820361038457565b6060906003190112610384576001600160a01b0390600435828116810361038457916024359081168103610384579060443590565b9181601f84011215610384578235916001600160401b038311610384576020838186019501011161038457565b60041115612b5357565b634e487b7160e01b600052602160045260246000fd5b61016081019081106001600160401b03821117611a0257604052565b602081019081106001600160401b03821117611a0257604052565b604081019081106001600160401b03821117611a0257604052565b606081019081106001600160401b03821117611a0257604052565b90601f801991011681019081106001600160401b03821117611a0257604052565b6001600160401b038111611a0257601f01601f191660200190565b929192612c1e82612bf7565b91612c2c6040519384612bd6565b829481845281830111610384578281602093846000960137010152565b6007546001600160a01b03163303612c5d57565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015612ca5575b6020831014612c8f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612c84565b9060009291805491612cc083612c75565b918282526001938481169081600014612d225750600114612ce2575b50505050565b90919394506000526020928360002092846000945b838610612d0e575050505001019038808080612cdc565b805485870183015294019385908201612cf7565b9294505050602093945060ff191683830152151560051b01019038808080612cdc565b6001600160a01b039182169290918315612ecb57600092828452826020956002875260409684888820541696879133151580612e35575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284612e02575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303612de15750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055612da8565b91939450915080612e8a575b15612e5157859291879138612d7c565b878688612e6e576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015612eaf575b80612e415750858252600481523385898420541614612e41565b5086825260058152878220338352815260ff8883205416612e95565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115612f07575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b612f31575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590612f7e906084830190612a96565b039483816000978189895af1869181613029575b50612ff3575050503d600014612fea573d612fac81612bf7565b90612fba6040519283612bd6565b81528093823d92013e5b82519283612fe557604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250612fc4565b919450915063ffffffff60e01b160361301157503880808080612f2a565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311613066575b6130418183612bd6565b8101031261306257516001600160e01b031981168103613062579038612f92565b8680fd5b503d613037565b60ff81146130ab5760ff811690601f8211613099576040519161308f83612ba0565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b506040516008548160006130be83612c75565b8083529260019081811690811561314757506001146130e8575b506130e592500382612bd6565b90565b6008600090815291507ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b84831061312c57506130e59350508101602001386130d8565b81935090816020925483858901015201910190918492613113565b9050602092506130e594915060ff191682840152151560051b820101386130d8565b60ff811461318b5760ff811690601f8211613099576040519161308f83612ba0565b5060405160095481600061319e83612c75565b8083529260019081811690811561314757506001146131c457506130e592500382612bd6565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061320857506130e59350508101602001386130d8565b819350908160209254838589010152019101909184926131ef565b9061322d82612bf7565b61323a6040519182612bd6565b828152809261324b601f1991612bf7565b0190602036910137565b1561325c57565b60405162461bcd60e51b815260206004820152601260248201527114dd185c9d081d1a5b59481d1bdbc81bdb1960721b6044820152606490fd5b1561329d57565b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b6044820152606490fd5b156132dc57565b60405162461bcd60e51b815260206004820152601360248201527205061796d656e74206d757374206265203e203606c1b6044820152606490fd5b6000198114611cad5760010190565b9061333081612b49565b60ff80198354169116179055565b906080836040946001600160401b03939897969860608652816060870152838601376000828286010152601f8019910116830101951660208201520152565b6040805161338a81612b85565b6000808252936001600160a01b038481169490929085156135935782875260209360028552858820541683878215159283613560575b818b5260038852888b2080546001019055828b5260028852888b2080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b80a4613548573b613421575b505050505050565b8261345f918596979894955180938192630a85bd0160e11b968784523360048501528c60248501526044840152608060648401526084830190612a96565b03818a8a5af1879181613504575b506134cd575050503d6000146134c4573d61348781612bf7565b9061349484519283612bd6565b81528094823d92013e5b835193846134be578251633250574960e11b815260048101859052602490fd5b84925001fd5b6060935061349e565b919550915063ffffffff60e01b16036134ed575050388080808080613419565b602492505190633250574960e11b82526004820152fd5b9091508481813d8311613541575b61351c8183612bd6565b8101031261353d57516001600160e01b03198116810361353d57903861346d565b8780fd5b503d613512565b84516339e3563760e11b815260048101889052602490fd5b600083815260046020526040902080546001600160a01b0319169055808b5260038852888b2080546000190190556133c0565b8451633250574960e11b815260048101889052602490fd5b156135b257565b60405162461bcd60e51b81526020600482015260116024820152702737b732bc34b9ba32b73a103a37b5b2b760791b6044820152606490fd5b156135f257565b60405162461bcd60e51b815260206004820152600f60248201526e139bdd081c185c9d1a58da5c185b9d608a1b6044820152606490fd5b356001600160a01b03811681036103845790565b356001600160401b03811681036103845790565b3563ffffffff811681036103845790565b903590601e198136030182121561038457018035906001600160401b0382116103845760200191813603831361038457565b81519190604183036136c5576136be92506020820151906060604084015193015160001a906136d0565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161375457926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156137485780516001600160a01b0381161561373f57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b61376981612b49565b80613772575050565b61377b81612b49565b600181036137955760405163f645eedf60e01b8152600490fd5b61379e81612b49565b600281036137bf5760405163fce698f760e01b815260048101839052602490fd5b806137cb600392612b49565b146137d35750565b602490604051906335e2f38360e21b82526004820152fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614806138ec575b15613846577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c081018181106001600160401b03821117611a025760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461381d565b8051156139f8578051600291828201809211611cad576003918290046001600160fe1b0381168103611cad5761394e908495941b613223565b936020850193829183518401906020820192835194600085525b8381106139a757505050505251068060011461399457600214613989575090565b603d90600019015390565b50603d9081600019820153600119015390565b87600491999293949901918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151898201530197929190613968565b5050604051613a0681612b85565b6000815290565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015613b42575b506d04ee2d6d415b85acef810000000080831015613b33575b50662386f26fc1000080831015613b24575b506305f5e10080831015613b15575b5061271080831015613b06575b506064821015613af6575b600a80921015613aec575b600190816021613aa4828701613223565b95860101905b613ab6575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215613ae757919082613aaa565b613aaf565b9160010191613a93565b9190606460029104910191613a88565b60049193920491019138613a7d565b60089193920491019138613a70565b60109193920491019138613a61565b60209193920491019138613a4f565b604093508104915038613a36565b604051906001600160a01b031680613b6783612bbb565b602a835260208084016040368237845115613c3e5760309053835190600191821015613c3e5790607860218601536029915b818311613bca57505050613bab575090565b6044906040519063e22e27eb60e01b8252600482015260146024820152fd5b909192600f81166010811015613c29578651851015613c29576f181899199a1a9b1b9c1cb0b131b232b360811b901a86850183015360041c928015613c1457600019019190613b99565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b634e487b7160e01b600052603260045260246000fd5b613c5d81612b49565b8015613cf357613c6c81612b49565b60018114613ccd5780613c80600292612b49565b14613ca957604051613c9181612ba0565b600881526714995cdbdb1d995960c21b602082015290565b604051613cb581612ba0565b6008815267111a5cdc1d5d195960c21b602082015290565b50604051613cda81612ba0565b600981526810dbdb5c1b195d195960ba1b602082015290565b50604051613d0081612ba0565b600981526814d8da19591d5b195960ba1b60208201529056fea26469706673582212206d3fcae5af30056254185369b89aa80785c2ed92a43cf946fab3def444aad18564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x29EE JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x294B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x290D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2826 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280F JUMPI DUP1 PUSH4 0x2B95DA66 EQ PUSH2 0x1FE0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FB2 JUMPI DUP1 PUSH4 0x4F9F6FE6 EQ PUSH2 0x1D5B JUMPI DUP1 PUSH4 0x5EB37A31 EQ PUSH2 0x1227 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x11F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1141 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1048 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF40 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xE9B JUMPI DUP1 PUSH4 0xA5C1674E EQ PUSH2 0xDC0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xD53 JUMPI DUP1 PUSH4 0xC2B7B868 EQ PUSH2 0xC8E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xCAC5C512 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI PUSH4 0xFEFA9291 EQ PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x15E DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH2 0x265 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17C DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 DUP2 PUSH2 0x18D DUP2 DUP9 PUSH2 0x2CAF JUMP JUMPDEST SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AA DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST DUP6 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E4 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1FD DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE DUP1 DUP1 PUSH1 0x5 DUP7 ADD SLOAD AND PUSH1 0xC0 DUP5 ADD SWAP1 DUP2 MSTORE DUP2 PUSH1 0x6 DUP8 ADD SLOAD AND SWAP4 PUSH1 0xE0 DUP2 ADD SWAP5 DUP6 MSTORE PUSH2 0x140 PUSH1 0xFF PUSH1 0x8 PUSH1 0x7 DUP11 ADD SLOAD SWAP10 PUSH2 0x100 SWAP11 DUP12 DUP7 ADD MSTORE ADD SLOAD DUP2 DUP2 AND PUSH2 0x243 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE MLOAD AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x376 JUMPI JUMPDEST POP POP PUSH2 0x35EB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 DUP3 ADD SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x287 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x362 JUMPI JUMPDEST POP ISZERO PUSH2 0x31D JUMPI PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x2E5 JUMPI PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x7 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xEB79E24102009F0D7F1EB4227511A0C5C61DB03F1560911DF6EBC1710F0D82D1 SWAP2 SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C9958DBDC991959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073746174757320666F72207061796D656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x3 SWAP2 POP PUSH2 0x36F DUP2 PUSH2 0x2B49 JUMP JUMPDEST EQ CODESIZE PUSH2 0x293 JUMP JUMPDEST SWAP1 SWAP2 POP MLOAD AND CALLER EQ CODESIZE DUP1 PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x3A2 PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x3AA PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x7 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x7 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x42B PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0x433 PUSH2 0x2AD1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x59B PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x4A2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 PUSH1 0x40 MLOAD PUSH2 0x4BD DUP2 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE DUP2 PUSH2 0x18D DUP2 DUP9 PUSH2 0x2CAF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x4E4 DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST DUP7 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x51E DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x537 DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP10 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0x5 DUP6 ADD SLOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD SWAP2 DUP3 MSTORE PUSH2 0x140 PUSH1 0xFF PUSH1 0x8 DUP6 PUSH1 0x6 DUP10 ADD SLOAD AND SWAP8 PUSH1 0xE0 DUP6 ADD SWAP9 DUP10 MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP7 ADD MSTORE ADD SLOAD DUP2 DUP2 AND PUSH2 0x57A DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE MLOAD AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x640 JUMPI POP POP PUSH2 0x35EB JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP3 PUSH2 0x5BD DUP5 PUSH2 0x2B49 JUMP JUMPDEST DUP4 PUSH2 0x60E JUMPI PUSH1 0x60 SWAP3 PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP5 SWAP3 PUSH1 0x1 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x600 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP4 MSTORE DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x42616420737461747573 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP MLOAD AND CALLER EQ DUP5 DUP1 PUSH2 0x25E JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x685 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x6A6 DUP5 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 DUP2 PUSH2 0x18D DUP2 DUP6 PUSH2 0x2CAF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6CD DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x708 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x721 DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x75E DUP3 DUP3 AND PUSH2 0x2B49 JUMP JUMPDEST DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x77E PUSH1 0x4 CALLDATALOAD PUSH2 0x3A0D JUMP JUMPDEST SWAP1 DUP1 MLOAD SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP3 PUSH2 0x79E PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND PUSH2 0x3A0D JUMP JUMPDEST SWAP3 PUSH2 0x7B2 PUSH4 0xFFFFFFFF PUSH1 0x60 DUP4 ADD MLOAD AND PUSH2 0x3A0D JUMP JUMPDEST SWAP5 PUSH1 0x80 DUP3 ADD MLOAD SWAP6 PUSH1 0xA0 DUP4 ADD MLOAD SWAP4 PUSH2 0x7D4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP7 ADD MLOAD AND PUSH2 0x3B50 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x7EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B50 JUMP JUMPDEST SWAP2 PUSH2 0x7FD PUSH2 0x100 DUP8 ADD MLOAD PUSH2 0x3A0D JUMP JUMPDEST SWAP9 PUSH2 0x140 PUSH2 0x818 PUSH2 0x120 DUP10 ADD MLOAD PUSH2 0x813 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x3C54 JUMP JUMPDEST SWAP8 ADD MLOAD ISZERO PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH2 0x82C DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP8 JUMPDEST PUSH1 0x40 MLOAD SWAP12 DUP13 DUP1 SWAP12 PUSH1 0x20 DUP3 ADD PUSH1 0x7B PUSH1 0xF8 SHL SWAP1 MSTORE PUSH1 0x21 DUP3 ADD PUSH32 0x226E616D65223A22506572666F726D616E63652041677265656D656E74202300 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x40 DUP2 SWAP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88D SWAP3 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x88B PUSH1 0xF2 SHL SWAP1 DUP13 ADD PUSH1 0x40 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x226465736372697074696F6E223A2241677265656D656E74206265747765656E PUSH1 0x42 DUP3 ADD MSTORE PUSH32 0x2061727469737420616E642076656E756520666F72206120706572666F726D61 PUSH1 0x62 DUP3 ADD MSTORE PUSH12 0x1B98D948195D995B9D0B888B PUSH1 0xA2 SHL PUSH1 0x82 DUP3 ADD MSTORE PUSH13 0x113B32B73AB2A730B6B2911D11 PUSH1 0x99 SHL PUSH1 0x8E DUP3 ADD MSTORE DUP7 MLOAD SWAP2 SWAP10 DUP11 SWAP8 DUP9 SWAP7 SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x933 SWAP1 DUP4 SWAP1 PUSH1 0x9B DUP5 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2A73 JUMP JUMPDEST ADD DUP6 PUSH1 0x9B DUP3 ADD MSTORE PUSH16 0x113B32B73AB2A0B2323932B9B9911D11 PUSH1 0x81 SHL PUSH1 0x9D DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xAD DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP5 PUSH1 0xAD DUP3 ADD MSTORE PUSH12 0x1139BA30B93A2A34B6B2911D PUSH1 0xA1 SHL PUSH1 0xAF DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xBB DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP7 PUSH1 0xB PUSH1 0xFA SHL SWAP8 DUP9 PUSH1 0xBB DUP3 ADD MSTORE PUSH18 0x11323AB930BA34B7B726B4B73ABA32B9911D PUSH1 0x71 SHL PUSH1 0xBC DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xCE DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9DA SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP8 PUSH1 0xCE DUP3 ADD MSTORE PUSH22 0x1130B93A34B9BA29B7B1B4B0B62430B7323632911D11 PUSH1 0x51 SHL PUSH1 0xCF DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xE5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA16 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP3 PUSH1 0xE5 DUP3 ADD MSTORE PUSH21 0x113B32B73AB2A9B7B1B4B0B62430B7323632911D11 PUSH1 0x59 SHL PUSH1 0xE7 DUP3 ADD MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0xFC DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA51 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD DUP2 PUSH1 0xFC DUP3 ADD MSTORE PUSH16 0x1130B93A34B9BA2BB0B63632BA111D11 PUSH1 0x81 SHL PUSH1 0xFE DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x10E SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH15 0x113B32B73AB2ABB0B63632BA111D11 PUSH1 0x89 SHL PUSH2 0x110 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x11F SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC1 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x121 DUP2 ADD PUSH32 0x227061796D656E74416D6F756E7455736443656E7473223A0000000000000000 SWAP1 MSTORE DUP7 MLOAD SWAP1 PUSH2 0x139 SWAP8 DUP3 DUP10 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP1 DUP7 DUP3 ADD MSTORE PUSH10 0x1139BA30BA3AB9911D11 PUSH1 0xB1 SHL PUSH2 0x13A DUP3 ADD MSTORE DUP3 MLOAD SWAP1 PUSH2 0x144 SWAP4 DUP3 DUP6 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x113830BCB6B2B73A2932B1B7B93232B2111D PUSH1 0x71 SHL PUSH2 0x146 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 PUSH2 0x158 SWAP3 DUP3 DUP5 DUP4 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB74 SWAP3 PUSH2 0x2A73 JUMP JUMPDEST ADD SWAP1 DUP2 ADD PUSH1 0x7D PUSH1 0xF8 SHL SWAP1 MSTORE SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x159 ADD PUSH2 0xB93 SWAP1 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9F DUP2 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F SWAP1 DUP3 ADD MSTORE PUSH2 0xBF8 SWAP2 PUSH2 0x3915 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 SWAP1 MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x3D DUP5 ADD SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC3A SWAP3 PUSH2 0x2A73 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x1D DUP2 ADD DUP3 MSTORE PUSH1 0x3D ADD PUSH2 0xC50 SWAP1 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH2 0xC66 SWAP2 PUSH2 0x2A96 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC76 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP8 PUSH2 0x83F JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCAA PUSH2 0x2C49 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xCCA DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xD1F JUMPI PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP3 PUSH1 0x3 PUSH1 0x60 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD0D DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD08191A5CDC1D5D1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0xD6C PUSH2 0x2ABB JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x2AD1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x384 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x384 JUMPI PUSH2 0xDAC PUSH2 0xDBE SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2C12 JUMP JUMPDEST SWAP3 PUSH2 0xDB8 DUP4 DUP4 DUP4 PUSH2 0x2D45 JUMP JUMPDEST CALLER PUSH2 0x2F1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0xDFA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x4A2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP3 PUSH2 0xE1C DUP5 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0xE62 JUMPI PUSH1 0x60 SWAP3 PUSH32 0xBE978056736FA4B5D6EF48BADE11EDC88BB6FE9193A2EFE99ED9E5B0B41ADE9E SWAP5 SWAP3 PUSH1 0x2 DUP1 SWAP4 PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x600 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x135D5CDD0818994818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0xEB4 PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xF27 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xF64 DUP3 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFF8 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF9F JUMPI JUMPDEST PUSH2 0xC66 DUP5 PUSH2 0xF8B DUP2 DUP7 SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0xFE0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xF8B DUP3 PUSH2 0xF7B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0xF8B SWAP2 POP DUP4 SWAP1 POP PUSH2 0xF7B JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x10F1 PUSH2 0x1085 PUSH32 0x0 PUSH2 0x306D JUMP JUMPDEST PUSH2 0x10AE PUSH32 0x0 PUSH2 0x3169 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10BC DUP3 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0xF PUSH1 0xF8 SHL DUP6 MSTORE PUSH2 0x10E3 PUSH1 0x20 SWAP4 PUSH1 0xE0 DUP6 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP2 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x112A JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x111B JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x115A PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11BF PUSH2 0x2ABB JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x20 PUSH2 0x1215 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x3 NOT PUSH1 0x40 CALLDATASIZE DUP3 ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD GT PUSH2 0x384 JUMPI PUSH2 0x120 SWAP1 PUSH1 0x4 CALLDATALOAD CALLDATASIZE SUB ADD SLT PUSH2 0x384 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x1277 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x128D PUSH1 0x4 CALLDATALOAD PUSH1 0xE4 ADD PUSH2 0x3629 JUMP JUMPDEST AND CALLER SUB PUSH2 0x1D16 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12AA PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x3629 JUMP JUMPDEST AND ISZERO ISZERO DUP1 PUSH2 0x1CF7 JUMPI JUMPDEST ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x12C6 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST SWAP1 PUSH3 0x1517F NOT TIMESTAMP ADD TIMESTAMP DUP2 GT PUSH2 0x1CAD JUMPI PUSH2 0x14AB SWAP4 PUSH2 0x12F3 PUSH2 0x149C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x14A2 SWAP7 AND GT PUSH2 0x3255 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x1306 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST AND ISZERO ISZERO DUP1 PUSH2 0x1C89 JUMPI JUMPDEST PUSH2 0x1318 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0x132A PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x32D5 JUMP JUMPDEST PUSH1 0x42 PUSH2 0x1344 PUSH2 0x133D PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1362 PUSH2 0x133D PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1377 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH2 0x1385 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x139C PUSH2 0x133D PUSH1 0x84 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x13BA PUSH2 0x133D PUSH1 0xA4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D5 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x13EC PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x20 DUP11 ADD SWAP11 PUSH32 0xA0A878E5693A37F578742A15A4CB856F692AAE1E9FD056FACC2C1EDA5A985619 DUP13 MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE AND PUSH1 0x80 DUP9 ADD MSTORE AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x140 DUP2 MSTORE PUSH2 0x1471 DUP2 PUSH2 0x2B69 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x147C PUSH2 0x37EB JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x2C12 JUMP JUMPDEST SWAP1 PUSH2 0x3694 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x14C1 PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x3629 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x1C4D JUMPI PUSH1 0xB SLOAD PUSH2 0x14DE DUP2 PUSH2 0x3317 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x14EF PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1503 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x24 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP1 PUSH2 0x1512 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH2 0x1520 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1532 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x84 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1546 PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0xA4 DUP2 ADD SWAP2 ADD PUSH2 0x3662 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH1 0x4 CALLDATALOAD PUSH1 0xC4 ADD PUSH2 0x1558 SWAP1 PUSH2 0x3629 JUMP JUMPDEST SWAP8 PUSH2 0x1567 PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP10 PUSH1 0x40 MLOAD SWAP13 PUSH2 0x1575 DUP15 PUSH2 0x2B69 JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1580 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP1 PUSH2 0x158D SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x15B6 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x15C6 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x104 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP4 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP4 ADD DUP2 SWAP1 MSTORE DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP1 SWAP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x162D DUP3 SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C09 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BA2 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1B97 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x1689 PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B50 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1AE1 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1AD6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP6 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x40 SHL PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x40 SHL AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND OR OR SWAP1 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x171D PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A8F JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A23 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x1A18 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP5 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x177E PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST SWAP5 PUSH1 0x1F DUP7 GT PUSH2 0x19BB JUMPI JUMPDEST PUSH1 0x20 SWAP6 POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1943 JUMPI SWAP3 DUP3 PUSH2 0x140 SWAP4 PUSH1 0x8 SWAP4 PUSH2 0x1841 SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x1938 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x1829 SWAP1 PUSH2 0x1823 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP5 PUSH2 0x3326 JUMP JUMPDEST ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x1853 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH2 0x337D JUMP JUMPDEST PUSH2 0x1866 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH2 0x1874 PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST DUP3 PUSH32 0x763E2255B3B46191FC14C005E2188D8639D751A03006384EAFAC51FD64E910F PUSH2 0x18A4 PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 PUSH2 0x3662 JUMP JUMPDEST SWAP4 PUSH2 0x18DD PUSH2 0x18B6 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x363D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 SWAP1 SWAP4 AND SWAP7 SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD PUSH2 0x104 ADD CALLDATALOAD SWAP3 SWAP2 DUP6 PUSH2 0x333E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18EE PUSH1 0xE4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST SWAP1 PUSH2 0x18FD PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 PUSH32 0x9FBBD042184DB7E95EAEA0FDB4BB4A737167F1AACCD0D365742157ECE5453102 PUSH1 0x0 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x17AF JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19A4 JUMPI POP DUP4 PUSH1 0x8 SWAP4 PUSH2 0x1841 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x198B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x17C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP3 DUP9 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x19FB JUMPI JUMPDEST PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x19EF JUMPI POP POP PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19D9 JUMP JUMPDEST POP DUP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x1A77 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1A5E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP5 ADD SSTORE PUSH2 0x175B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1ACF JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1AC3 JUMPI POP POP PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AAD JUMP JUMPDEST POP DUP1 PUSH2 0x1AAD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1B38 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1B1F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x16C5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1B90 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1B84 JUMPI POP POP PUSH2 0x1692 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B6E JUMP JUMPDEST POP DUP1 PUSH2 0x1B6E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1651 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP7 PUSH1 0x1F NOT DUP5 AND SWAP8 JUMPDEST DUP9 DUP2 LT PUSH2 0x1BF1 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x1BD8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1666 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1BCB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1BB6 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1C46 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1C3A JUMPI POP POP PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C24 JUMP JUMPDEST POP DUP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x42616420617274697374207369676E6174757265 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1318 PUSH2 0x5A0 PUSH4 0xFFFFFFFF PUSH2 0x1CA3 PUSH1 0x64 PUSH1 0x4 CALLDATALOAD ADD PUSH2 0x3651 JUMP JUMPDEST AND GT ISZERO SWAP1 POP PUSH2 0x130F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D0E PUSH1 0x4 CALLDATALOAD PUSH1 0xE4 ADD PUSH2 0x3629 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206E6F742076656E75652077616C6C6574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x1D80 DUP2 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1DE2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E00 DUP5 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E11 DUP2 PUSH2 0x18D DUP2 DUP6 PUSH2 0x2CAF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E27 DUP2 PUSH2 0x18D DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E62 DUP2 PUSH2 0x18D DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1E7B DUP2 PUSH2 0x18D DUP2 PUSH1 0x4 DUP7 ADD PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x1EB8 DUP3 DUP3 AND PUSH2 0x2B49 JUMP JUMPDEST DUP2 DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE PUSH2 0x140 PUSH2 0x1F5F PUSH2 0x1EF4 DUP4 MLOAD PUSH2 0x160 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x180 DUP7 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST PUSH2 0x1F4A PUSH2 0x1F13 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 PUSH1 0x1F NOT SWAP4 DUP5 DUP10 DUP4 SUB ADD PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP8 ADD MLOAD AND PUSH1 0x60 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x60 DUP8 ADD MLOAD AND PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD DUP4 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x2A96 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x1FA0 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0xDBE PUSH2 0x1FC3 CALLDATASIZE PUSH2 0x2AE7 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1FD1 DUP5 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xDB8 DUP4 DUP4 DUP4 PUSH2 0x2D45 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2011 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2031 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x384 JUMPI PUSH1 0x64 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2077 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x384 JUMPI PUSH2 0x2097 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2B1C JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x384 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x384 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x27D5 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x279C JUMPI TIMESTAMP PUSH3 0x1517F NOT DUP2 ADD GT PUSH2 0x1CAD JUMPI PUSH2 0x210D TIMESTAMP PUSH3 0x1517F NOT ADD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT PUSH2 0x3255 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND ISZERO ISZERO DUP1 PUSH2 0x278A JUMPI JUMPDEST PUSH2 0x2125 SWAP1 PUSH2 0x3296 JUMP JUMPDEST PUSH2 0x2133 PUSH2 0x104 CALLDATALOAD ISZERO ISZERO PUSH2 0x32D5 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP8 PUSH2 0x2140 DUP10 PUSH2 0x3317 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP10 PUSH2 0x2150 DUP12 PUSH2 0x2B69 JUMP JUMPDEST PUSH2 0x215B CALLDATASIZE DUP11 DUP11 PUSH2 0x2C12 JUMP JUMPDEST DUP12 MSTORE CALLDATASIZE SWAP1 PUSH2 0x2168 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x2194 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x21A4 SWAP3 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC4 CALLDATALOAD DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE4 CALLDATALOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x140 DUP6 ADD DUP2 SWAP1 MSTORE DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 MLOAD DUP1 MLOAD SWAP2 SWAP6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x220E DUP9 SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x273A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x26CE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x26C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x2268 PUSH1 0x1 DUP10 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2670 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x25FE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x25F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP7 ADD SSTORE JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x40 SHL PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 SHL AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND OR OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A02 JUMPI DUP2 SWAP1 PUSH2 0x22FA PUSH1 0x3 DUP10 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x25A0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2533 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2528 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP7 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD SWAP5 DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH2 0x2355 PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x2C75 JUMP JUMPDEST SWAP7 PUSH1 0x1F DUP9 GT PUSH2 0x24E1 JUMPI JUMPDEST PUSH1 0x20 SWAP8 POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x246A JUMPI SWAP3 DUP3 PUSH2 0x140 SWAP4 PUSH1 0x8 SWAP4 PUSH2 0x23FA SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x245F JUMPI POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP7 ADD MLOAD PUSH1 0x6 DUP5 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 DUP5 ADD MLOAD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x1829 SWAP1 PUSH2 0x1823 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH2 0x2404 DUP4 CALLER PUSH2 0x337D JUMP JUMPDEST DUP3 PUSH32 0x763E2255B3B46191FC14C005E2188D8639D751A03006384EAFAC51FD64E910F PUSH1 0x40 MLOAD DUP1 PUSH2 0x2454 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE4 CALLDATALOAD AND SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC4 CALLDATALOAD AND SWAP7 PUSH2 0x104 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 DUP6 PUSH2 0x333E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x17AF JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x24CA JUMPI POP DUP4 PUSH1 0x8 SWAP4 PUSH2 0x23FA SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x24B1 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x17C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP3 DUP11 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x247A JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x2521 JUMPI JUMPDEST PUSH1 0x1F DUP11 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2515 JUMPI POP POP PUSH2 0x235F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24FF JUMP JUMPDEST POP DUP1 PUSH2 0x24FF JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x231A JUMP JUMPDEST PUSH1 0x3 DUP10 ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2588 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x256F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP7 ADD SSTORE PUSH2 0x2332 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x255F JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2549 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x25EC JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x25DD JUMPI POP POP PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x25C7 JUMP JUMPDEST POP DUP1 PUSH2 0x25C1 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2655 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x263C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP7 ADD SSTORE PUSH2 0x22A0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x262C JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2611 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x26BC JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x26AD JUMPI POP POP PUSH2 0x2271 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x2697 JUMP JUMPDEST POP DUP1 PUSH2 0x2691 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x222E JUMP JUMPDEST SWAP3 POP DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x271F JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2706 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x2243 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x26F9 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x26DE JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2783 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2774 JUMPI POP POP PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x275E JUMP JUMPDEST POP DUP1 PUSH2 0x2758 JUMP JUMPDEST POP PUSH2 0x5A0 PUSH4 0xFFFFFFFF DUP3 AND GT ISZERO PUSH2 0x211C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x56656E75652077616C6C6574207A65726F PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4172746973742077616C6C6574207A65726F PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH2 0xDBE PUSH2 0x2820 CALLDATASIZE PUSH2 0x2AE7 JUMP JUMPDEST SWAP2 PUSH2 0x2D45 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH2 0x283F PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x284B DUP2 PUSH2 0x2EE4 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x28FA JUMPI JUMPDEST DUP1 PUSH2 0x28CD JUMPI JUMPDEST PUSH2 0x28B5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x285A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x2854 JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x292A DUP2 PUSH2 0x2EE4 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0x296C DUP2 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFF8 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2995 JUMPI PUSH2 0xC66 DUP5 PUSH2 0xF8B DUP2 DUP7 SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x29D6 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0xF8B DUP3 PUSH2 0xF7B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x29BE JUMP JUMPDEST CALLVALUE PUSH2 0x384 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x384 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2A30 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2A62 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2A51 JUMPI JUMPDEST POP DUP4 PUSH2 0x2A29 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x2A4A JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2A86 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A76 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2AAF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x384 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x384 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x384 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x384 JUMPI JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x2B53 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A02 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2C1E DUP3 PUSH2 0x2BF7 JUMP JUMPDEST SWAP2 PUSH2 0x2C2C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x384 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2C5D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2CA5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2C8F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C84 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x2CC0 DUP4 PUSH2 0x2C75 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2D22 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2CE2 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x2D0E JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2CDC JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x2CF7 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2CDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0x2ECB JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x2E35 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x2E02 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x2DE1 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x2DA8 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x2E8A JUMPI JUMPDEST ISZERO PUSH2 0x2E51 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x2D7C JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x2E6E JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x2EAF JUMPI JUMPDEST DUP1 PUSH2 0x2E41 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x2E41 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2F07 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0x2F31 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0x2F7E SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x3029 JUMPI JUMPDEST POP PUSH2 0x2FF3 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x2FEA JUMPI RETURNDATASIZE PUSH2 0x2FAC DUP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x2FBA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x2FE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2FC4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x3011 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3066 JUMPI JUMPDEST PUSH2 0x3041 DUP2 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3062 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x3062 JUMPI SWAP1 CODESIZE PUSH2 0x2F92 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3037 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x30AB JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x3099 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x308F DUP4 PUSH2 0x2BA0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x30BE DUP4 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3147 JUMPI POP PUSH1 0x1 EQ PUSH2 0x30E8 JUMPI JUMPDEST POP PUSH2 0x30E5 SWAP3 POP SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 JUMPDEST DUP5 DUP4 LT PUSH2 0x312C JUMPI POP PUSH2 0x30E5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x3113 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x30E5 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x318B JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x3099 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x308F DUP4 PUSH2 0x2BA0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 SLOAD DUP2 PUSH1 0x0 PUSH2 0x319E DUP4 PUSH2 0x2C75 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3147 JUMPI POP PUSH1 0x1 EQ PUSH2 0x31C4 JUMPI POP PUSH2 0x30E5 SWAP3 POP SUB DUP3 PUSH2 0x2BD6 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x3208 JUMPI POP PUSH2 0x30E5 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x30D8 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x31EF JUMP JUMPDEST SWAP1 PUSH2 0x322D DUP3 PUSH2 0x2BF7 JUMP JUMPDEST PUSH2 0x323A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2BD6 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x324B PUSH1 0x1F NOT SWAP2 PUSH2 0x2BF7 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST ISZERO PUSH2 0x325C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DD185C9D081D1A5B59481D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x329D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210323AB930BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32DC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5061796D656E74206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1CAD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3330 DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 PUSH1 0x40 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP9 SWAP8 SWAP7 SWAP9 PUSH1 0x60 DUP7 MSTORE DUP2 PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP4 ADD ADD SWAP6 AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x338A DUP2 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP5 SWAP1 SWAP3 SWAP1 DUP6 ISZERO PUSH2 0x3593 JUMPI DUP3 DUP8 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE DUP6 DUP9 KECCAK256 SLOAD AND DUP4 DUP8 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x3560 JUMPI JUMPDEST DUP2 DUP12 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 DUP12 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP12 DUP1 LOG4 PUSH2 0x3548 JUMPI EXTCODESIZE PUSH2 0x3421 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x345F SWAP2 DUP6 SWAP7 SWAP8 SWAP9 SWAP5 SWAP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP7 DUP8 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2A96 JUMP JUMPDEST SUB DUP2 DUP11 DUP11 GAS CALL DUP8 SWAP2 DUP2 PUSH2 0x3504 JUMPI JUMPDEST POP PUSH2 0x34CD JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x34C4 JUMPI RETURNDATASIZE PUSH2 0x3487 DUP2 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 PUSH2 0x3494 DUP5 MLOAD SWAP3 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP5 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP4 MLOAD SWAP4 DUP5 PUSH2 0x34BE JUMPI DUP3 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP3 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP4 POP PUSH2 0x349E JUMP JUMPDEST SWAP2 SWAP6 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x34ED JUMPI POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3419 JUMP JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3541 JUMPI JUMPDEST PUSH2 0x351C DUP2 DUP4 PUSH2 0x2BD6 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x353D JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x353D JUMPI SWAP1 CODESIZE PUSH2 0x346D JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3512 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 DUP12 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP12 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x33C0 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x35B2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x35F2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081C185C9D1A58DA5C185B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x384 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x384 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x384 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x384 JUMPI JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x36C5 JUMPI PUSH2 0x36BE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x36D0 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3754 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x3748 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x373F JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3769 DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP1 PUSH2 0x3772 JUMPI POP POP JUMP JUMPDEST PUSH2 0x377B DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x3795 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x379E DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x37BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x37CB PUSH1 0x3 SWAP3 PUSH2 0x2B49 JUMP JUMPDEST EQ PUSH2 0x37D3 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x38EC JUMPI JUMPDEST ISZERO PUSH2 0x3846 JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A02 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x381D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x39F8 JUMPI DUP1 MLOAD PUSH1 0x2 SWAP2 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1CAD JUMPI PUSH1 0x3 SWAP2 DUP3 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1CAD JUMPI PUSH2 0x394E SWAP1 DUP5 SWAP6 SWAP5 SHL PUSH2 0x3223 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP3 SWAP2 DUP4 MLOAD DUP5 ADD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MLOAD SWAP5 PUSH1 0x0 DUP6 MSTORE JUMPDEST DUP4 DUP2 LT PUSH2 0x39A7 JUMPI POP POP POP POP MSTORE MLOAD MOD DUP1 PUSH1 0x1 EQ PUSH2 0x3994 JUMPI PUSH1 0x2 EQ PUSH2 0x3989 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST DUP8 PUSH1 0x4 SWAP2 SWAP10 SWAP3 SWAP4 SWAP5 SWAP10 ADD SWAP2 DUP3 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP5 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP6 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD DUP9 DUP6 ADD MSTORE8 AND DUP6 ADD ADD MLOAD DUP10 DUP3 ADD MSTORE8 ADD SWAP8 SWAP3 SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x3A06 DUP2 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x3B42 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x3B33 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x3B24 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x3B15 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x3B06 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x3AF6 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x3AEC JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AA4 DUP3 DUP8 ADD PUSH2 0x3223 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x3AB6 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x3AE7 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3AAA JUMP JUMPDEST PUSH2 0x3AAF JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x3A93 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A70 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A61 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x3A36 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3B67 DUP4 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x2A DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP5 MLOAD ISZERO PUSH2 0x3C3E JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP4 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x3C3E JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP7 ADD MSTORE8 PUSH1 0x29 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x3BCA JUMPI POP POP POP PUSH2 0x3BAB JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x3C29 JUMPI DUP7 MLOAD DUP6 LT ISZERO PUSH2 0x3C29 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE DUP7 DUP6 ADD DUP4 ADD MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x3C14 JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 PUSH2 0x3B99 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3C5D DUP2 PUSH2 0x2B49 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF3 JUMPI PUSH2 0x3C6C DUP2 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x3CCD JUMPI DUP1 PUSH2 0x3C80 PUSH1 0x2 SWAP3 PUSH2 0x2B49 JUMP JUMPDEST EQ PUSH2 0x3CA9 JUMPI PUSH1 0x40 MLOAD PUSH2 0x3C91 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x14995CDBDB1D9959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB5 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH8 0x111A5CDC1D5D1959 PUSH1 0xC2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3CDA DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x10DBDB5C1B195D1959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3D00 DUP2 PUSH2 0x2BA0 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x14D8DA19591D5B1959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x3FCAE5AF30056254185369B89AA8 SMOD DUP6 0xC2 0xED SWAP3 LOG4 EXTCODECOPY 0xF9 CHAINID STATICCALL 0xB3 0xDE DELEGATECALL PREVRANDAO 0xAA 0xD1 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"637:9559:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:6;637:9559:26;;;;;;;4344:61;637:9559;;;;;;4352:31;;4344:61;:::i;:::-;637:9559;;;4436:11;637:9559;;4466:87;637:9559;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;5470:7:6;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4474:10;:28;:59;;;;;637:9559;4466:87;;;:::i;:::-;637:9559;;;4436:11;637:9559;;;;;5738:8;637:9559;5738:8;;637:9559;;;;;;;;;:::i;:::-;;5738:28;;:59;;;;;637:9559;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;5959:23;637:9559;;;;;;;4474:10;637:9559;;;;;;;5934:61;;637:9559;5934:61;637:9559;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;5738:59;637:9559;;;;;;:::i;:::-;5770:27;5738:59;;;4474;637:9559;;;;;4474:10;4506:27;4474:59;;;;637:9559;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;637:9559:26;;;;2627:22:0;;2623:91;;3004:6;637:9559:26;;-1:-1:-1;;;;;637:9559:26;;;;;3004:6:0;637:9559:26;;3052:40:0;637:9559:26;3052:40:0;;637:9559:26;2623:91:0;637:9559:26;;-1:-1:-1;;;2672:31:0;;637:9559:26;;2672:31:0;;637:9559:26;;;2672:31:0;637:9559:26;;;;;;-1:-1:-1;;637:9559:26;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3776:18:6;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:6;637:9559:26;;4466:87;637:9559;;;;;4344:61;637:9559;;;;;;4352:31;;4344:61;:::i;:::-;637:9559;;;4436:11;637:9559;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;5470:7:6;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4474:10;:28;:59;;;;;4466:87;;;:::i;:::-;637:9559;;;4436:11;637:9559;;;;;;4721:8;637:9559;;;;;;;;;;;:::i;:::-;4721:28;637:9559;;;;4852:54;637:9559;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4474:10;637:9559;;;;4852:54;637:9559;;;;-1:-1:-1;;;637:9559:26;;;;;;;;4436:11;637:9559;;;;-1:-1:-1;;;637:9559:26;;;;;;;4474:59;637:9559;;;;;4474:10;4506:27;4474:59;;;;637:9559;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;5470:7:6;637:9559:26;;;;;;8500:61;;-1:-1:-1;;;;;637:9559:26;8508:31;;8500:61;:::i;:::-;637:9559;;;;8592:11;637:9559;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;5470:7:6;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8737:18;637:9559;;8737:18;:::i;:::-;8892:11;;;637:9559;;;;8947:14;637:9559;9001:31;-1:-1:-1;;;;;637:9559:26;;;;;9001:31;:::i;:::-;637:9559;9077:37;637:9559;;;;;;9077:37;:::i;:::-;637:9559;;;;9163:20;637:9559;;;;9232:19;637:9559;9295:28;637:9559;;;;;;;;;;9295:28;:::i;:::-;637:9559;;;;;;;9366:27;;-1:-1:-1;;;;;637:9559:26;9366:27;:::i;:::-;637:9559;9445:34;637:9559;;;;9445:34;:::i;:::-;637:9559;;9516:25;637:9559;;;;;;;:::i;:::-;9516:25;:::i;:::-;637:9559;;;;9587:36;;637:9559;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;9587:36;;637:9559;;8651:999;;;;637:9559;8651:999;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;637:9559:26;;8651:999;;;;;;;;;;;;:::i;:::-;637:9559;;;;;:::i;:::-;;;;;;;;;;;;;;;753:27:12;;;:::i;:::-;637:9559:26;;9676:77;;637:9559;9676:77;;637:9559;;;;;;;8651:999;637:9559;;;;;;;;;:::i;:::-;;;9676:77;;;;;;8651:999;9676:77;;;;;:::i;:::-;637:9559;;;;;;;;;;;;;:::i;:::-;;;;9587:36;637:9559;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;9587:36;;;637:9559;;;;;;-1:-1:-1;;637:9559:26;;;;;;1500:62:0;;:::i;:::-;637:9559:26;;;5358:11;637:9559;;5396:8;637:9559;;;5396:8;637:9559;;;;;;;;:::i;:::-;5408:15;5396:27;;637:9559;;5527:54;637:9559;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5570:10;637:9559;;;;5527:54;637:9559;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;4851:4:6;637:9559:26;;;;;;;;;;;:::i;:::-;4766:7:6;;;;;;:::i;:::-;735:10:13;4851:4:6;:::i;:::-;637:9559:26;;;;;;;;;;;;;;;;;;;;5470:7:6;637:9559:26;;4466:87;637:9559;;;;;4344:61;637:9559;;;;;;4352:31;;4344:61;:::i;4466:87::-;637:9559;;;4436:11;637:9559;;;;;;5062:8;637:9559;;;;;;;;;;;:::i;:::-;;5062:28;;637:9559;;;;5199:54;637:9559;;5470:7:6;637:9559:26;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;15418:22:6;;15414:91;;735:10:13;637:9559:26;;15514:18:6;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:6;637:9559:26;735:10:13;15575:41:6;;637:9559:26;15414:91:6;637:9559:26;;-1:-1:-1;;;15463:31:6;;637:9559:26;15463:31:6;;637:9559:26;;;;;15463:31:6;637:9559:26;;;;;;-1:-1:-1;;637:9559:26;;;;;;;2473:7:6;637:9559:26;;;;;;:::i;:::-;;;;;;;;;2473:7:6;;;;637:9559:26;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;-1:-1:-1;637:9559:26;;;;;;;;-1:-1:-1;;637:9559:26;;;;1710:6:0;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;6183:41:19;:5;:41;:::i;:::-;6638:47;:8;:47;:::i;:::-;637:9559:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5674:13:19;637:9559:26;;;;5709:4:19;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;1500:62:0;;:::i;:::-;3004:6;637:9559:26;;-1:-1:-1;;;;;;637:9559:26;;;;;;;-1:-1:-1;;;;;637:9559:26;3052:40:0;637:9559:26;;3052:40:0;637:9559:26;;;;;;;-1:-1:-1;;637:9559:26;;;;-1:-1:-1;;;;;637:9559:26;;:::i;:::-;;1947:19:6;;1943:87;;637:9559:26;;;;;;;;;;;;;;;;1943:87:6;637:9559:26;;-1:-1:-1;;;1989:30:6;;637:9559:26;;1989:30:6;;637:9559:26;;;1989:30:6;637:9559:26;;;;;;-1:-1:-1;;637:9559:26;;;;;2192:22:6;637:9559:26;;2192:22:6;:::i;:::-;637:9559:26;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6249:17:26;637:9559;;6249:17;;;:::i;:::-;637:9559;6235:10;:31;637:9559;;-1:-1:-1;;;;;6312:18:26;637:9559;;6312:18;;;:::i;:::-;637:9559;6312:32;;:67;;;637:9559;;;;6414:15;;637:9559;;6414:15;;:::i;:::-;637:9559;;;6432:15;637:9559;6432:15;637:9559;;;;3927:8:18;637:9559:26;6406:73;1739:241;637:9559;-1:-1:-1;;;;;3871:27:18;637:9559:26;;6414:42;6406:73;:::i;:::-;637:9559;6497:21;;637:9559;;6497:21;;:::i;:::-;637:9559;6497:25;;:61;;;637:9559;6489:90;;;:::i;:::-;6589:63;6597:27;637:9559;;6597:27;637:9559;6597:31;;6589:63;:::i;:::-;3993:249:20;1739:241:26;6766:15;637:9559;;;;;6766:15;:::i;:::-;637:9559;1739:241;;:::i;:::-;637:9559;;;;;6750:33;1739:241;6813:18;637:9559;;;6813:18;637:9559;;;;6813:18;:::i;1739:241::-;637:9559;;;;;6797:36;6847:15;6414;637:9559;;6414:15;6847;:::i;:::-;6876:21;6497;637:9559;;6497:21;6876;:::i;:::-;1739:241;6927:24;;637:9559;;6927:24;637:9559;;;;6927:24;:::i;1739:241::-;637:9559;;;;;6911:42;1739:241;6983:23;;637:9559;;6983:23;637:9559;;;;6983:23;:::i;1739:241::-;637:9559;;;;;6967:41;637:9559;;7022:18;6312;637:9559;;6312:18;7022;:::i;:::-;637:9559;-1:-1:-1;;;;;7054:17:26;6249;637:9559;;6249:17;7054;:::i;:::-;637:9559;;;6694:428;637:9559;6694:428;;637:9559;1739:241;637:9559;;;1739:241;;637:9559;6497:21;1739:241;;637:9559;;6927:24;1739:241;;637:9559;;;1739:241;;637:9559;6312:18;1739:241;;637:9559;;1739:241;;637:9559;;;;;;;6597:27;1739:241;;637:9559;;;;;;;;1739:241;;637:9559;6597:27;637:9559;;6597:27;637:9559;1739:241;;;637:9559;1739:241;6694:428;;;;;:::i;:::-;637:9559;6684:439;;5153:20:19;;:::i;:::-;3993:249:20;637:9559:26;3993:249:20;;-1:-1:-1;;;3993:249:20;;;;;;;;;;;637:9559:26;;1739:241;;:::i;:::-;3871:27:18;;:::i;:::-;3927:8;;;;;:::i;:::-;-1:-1:-1;;;;;7271:18:26;637:9559;;6312:18;;7271;:::i;:::-;637:9559;-1:-1:-1;;;;;637:9559:26;;;7261:28;1739:241;;7335:9;637:9559;7335:9;;;:::i;:::-;;637:9559;7412:15;637:9559;;;;;7412:15;:::i;:::-;637:9559;;7455:18;637:9559;;;;6813:18;;;637:9559;7455:18;:::i;:::-;637:9559;7498:15;6414;637:9559;;6414:15;7498;:::i;:::-;7544:21;6497;637:9559;;6497:21;7544;:::i;:::-;7599:24;637:9559;;;6927:24;;;;637:9559;7599:24;:::i;:::-;637:9559;;7656:23;637:9559;;;6983:23;;;;637:9559;7656:23;:::i;:::-;637:9559;;;;;6312:18;;7707;;;:::i;:::-;637:9559;7752:17;6249;637:9559;;6249:17;7752;:::i;:::-;637:9559;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;7377:541;;637:9559;-1:-1:-1;;;;;637:9559:26;;7377:541;;637:9559;;;6497:21;7377:541;;637:9559;;;;;;:::i;:::-;6927:24;7377:541;;637:9559;;;;;;:::i;:::-;;7377:541;;637:9559;-1:-1:-1;;;;;637:9559:26;;;6312:18;7377:541;;637:9559;;;7377:541;;637:9559;6597:27;637:9559;;6597:27;637:9559;6597:27;7377:541;;637:9559;-1:-1:-1;637:9559:26;7377:541;;637:9559;;;1739:241;7377:541;;637:9559;;;;;;7354:11;637:9559;;;;;;;;;;;7377:541;637:9559;-1:-1:-1;;;;;637:9559:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7377:541;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:249:20;637:9559:26;;-1:-1:-1;;;;;637:9559:26;7377:541;;637:9559;;;;7377:541;-1:-1:-1;;;6497:21:26;7377:541;;637:9559;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;6927:24;7377:541;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7377:541;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1739:241;637:9559;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6312:18;7377:541;;637:9559;;;;;;-1:-1:-1;;;;;637:9559:26;;;-1:-1:-1;;;;;;637:9559:26;;;;;;;;7377:541;;637:9559;;;;;;;;;;;;;;;6597:27;7377:541;;637:9559;;;;;;7377:541;;637:9559;;;;7377:541;637:9559;;;;;:::i;:::-;;;:::i;:::-;7377:541;637:9559;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;7959:7;637:9559;7939:18;6312;637:9559;;6312:18;7939;:::i;:::-;7959:7;:::i;:::-;8008:18;6312;637:9559;;6312:18;8008;:::i;:::-;8028:17;6249;637:9559;;6249:17;8028;:::i;:::-;637:9559;7982:127;8047:15;637:9559;;;;;8047:15;:::i;:::-;637:9559;7982:127;8064:15;6414;637:9559;;6414:15;8064;:::i;:::-;637:9559;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;6597:27;;637:9559;;;;7982:127;:::i;:::-;;;;8158:17;6249;637:9559;;6249:17;8158;:::i;:::-;637:9559;8177:18;6312;637:9559;;6312:18;8177;:::i;:::-;637:9559;;;-1:-1:-1;;;;;637:9559:26;;;;;8124:72;;637:9559;;8124:72;637:9559;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;1739:241;637:9559;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;1739:241;637:9559;;-1:-1:-1;;;1739:241:26;;637:9559;;1739:241;;;;637:9559;1739:241;;637:9559;-1:-1:-1;;;6414:15:26;637:9559;;1739:241;6497:21;;1739:241;6497:61;637:9559;6489:90;6551:7;637:9559;6526:21;6497;637:9559;;6497:21;6526;:::i;:::-;637:9559;6526:32;;6497:61;;;;637:9559;;;;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;6312:67;-1:-1:-1;;;;;;6348:17:26;637:9559;;6249:17;;6348;:::i;:::-;637:9559;6348:31;;6312:67;;637:9559;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:7:6;637:9559:26;;8299:61;637:9559;;;;;;;;;;8307:31;;8299:61;:::i;:::-;637:9559;;8377:11;637:9559;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;5470:7:6;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;4851:4:6;637:9559:26;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:6;;;;;:::i;637:9559:26:-;;;;;;-1:-1:-1;;637:9559:26;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;-1:-1:-1;;;;;637:9559:26;3230:26;637:9559;;;;-1:-1:-1;;;;;637:9559:26;3297:25;637:9559;;3374:15;-1:-1:-1;;637:9559:26;;;;;3354:67;3374:15;-1:-1:-1;;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;3362:36;3354:67;:::i;:::-;637:9559;;;3439:19;;:49;;;637:9559;3431:78;;;:::i;:::-;3519:57;637:9559;;3527:25;;3519:57;:::i;:::-;3597:9;637:9559;3597:9;;;;:::i;:::-;;637:9559;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;3639:487;;637:9559;;;-1:-1:-1;;;;;637:9559:26;;3639:487;;637:9559;;;;3639:487;;637:9559;;;;;;:::i;:::-;;3639:487;;637:9559;;;;;;:::i;:::-;;3639:487;;637:9559;-1:-1:-1;;;;;637:9559:26;;;;;3639:487;;637:9559;;;;;3639:487;;637:9559;;;;3639:487;;637:9559;-1:-1:-1;637:9559:26;3639:487;;637:9559;;;3639:487;;;637:9559;;;;;;3616:11;637:9559;;;;;;;;;;;3639:487;637:9559;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:487;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;3639:487;;637:9559;;;;3639:487;-1:-1:-1;;;637:9559:26;3639:487;;637:9559;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;3639:487;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:487;;637:9559;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3639:487;637:9559;;;;;;;;;;-1:-1:-1;;;;637:9559:26;;;;;;;;;;;;;;;;;;3639:487;;637:9559;;;;;;-1:-1:-1;;;;;637:9559:26;;;-1:-1:-1;;;;;;637:9559:26;;;;;;;;3639:487;;637:9559;;;;;;;;;;;;;;;;3639:487;;637:9559;;;;;;3639:487;;637:9559;;;;3639:487;637:9559;;;;;:::i;:::-;4159:7;4147:10;;4159:7;:::i;:::-;637:9559;4182:97;637:9559;;;4182:97;637:9559;;;;;;;;;;;;;;;;;;;;;;;4182:97;;;:::i;:::-;;;;637:9559;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;3639:487;637:9559;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;;;3439:49;-1:-1:-1;3481:7:26;637:9559;;;3462:26;;3439:49;;637:9559;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;637:9559:26;;;;;;:::i;:::-;;;14663:22:6;;;:::i;:::-;735:10:13;14813:18:6;;:35;;;637:9559:26;14813:69:6;;;637:9559:26;14809:142:6;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;15003:28:6;637:9559:26;;15003:28:6;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;;14809:142:6;637:9559:26;;-1:-1:-1;;;14909:27:6;;735:10:13;637:9559:26;14909:27:6;;637:9559:26;;;14909:27:6;14813:69;637:9559:26;;;;;;;;;;3776:18:6;637:9559:26;;;;;735:10:13;637:9559:26;;;;;;;;;;14852:30:6;14813:69;;:35;-1:-1:-1;;;;;;637:9559:26;;735:10:13;14835:13:6;;14813:35;;637:9559:26;;;;;;-1:-1:-1;;637:9559:26;;;;;;3385:22:6;;;:::i;:::-;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;637:9559:26;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1086:35:9;;;:75;;;;637:9559:26;;;;;;;1086:75:9;-1:-1:-1;;;1664:40:6;;;-1:-1:-1;1664:104:6;;;;1086:75:9;1664:156:6;;;;1086:75:9;;;;;1664:156:6;-1:-1:-1;;;829:40:21;;-1:-1:-1;1664:156:6;;;:104;-1:-1:-1;;;1720:48:6;;;-1:-1:-1;1664:104:6;;637:9559:26;;;;;;;;-1:-1:-1;;637:9559:26;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;637:9559:26;;;;:::o;:::-;;;;-1:-1:-1;;;;;637:9559:26;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;637:9559:26;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;637:9559:26;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;-1:-1:-1;;;;;637:9559:26;;;;;;-1:-1:-1;;637:9559:26;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;637:9559:26;;;;;;:::o;1796:162:0:-;1710:6;637:9559:26;-1:-1:-1;;;;;637:9559:26;735:10:13;1855:23:0;1851:101;;1796:162::o;1851:101::-;637:9559:26;;-1:-1:-1;;;1901:40:0;;735:10:13;1901:40:0;;;637:9559:26;;;1901:40:0;637:9559:26;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;637:9559:26;;;;-1:-1:-1;637:9559:26;;;-1:-1:-1;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3852:578:6;-1:-1:-1;;;;;637:9559:26;;;;3852:578:6;;3946:16;;3942:87;;-1:-1:-1;637:9559:26;;;;;;;5470:7:6;637:9559:26;;;;;;;;;;735:10:13;;;;8704:18:6;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;637:9559:26;;;9156:9:6;637:9559:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;9246:27:6;637:9559:26;4319:21:6;;;;4315:109;;3852:578;;;;:::o;4315:109::-;637:9559:26;;;;4363:50:6;;;;;;;;;637:9559:26;;;;;;;;;4363:50:6;8826:256;637:9559:26;;;;15066:15:6;637:9559:26;;;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;9037:9:6;637:9559:26;;;;;;;-1:-1:-1;;637:9559:26;;;8826:256:6;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;637:9559:26;;;;;6967:31:6;;;;;;;;;637:9559:26;6967:31:6;6917:186;637:9559:26;;;7044:44:6;;;;;;735:10:13;7044:44:6;;;637:9559:26;;;;;7044:44:6;6185:127;735:10:13;;6223:16:6;;:52;;;;6185:127;6223:88;6185:127;6223:88;637:9559:26;;;;5705:15:6;637:9559:26;;735:10:13;637:9559:26;;;;;;6279:32:6;6185:127;;6223:52;637:9559:26;;;;3776:18:6;637:9559:26;;;;;735:10:13;637:9559:26;;;;;;;;;;6223:52:6;;3942:87;637:9559:26;;-1:-1:-1;;;3985:33:6;;3960:1;3985:33;;;637:9559:26;;;3985:33:6;15858:241;-1:-1:-1;637:9559:26;;;5470:7:6;637:9559:26;;;;;;-1:-1:-1;;;;;637:9559:26;;15987:19:6;;15983:88;;16080:12;15858:241;:::o;15983:88::-;637:9559:26;;;;6967:31:6;;;;16029;;;;;637:9559:26;16029:31:6;993:926:11;;;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;637:9559:26;;-1:-1:-1;;;1211:67:11;;;-1:-1:-1;;;;;637:9559:26;;;1211:67:11;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;1211:67:11;;637:9559:26;;;;;;;;;;:::i;:::-;1211:67:11;1190:1;;;;1211:67;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:11;;1518:385;;;637:9559:26;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:11;;;637:9559:26;;-1:-1:-1;;;1672:39:11;;1211:67;1672:39;;637:9559:26;;;;;1672:39:11;1564:325;1758:113;;-1:-1:-1;1758:113:11;637:9559:26;;;-1:-1:-1;637:9559:26;;1207:696:11;637:9559:26;;;;;;;;;1325:51:11;1321:182;;1207:696;1169:744;;;;;;;1321:182;637:9559:26;;;;3985:33:6;;;;1445:39:11;;1211:67;1445:39;;637:9559:26;1445:39:11;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;637:9559:26;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;1211:67:11;;;;637:9559:26;;;;1211:67:11;;;;;3368:267:15;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;637:9559:26;;;;;;:::i;:::-;2324:106:15;;2311:2;637:9559:26;;2324:106:15;3553:22;:::o;2675:69::-;637:9559:26;;-1:-1:-1;;;2713:20:15;;;;;3487:142;-1:-1:-1;637:9559:26;;6210:13:19;637:9559:26;;-1:-1:-1;637:9559:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1390:66:15;;;;;;;:::i;:::-;3606:12;:::o;637:9559:26:-;6210:13:19;-1:-1:-1;637:9559:26;;;-1:-1:-1;;637:9559:26;;;;;;;-1:-1:-1;1390:66:15;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:15;637:9559:26;;;;;;;;;;;;;;;;;;;;3368:267:15;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;637:9559:26;;;;;;:::i;3487:142:15:-;-1:-1:-1;637:9559:26;;6668:16:19;637:9559:26;;-1:-1:-1;637:9559:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1390:66:15;;;;;;;:::i;637:9559:26:-;6668:16:19;-1:-1:-1;637:9559:26;;;-1:-1:-1;;637:9559:26;;;;;;;-1:-1:-1;1390:66:15;;-1:-1:-1;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;-1:-1:-1;;637:9559:26;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10302:100:6:-;637:9559:26;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;9691:16:6;;9687:87;;637:9559:26;;;;;5470:7:6;637:9559:26;;;;;;;8830:18:6;;;;;8826:256;;;;10302:100;637:9559:26;;;9156:9:6;637:9559:26;;;;;;;;;;;;;;5470:7:6;637:9559:26;;;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;9246:27:6;637:9559:26;;9246:27:6;9849:96;;1173:14:11;1169:744;;10302:100:6;;;;;;;:::o;1169:744:11:-;637:9559:26;;;;;;;;;;;;;;;;;1211:67:11;;;;735:10:13;1211:67:11;;;637:9559:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:11;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:11;;1518:385;;;637:9559:26;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:11;;;637:9559:26;;-1:-1:-1;;;1672:39:11;;1211:67;1672:39;;637:9559:26;;;;;1672:39:11;1564:325;1758:113;;;;;637:9559:26;;;-1:-1:-1;637:9559:26;;1207:696:11;637:9559:26;;;;;;;;;1325:51:11;1321:182;;1207:696;;1169:744;;;;;;;;1321:182;637:9559:26;;;;3985:33:6;;;;1445:39:11;;1211:67;1445:39;;637:9559:26;1445:39:11;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;637:9559:26;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;1211:67:11;;;;637:9559:26;;;;1211:67:11;;;;;9849:96:6;637:9559:26;;-1:-1:-1;;;9903:31:6;;;;;637:9559:26;;;;;9903:31:6;8826:256;637:9559:26;;;;15066:15:6;637:9559:26;;;;;;;-1:-1:-1;;;;;;637:9559:26;;;;;;9037:9:6;637:9559:26;;;;;;;-1:-1:-1;;637:9559:26;;;8826:256:6;;9687:87;637:9559:26;;-1:-1:-1;;;9730:33:6;;;;;637:9559:26;;;;;9730:33:6;637:9559:26;;;;:::o;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;637:9559:26;;;;;;;;;;;;-1:-1:-1;;;637:9559:26;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;-1:-1:-1;;;;;637:9559:26;;;;;;;:::o;:::-;;;;;;;;;;:::o;1739:241::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1739:241:26;;;;;;;;;;;;;;:::o;2129:778:18:-;637:9559:26;;;2129:778:18;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:18;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;5203:1551::-;;;6283:66;6270:79;;6266:164;;637:9559:26;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:18;;;;;;;;;;;;;;-1:-1:-1;;;;;637:9559:26;;6579:20:18;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;637:9559:26;;;;;;;;;;6266:164:18;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;637:9559:26;;;:::i;:::-;7366:29:18;;;7411:7;;:::o;7362:444::-;637:9559:26;;;:::i;:::-;7471:29:18;7462:38;;7471:29;;637:9559:26;;-1:-1:-1;;;7523:23:18;;;;;7458:348;637:9559:26;;;:::i;:::-;7576:35:18;7567:44;;7576:35;;637:9559:26;;-1:-1:-1;;;7634:46:18;;;;;637:9559:26;;;;;7634:46:18;7563:243;637:9559:26;;7710:30:18;637:9559:26;;:::i;:::-;7701:39:18;7697:109;;7563:243;7280:532::o;7697:109::-;637:9559:26;;;;7763:32:18;;;;;;;;;637:9559:26;7763:32:18;3945:262:19;4029:4;4038:11;-1:-1:-1;;;;;637:9559:26;4021:28:19;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;637:9559:26;;4304:80:19;;;637:9559:26;2079:95:19;637:9559:26;;4326:11:19;637:9559:26;2079:95:19;;637:9559:26;4339:14:19;2079:95;;;637:9559:26;4355:13:19;2079:95;;;637:9559:26;4029:4:19;637:9559:26;2079:95:19;;637:9559:26;;4304:80:19;;2079:95;637:9559:26;;;;;-1:-1:-1;;;;;637:9559:26;;;;;;;;4294:91:19;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;1186:3994:12;637:9559:26;;1515:16:12;1511:31;;637:9559:26;;2537:1:12;637:9559:26;;;;;;;;;2542:1:12;;637:9559:26;;;-1:-1:-1;;;;;637:9559:26;;;;;;2606:24:12;637:9559:26;;;;;2606:24:12;:::i;:::-;2641:2509;;;;;;;;;;;;;;;;;;;1530:1;2641:2509;;;;;;;;;;;;;;;2542:1;2641:2509;2542:1;;;2641:2509;;;;5160:13;1186:3994;:::o;2641:2509::-;;;-1:-1:-1;;2641:2509:12;;1186:3994;:::o;2641:2509::-;-1:-1:-1;2641:2509:12;;;-1:-1:-1;;2641:2509:12;;;-1:-1:-1;;2641:2509:12;;1186:3994;:::o;2641:2509::-;;;;;;;;;;;;;637:9559:26;2641:2509:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:31;637:9559:26;;;;;;;:::i;:::-;1530:1:12;637:9559:26;;1533:9:12;:::o;1308:634:17:-;1430:17;-1:-1:-1;29291:8:23;;29282:17;;;;29278:103;;1308:634:17;29407:8:23;;29398:17;;;;29394:103;;1308:634:17;29523:8:23;;29514:17;;;;29510:103;;1308:634:17;29639:7:23;;29630:16;;;;29626:100;;1308:634:17;29752:7:23;;29743:16;;;;29739:100;;1308:634:17;29856:16:23;29865:7;29856:16;;;29852:100;;1308:634:17;29978:7:23;29969:16;;;;29965:66;;1308:634:17;1450:1;637:9559:26;;1545:94:17;1488:18;637:9559:26;;;1488:18:17;:::i;:::-;1520:11;1545:94;;;1652:247;1450:1;;;1652:247;1912:13;;;;1308:634;:::o;1652:247::-;-1:-1:-1;;637:9559:26;;;;-1:-1:-1;;;1706:111:17;;;;637:9559:26;1706:111:17;637:9559:26;1834:11:17;;1867:10;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:23;637:9559:26;30015:1:23;637:9559:26;29965:66:23;;;29852:100;637:9559:26;;29865:7:23;29936:1;637:9559:26;;;;29852:100:23;;;29739;29823:1;637:9559:26;;;;;;29739:100:23;;;;29626;29710:1;637:9559:26;;;;;;29626:100:23;;;;29510:103;29596:2;637:9559:26;;;;;;29510:103:23;;;;29394;29480:2;637:9559:26;;;;;;29394:103:23;;;;29278;29364:2;;-1:-1:-1;637:9559:26;;;-1:-1:-1;29278:103:23;;;9767:151:26;637:9559;;;-1:-1:-1;;;;;637:9559:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2805:15:17;;;637:9559:26;;;;;;;;;;;2830:15:17;637:9559:26;;;2830:15:17;637:9559:26;2855:140:17;2888:5;;;;;;3008:15;;;3004:96;;9854:57:26;9767:151;:::o;3004:96:17:-;384:18;637:9559:26;;;3046:43:17;;;;;;2983:1;3046:43;;637:9559:26;9908:2;384:18:17;;;637:9559:26;3046:43:17;2895:3;2937:16;;;2950:3;2937:16;;2926:28;;;;;;637:9559:26;;;;;;;-1:-1:-1;;;2926:28:17;;637:9559:26;;;;;2914:40:17;2983:1;637:9559:26;2895:3:17;637:9559:26;;;;-1:-1:-1;;637:9559:26;;2860:26:17;;;637:9559:26;;;;;;;;;2983:1:17;637:9559:26;;;;;;;;;;;2983:1:17;637:9559:26;;;;;;-1:-1:-1;637:9559:26;;;;;-1:-1:-1;637:9559:26;9924:270;637:9559;;;:::i;:::-;10011:21;;10007:45;;637:9559;;;:::i;:::-;10071:16;10066:21;;10062:45;;637:9559;;10126:15;637:9559;;:::i;:::-;10121:20;10117:43;;637:9559;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;9924:270;:::o;10117:43::-;637:9559;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;10143:17;:::o;10062:45::-;637:9559;;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;10089:18;:::o;10007:45::-;637:9559;;;;;;:::i;:::-;;;;-1:-1:-1;;;637:9559:26;;;;10034:18;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","createAgreement(string,string,uint64,uint32,string,string,address,address,uint256)":"2b95da66","createAgreementWithArtistSig((string,string,uint64,uint32,string,string,address,address,uint256),bytes)":"5eb37a31","eip712Domain()":"84b0196e","getAgreement(uint256)":"4f9f6fe6","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","markCompleted(uint256)":"cac5c512","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","raiseDispute(uint256)":"a5c1674e","recordPayment(uint256)":"fefa9291","renounceOwnership()":"715018a6","resolveDispute(uint256)":"c2b7b868","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artistWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"venueWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"venueName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentAmountUsdCents\",\"type\":\"uint256\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"venueWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artistWallet\",\"type\":\"address\"}],\"name\":\"AgreementSignedAndMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUsdCents\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recorder\",\"type\":\"address\"}],\"name\":\"PaymentRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PerformanceAgreementNFT.Status\",\"name\":\"previous\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum PerformanceAgreementNFT.Status\",\"name\":\"current\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"StatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"venueName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"durationMinutes\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"artistSocialHandle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueSocialHandle\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"artistWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"venueWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmountUsdCents\",\"type\":\"uint256\"}],\"name\":\"createAgreement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"venueName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"durationMinutes\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"artistSocialHandle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueSocialHandle\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"artistWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"venueWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmountUsdCents\",\"type\":\"uint256\"}],\"internalType\":\"struct PerformanceAgreementNFT.AgreementInput\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"artistSignature\",\"type\":\"bytes\"}],\"name\":\"createAgreementWithArtistSig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"venueName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"durationMinutes\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"artistSocialHandle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"venueSocialHandle\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"artistWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"venueWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmountUsdCents\",\"type\":\"uint256\"},{\"internalType\":\"enum PerformanceAgreementNFT.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"paymentRecorded\",\"type\":\"bool\"}],\"internalType\":\"struct PerformanceAgreementNFT.Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"markCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"raiseDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"recordPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Each token stores agreement metadata on-chain and can produce a JSON tokenURI.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PerformanceAgreementNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAgreement(string,string,uint64,uint32,string,string,address,address,uint256)\":{\"notice\":\"Create a new performance agreement NFT.\"},\"createAgreementWithArtistSig((string,string,uint64,uint32,string,string,address,address,uint256),bytes)\":{\"notice\":\"Creates agreement NFT after artist has signed off-chain.\"}},\"notice\":\"ERC721 token representing a performance agreement between an artist and a venue.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PerformanceAgreementNFT.sol\":\"PerformanceAgreementNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xed82055e8e44241f0f55892198960452018fa743e419ba469a2583c43103965a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07187a5099b0d5ddc124f9e6e287063795096c3f46a61563e3b6f6def88958b2\",\"dweb:/ipfs/QmSkxuUbThjVLpQmP4TW1LibWEVpXShsn3mSsXuWZVetL4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/PerformanceAgreementNFT.sol\":{\"keccak256\":\"0x53249ac47f5dcdb2a239eb47d8650daa7f0b6ecd8fa62bb6ba13f44581403ecd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e74317c9d905b9256d9e347d6a8483f372ffbf680fcf3486fa1cac0507fc0d\",\"dweb:/ipfs/QmRu6vRpoCvB4BiqPP1yp6UouuGtR6MQVe7pbzdKCYyEhf\"]}},\"version\":1}"}}}}}